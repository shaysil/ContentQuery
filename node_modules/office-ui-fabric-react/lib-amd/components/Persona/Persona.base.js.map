{"version":3,"file":"Persona.base.js","sourceRoot":"../src/","sources":["components/Persona/Persona.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  classNamesFunction,\r\n  customizable,\r\n  divProperties,\r\n  getNativeProps,\r\n  IRenderFunction,\r\n} from '../../Utilities';\r\nimport { TooltipHost, TooltipOverflowMode, DirectionalHint } from '../../Tooltip';\r\nimport { PersonaCoin } from './PersonaCoin/PersonaCoin';\r\nimport {\r\n  IPersonaProps,\r\n  IPersonaSharedProps,\r\n  IPersonaStyleProps,\r\n  IPersonaStyles,\r\n  PersonaPresence as PersonaPresenceEnum,\r\n  PersonaSize,\r\n} from './Persona.types';\r\n\r\nconst getClassNames = classNamesFunction<IPersonaStyleProps, IPersonaStyles>();\r\n\r\n/**\r\n * Persona with no default styles.\r\n * [Use the `getStyles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\r\n */\r\n@customizable('Persona', ['theme'])\r\nexport class PersonaBase extends BaseComponent<IPersonaProps, {}> {\r\n  public static defaultProps: IPersonaProps = {\r\n    size: PersonaSize.size48,\r\n    presence: PersonaPresenceEnum.none,\r\n    imageAlt: ''\r\n  };\r\n\r\n  constructor(props: IPersonaProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({ 'primaryText': 'text' });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    // wrapping default render behavior based on various this.props properties\r\n    const _onRenderPrimaryText = this._onRenderText(this._getText()),\r\n      _onRenderSecondaryText = this._onRenderText(this.props.secondaryText),\r\n      _onRenderTertiaryText = this._onRenderText(this.props.tertiaryText),\r\n      _onRenderOptionalText = this._onRenderText(this.props.optionalText);\r\n\r\n    const {\r\n      hidePersonaDetails,\r\n      onRenderOptionalText = _onRenderOptionalText,\r\n      onRenderPrimaryText = _onRenderPrimaryText,\r\n      onRenderSecondaryText = _onRenderSecondaryText,\r\n      onRenderTertiaryText = _onRenderTertiaryText,\r\n    } = this.props;\r\n    const size = this.props.size as PersonaSize;\r\n\r\n    // These properties are to be explicitly passed into PersonaCoin because they are the only props directly used\r\n    const {\r\n      allowPhoneInitials,\r\n      className,\r\n      coinProps,\r\n      showUnknownPersonaCoin,\r\n      coinSize,\r\n      getStyles,\r\n      imageAlt,\r\n      imageInitials,\r\n      imageShouldFadeIn,\r\n      imageShouldStartVisible,\r\n      imageUrl,\r\n      initialsColor,\r\n      onPhotoLoadingStateChange,\r\n      onRenderCoin,\r\n      onRenderInitials,\r\n      presence,\r\n      showSecondaryText,\r\n      theme,\r\n    } = this.props;\r\n\r\n    const personaCoinProps: IPersonaSharedProps = {\r\n      allowPhoneInitials,\r\n      coinProps,\r\n      showUnknownPersonaCoin,\r\n      coinSize,\r\n      imageAlt,\r\n      imageInitials,\r\n      imageShouldFadeIn,\r\n      imageShouldStartVisible,\r\n      imageUrl,\r\n      initialsColor,\r\n      onPhotoLoadingStateChange,\r\n      onRenderCoin,\r\n      onRenderInitials,\r\n      presence,\r\n      size,\r\n      text: this._getText()\r\n    };\r\n\r\n    const classNames = getClassNames(getStyles, {\r\n      theme: theme!,\r\n      className,\r\n      showSecondaryText,\r\n      presence,\r\n      size,\r\n    });\r\n\r\n    const divProps = getNativeProps(this.props, divProperties);\r\n    const personaDetails = (\r\n      <div className={ classNames.details }>\r\n        { this._renderElement(classNames.primaryText, onRenderPrimaryText, _onRenderPrimaryText) }\r\n        { this._renderElement(classNames.secondaryText, onRenderSecondaryText, _onRenderSecondaryText) }\r\n        { this._renderElement(classNames.tertiaryText, onRenderTertiaryText, _onRenderTertiaryText) }\r\n        { this._renderElement(classNames.optionalText, onRenderOptionalText, _onRenderOptionalText) }\r\n        { this.props.children }\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div\r\n        { ...divProps }\r\n        className={ classNames.root }\r\n        style={ coinSize ? { height: coinSize, minWidth: coinSize } : undefined }\r\n      >\r\n        <PersonaCoin { ...personaCoinProps } />\r\n        { (!hidePersonaDetails || (size === PersonaSize.size10 || size === PersonaSize.tiny)) && personaDetails }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Deprecation helper for getting text.\r\n   */\r\n  private _getText(): string {\r\n    return this.props.text || this.props.primaryText || '';\r\n  }\r\n\r\n  /**\r\n   * Renders various types of Text (primaryText, secondaryText, etc)\r\n   * based on the classNames passed\r\n   * @param classNames\r\n   * @param renderFunction\r\n   * @param defaultRenderFunction\r\n   */\r\n  private _renderElement(\r\n    classNames: string,\r\n    renderFunction: IRenderFunction<IPersonaProps> | undefined,\r\n    defaultRenderFunction: IRenderFunction<IPersonaProps> | undefined\r\n  ): JSX.Element {\r\n    return <div className={ classNames }>{ renderFunction && renderFunction(this.props, defaultRenderFunction) }</div>;\r\n  }\r\n\r\n  /**\r\n   * using closure to wrap the default render behavior\r\n   * to make it independent of the type of text passed\r\n   * @param text\r\n   */\r\n  private _onRenderText(text: string | undefined): IRenderFunction<IPersonaProps> | undefined {\r\n    // return default render behaviour for valid text or undefined\r\n    return text\r\n      ? (): JSX.Element => {\r\n        // default onRender behaviour\r\n        return (\r\n          <TooltipHost\r\n            content={ text }\r\n            overflowMode={ TooltipOverflowMode.Parent }\r\n            directionalHint={ DirectionalHint.topLeftEdge }\r\n          >\r\n            { text }\r\n          </TooltipHost>\r\n        );\r\n      }\r\n      : undefined;\r\n  }\r\n}\r\n"]}
{"version":3,"file":"DetailsHeader.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { BaseComponent, css, getRTL, getId, KeyCodes, IRenderFunction, createRef } from '../../Utilities';\r\nimport {\r\n  IColumn,\r\n  DetailsListLayoutMode,\r\n  IDetailsHeaderProps,\r\n  IColumnDragDropDetails,\r\n  ColumnDragEndLocation,\r\n  IColumnReorderOptions\r\n} from './DetailsList.types';\r\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Icon } from '../../Icon';\r\nimport { Layer } from '../../Layer';\r\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\r\nimport { CollapseAllVisibility } from '../../GroupedList';\r\nimport { DetailsRowCheck } from './DetailsRowCheck';\r\nimport { ITooltipHostProps } from '../../Tooltip';\r\nimport * as checkStylesModule from './DetailsRowCheck.scss';\r\nimport { ISelection, SelectionMode, SELECTION_CHANGE } from '../../utilities/selection/interfaces';\r\nimport * as stylesImport from './DetailsHeader.scss';\r\nimport { IDragDropOptions } from './../../utilities/dragdrop/interfaces';\r\nimport { DragDropHelper } from './../../utilities/dragdrop';\r\nimport { DetailsColumn, IDetailsColumnProps } from './../../components/DetailsList/DetailsColumn';\r\n\r\nconst styles: any = stylesImport;\r\nconst checkStyles: any = checkStylesModule;\r\n\r\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\r\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\r\n\r\nconst NO_COLUMNS: IColumn[] = [];\r\n\r\nexport interface IDetailsHeader {\r\n  focus: () => boolean;\r\n}\r\n\r\nexport interface IDetailsHeaderProps extends React.Props<DetailsHeader> {\r\n  componentRef?: (component: IDetailsHeader | null) => void;\r\n  columns: IColumn[];\r\n  selection: ISelection;\r\n  selectionMode: SelectionMode;\r\n  layoutMode: DetailsListLayoutMode;\r\n  onColumnIsSizingChanged?: (column: IColumn, isSizing: boolean) => void;\r\n  onColumnResized?: (column: IColumn, newWidth: number, columnIndex: number) => void;\r\n  onColumnAutoResized?: (column: IColumn, columnIndex: number) => void;\r\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => void;\r\n  onColumnContextMenu?: (column: IColumn, ev: React.MouseEvent<HTMLElement>) => void;\r\n  onRenderColumnHeaderTooltip?: IRenderFunction<ITooltipHostProps>;\r\n  groupNestingDepth?: number;\r\n  collapseAllVisibility?: CollapseAllVisibility;\r\n  isAllCollapsed?: boolean;\r\n  onToggleCollapseAll?: (isAllCollapsed: boolean) => void;\r\n  /** ariaLabel for the entire header */\r\n  ariaLabel?: string;\r\n  /** ariaLabel for the header checkbox that selects or deselects everything */\r\n  ariaLabelForSelectAllCheckbox?: string;\r\n  ariaLabelForSelectionColumn?: string;\r\n  selectAllVisibility?: SelectAllVisibility;\r\n  columnReorderOptions?: IColumnReorderOptions;\r\n  /** Column reordering options */\r\n  columnReorderProps?: IColumnReorderHeaderProps;\r\n  minimumPixelsForDrag?: number;\r\n}\r\n\r\nexport enum SelectAllVisibility {\r\n  none = 0,\r\n  hidden = 1,\r\n  visible = 2\r\n}\r\n\r\nexport interface IColumnReorderHeaderProps extends IColumnReorderOptions {\r\n  /** Callback to notify the column dragEnd event to List\r\n   * Need this to check whether the dragEnd has happened on\r\n   * corresponding list or outside of the list\r\n   */\r\n  onColumnDragEnd?: (props: { dropLocation?: ColumnDragEndLocation }, event: MouseEvent) => void;\r\n}\r\n\r\nexport interface IDetailsHeaderState {\r\n  columnResizeDetails?: IColumnResizeDetails;\r\n  isAllSelected?: boolean;\r\n  isSizing?: boolean;\r\n  groupNestingDepth?: number;\r\n  isAllCollapsed?: boolean;\r\n}\r\n\r\nexport interface IColumnResizeDetails {\r\n  columnIndex: number;\r\n  originX?: number;\r\n  columnMinWidth: number;\r\n}\r\n\r\nexport interface IDropHintDetails {\r\n  originX: number; // X index of dropHint Element relative to header\r\n  startX: number; // start index of the range for the current drophint\r\n  endX: number; // end index of the range for the current drophint\r\n  dropHintElementRef: HTMLElement; // Reference for drophint to change the style when needed\r\n}\r\n\r\nexport class DetailsHeader extends BaseComponent<IDetailsHeaderProps, IDetailsHeaderState> implements IDetailsHeader {\r\n  public static defaultProps = {\r\n    selectAllVisibility: SelectAllVisibility.visible,\r\n    collapseAllVisibility: CollapseAllVisibility.visible\r\n  };\r\n  private _rootElement: HTMLElement | undefined;\r\n  private _rootComponent = createRef<IFocusZone>();\r\n  private _id: string;\r\n  private _draggedColumnIndex = -1;\r\n  private _dropHintDetails: { [key: number]: IDropHintDetails } = {};\r\n  private _dragDropHelper: DragDropHelper | null;\r\n  private _currentDropHintIndex: number;\r\n  private _columnReorderProps: IColumnReorderHeaderProps | undefined;\r\n  private _subscriptionObject: {\r\n    key: string;\r\n    dispose(): void;\r\n  };\r\n  private _onDropIndexInfo: {\r\n    sourceIndex: number;\r\n    targetIndex: number;\r\n  };\r\n  constructor(props: IDetailsHeaderProps) {\r\n    super(props);\r\n    this._columnReorderProps =\r\n      props.columnReorderProps ||\r\n      (props.columnReorderOptions && getLegacyColumnReorderProps(props.columnReorderOptions));\r\n    this.state = {\r\n      columnResizeDetails: undefined,\r\n      groupNestingDepth: this.props.groupNestingDepth,\r\n      isAllCollapsed: this.props.isAllCollapsed\r\n    };\r\n\r\n    this._onToggleCollapseAll = this._onToggleCollapseAll.bind(this);\r\n    this._onSelectAllClicked = this._onSelectAllClicked.bind(this);\r\n    this._setDraggedItemIndex = this._setDraggedItemIndex.bind(this);\r\n    this._updateDragInfo = this._updateDragInfo.bind(this);\r\n    this._onDragOver = this._onDragOver.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this._getHeaderDragDropOptions = this._getHeaderDragDropOptions.bind(this);\r\n    this._updateDroppingState = this._updateDroppingState.bind(this);\r\n    this._getDropHintPositions = this._getDropHintPositions.bind(this);\r\n    this._computeDropHintToBeShown = this._computeDropHintToBeShown.bind(this);\r\n    this._resetDropHints = this._resetDropHints.bind(this);\r\n    this._isValidCurrentDropHintIndex = this._isValidCurrentDropHintIndex.bind(this);\r\n    this._onRootRef = this._onRootRef.bind(this);\r\n    this._isEventOnHeader = this._isEventOnHeader.bind(this);\r\n    this._onDropIndexInfo = {\r\n      sourceIndex: Number.MIN_SAFE_INTEGER,\r\n      targetIndex: Number.MIN_SAFE_INTEGER\r\n    };\r\n    this._id = getId('header');\r\n    this._currentDropHintIndex = Number.MIN_SAFE_INTEGER;\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const { selection } = this.props;\r\n    const columnReorderProps = this._columnReorderProps;\r\n\r\n    this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged);\r\n\r\n    // We need to use native on this to avoid MarqueeSelection from handling the event before us.\r\n    this._events.on(this._rootElement!, 'mousedown', this._onRootMouseDown);\r\n\r\n    this._events.on(this._rootElement!, 'keydown', this._onRootKeyDown);\r\n\r\n    if (columnReorderProps && this._dragDropHelper) {\r\n      this._subscriptionObject = this._dragDropHelper.subscribe(\r\n        this._rootElement!,\r\n        this._events,\r\n        this._getHeaderDragDropOptions()\r\n      );\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IDetailsHeaderProps): void {\r\n    this._columnReorderProps =\r\n      this.props.columnReorderProps ||\r\n      (this.props.columnReorderOptions && getLegacyColumnReorderProps(this.props.columnReorderOptions));\r\n    const columnReorderProps = this._columnReorderProps;\r\n\r\n    if (!columnReorderProps) {\r\n      if (this._subscriptionObject) {\r\n        this._subscriptionObject.dispose();\r\n        delete this._subscriptionObject;\r\n      }\r\n    } else if (!this._subscriptionObject && this._dragDropHelper) {\r\n      this._subscriptionObject = this._dragDropHelper.subscribe(\r\n        this._rootElement!,\r\n        this._events,\r\n        this._getHeaderDragDropOptions()\r\n      );\r\n    }\r\n\r\n    if (this.props !== prevProps && this._onDropIndexInfo.sourceIndex >= 0 && this._onDropIndexInfo.targetIndex >= 0) {\r\n      if (\r\n        prevProps.columns[this._onDropIndexInfo.sourceIndex].key ===\r\n        this.props.columns[this._onDropIndexInfo.targetIndex].key\r\n      ) {\r\n        this._onDropIndexInfo = {\r\n          sourceIndex: Number.MIN_SAFE_INTEGER,\r\n          targetIndex: Number.MIN_SAFE_INTEGER\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDetailsHeaderProps): void {\r\n    const { groupNestingDepth } = this.state;\r\n\r\n    if (newProps.groupNestingDepth !== groupNestingDepth) {\r\n      this.setState({ groupNestingDepth: newProps.groupNestingDepth });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this._subscriptionObject) {\r\n      this._subscriptionObject.dispose();\r\n      delete this._subscriptionObject;\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      columns,\r\n      ariaLabel,\r\n      ariaLabelForSelectAllCheckbox,\r\n      selectAllVisibility,\r\n      ariaLabelForSelectionColumn,\r\n      onColumnClick,\r\n      onColumnContextMenu\r\n    } = this.props;\r\n    const columnReorderProps = this._columnReorderProps;\r\n    const { isAllSelected, columnResizeDetails, isSizing, groupNestingDepth, isAllCollapsed } = this.state;\r\n    const showCheckbox = selectAllVisibility !== SelectAllVisibility.none;\r\n\r\n    const { onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip } = this.props;\r\n    if (!this._dragDropHelper && columnReorderProps) {\r\n      this._dragDropHelper = new DragDropHelper({\r\n        selection: {\r\n          getSelection: () => {\r\n            return;\r\n          }\r\n        } as ISelection,\r\n        minimumPixelsForDrag: this.props.minimumPixelsForDrag\r\n      });\r\n    }\r\n    const frozenColumnCountFromStart =\r\n      columnReorderProps && columnReorderProps.frozenColumnCountFromStart\r\n        ? columnReorderProps.frozenColumnCountFromStart!\r\n        : 0;\r\n    const frozenColumnCountFromEnd =\r\n      columnReorderProps && columnReorderProps.frozenColumnCountFromEnd\r\n        ? columnReorderProps.frozenColumnCountFromEnd!\r\n        : 0;\r\n\r\n    return (\r\n      <FocusZone\r\n        role='row'\r\n        aria-label={ ariaLabel }\r\n        className={ css(\r\n          'ms-DetailsHeader',\r\n          styles.root,\r\n          isAllSelected && 'is-allSelected ' + styles.rootIsAllSelected,\r\n          selectAllVisibility === SelectAllVisibility.hidden && 'is-selectAllHidden ' + styles.rootIsSelectAllHidden,\r\n          !!columnResizeDetails && isSizing && 'is-resizingColumn'\r\n        ) }\r\n        componentRef={ this._rootComponent }\r\n        ref={ this._onRootRef }\r\n        onMouseMove={ this._onRootMouseMove }\r\n        data-automationid='DetailsHeader'\r\n        direction={ FocusZoneDirection.horizontal }\r\n      >\r\n        { showCheckbox\r\n          ? [\r\n            <div\r\n              key='__checkbox'\r\n              className={ css(\r\n                'ms-DetailsHeader-cell',\r\n                'ms-DetailsHeader-cellIsCheck',\r\n                styles.cell,\r\n                styles.cellIsCheck,\r\n                checkStyles.owner,\r\n                isAllSelected && checkStyles.isSelected\r\n              ) }\r\n              aria-labelledby={ `${this._id}-check` }\r\n              onClick={ this._onSelectAllClicked }\r\n              aria-colindex={ 1 }\r\n              role='columnheader'\r\n            >\r\n              { onRenderColumnHeaderTooltip(\r\n                {\r\n                  hostClassName: css(styles.checkTooltip),\r\n                  id: `${this._id}-checkTooltip`,\r\n                  setAriaDescribedBy: false,\r\n                  content: ariaLabelForSelectAllCheckbox,\r\n                  children: (\r\n                    <DetailsRowCheck\r\n                      id={ `${this._id}-check` }\r\n                      aria-label={ ariaLabelForSelectionColumn }\r\n                      aria-describedby={ `${this._id}-checkTooltip` }\r\n                      data-is-focusable={ true }\r\n                      isHeader={ true }\r\n                      selected={ isAllSelected }\r\n                      anySelected={ false }\r\n                      canSelect={ true }\r\n                    />\r\n                  )\r\n                },\r\n                this._onRenderColumnHeaderTooltip\r\n              ) }\r\n            </div>,\r\n            ariaLabelForSelectAllCheckbox && !this.props.onRenderColumnHeaderTooltip ? (\r\n              <label key='__checkboxLabel' id={ `${this._id}-checkTooltip` } className={ styles.accessibleLabel }>\r\n                { ariaLabelForSelectAllCheckbox }\r\n              </label>\r\n            ) : null\r\n          ]\r\n          : null }\r\n        { groupNestingDepth! > 0 && this.props.collapseAllVisibility === CollapseAllVisibility.visible ? (\r\n          <div\r\n            className={ css('ms-DetailsHeader-cell', styles.cell) }\r\n            onClick={ this._onToggleCollapseAll }\r\n            data-is-focusable={ true }\r\n          >\r\n            <Icon\r\n              className={ css(\r\n                'ms-DetailsHeader-collapseButton',\r\n                styles.collapseButton,\r\n                isAllCollapsed && 'is-collapsed ' + styles.collapseButtonIsCollapsed\r\n              ) }\r\n              iconName='ChevronDown'\r\n            />\r\n          </div>\r\n        ) : null }\r\n        { GroupSpacer({ count: groupNestingDepth! - 1 }) }\r\n        { columns.map((column: IColumn, columnIndex: number) => {\r\n          const _isDraggable = columnReorderProps\r\n            ? columnIndex >= frozenColumnCountFromStart && columnIndex < columns.length - frozenColumnCountFromEnd\r\n            : false;\r\n          return [\r\n            columnReorderProps &&\r\n            (_isDraggable || columnIndex === columns.length - frozenColumnCountFromEnd) &&\r\n            this._renderDropHint(columnIndex),\r\n            <DetailsColumn\r\n              column={ column }\r\n              key={ column.key }\r\n              columnIndex={ (showCheckbox ? 1 : 0) + columnIndex }\r\n              parentId={ this._id }\r\n              isDraggable={ _isDraggable }\r\n              updateDragInfo={ this._updateDragInfo }\r\n              dragDropHelper={ this._dragDropHelper }\r\n              onColumnClick={ onColumnClick }\r\n              onColumnContextMenu={ onColumnContextMenu }\r\n              isDropped={ this._onDropIndexInfo.targetIndex === columnIndex }\r\n            />,\r\n            this._renderColumnDivider(columnIndex)\r\n          ];\r\n        }) }\r\n        { columnReorderProps && frozenColumnCountFromEnd === 0 && this._renderDropHint(columns.length) }\r\n        { isSizing && (\r\n          <Layer>\r\n            <div\r\n              className={ css(isSizing && styles.sizingOverlay) }\r\n              onMouseMove={ this._onSizerMouseMove }\r\n              onMouseUp={ this._onSizerMouseUp }\r\n            />\r\n          </Layer>\r\n        ) }\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  /** Set focus to the active thing in the focus area. */\r\n  public focus(): boolean {\r\n    return Boolean(this._rootComponent.current && this._rootComponent.current.focus());\r\n  }\r\n\r\n  private _getHeaderDragDropOptions(): IDragDropOptions {\r\n    const options = {\r\n      selectionIndex: 1,\r\n      context: { data: this, index: 0 },\r\n      canDrag: () => false,\r\n      canDrop: () => true,\r\n      onDragStart: () => undefined,\r\n      updateDropState: this._updateDroppingState,\r\n      onDrop: this._onDrop,\r\n      onDragEnd: () => undefined,\r\n      onDragOver: this._onDragOver\r\n    };\r\n    return options;\r\n  }\r\n\r\n  private _updateDroppingState(newValue: boolean, event: DragEvent): void {\r\n    if (this._draggedColumnIndex >= 0 && event.type !== 'drop') {\r\n      if (!newValue) {\r\n        this._resetDropHints();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isValidCurrentDropHintIndex() {\r\n    return this._currentDropHintIndex! >= 0;\r\n  }\r\n\r\n  private _onDragOver(item: any, event: DragEvent): void {\r\n    if (this._draggedColumnIndex >= 0) {\r\n      event.stopPropagation();\r\n      this._computeDropHintToBeShown(event.clientX);\r\n    }\r\n  }\r\n\r\n  private _onDrop(item?: any, event?: DragEvent): void {\r\n    const draggedColumnIndex = this._draggedColumnIndex;\r\n    const columnReorderProps = this._columnReorderProps;\r\n    // Target index will not get changed if draggeditem is after target item.\r\n    if (this._draggedColumnIndex >= 0 && event) {\r\n      const targetIndex =\r\n        draggedColumnIndex > this._currentDropHintIndex!\r\n          ? this._currentDropHintIndex!\r\n          : this._currentDropHintIndex! - 1;\r\n      let isValidDrop = false;\r\n      event.stopPropagation();\r\n      if (this._isValidCurrentDropHintIndex()) {\r\n        isValidDrop = true;\r\n        this._onDropIndexInfo.sourceIndex = draggedColumnIndex;\r\n        this._onDropIndexInfo.targetIndex = targetIndex;\r\n      }\r\n      this._resetDropHints();\r\n      this._dropHintDetails = {};\r\n      this._draggedColumnIndex = -1;\r\n      if (isValidDrop) {\r\n        if (columnReorderProps && columnReorderProps.onColumnDrop) {\r\n          const dragDropDetails: IColumnDragDropDetails = {\r\n            draggedIndex: draggedColumnIndex,\r\n            targetIndex: targetIndex\r\n          };\r\n          columnReorderProps.onColumnDrop(dragDropDetails);\r\n        } else if (columnReorderProps && columnReorderProps.handleColumnReorder) {\r\n          columnReorderProps.handleColumnReorder(draggedColumnIndex, targetIndex);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _setDraggedItemIndex(itemIndex: number) {\r\n    if (itemIndex >= 0) {\r\n      // Column index is set based on the checkbox\r\n      this._draggedColumnIndex = this.props.selectionMode !== SelectionMode.none ? itemIndex - 1 : itemIndex - 0;\r\n      this._getDropHintPositions();\r\n    } else {\r\n      this._resetDropHints();\r\n      this._draggedColumnIndex = -1;\r\n      this._dropHintDetails = {};\r\n    }\r\n  }\r\n\r\n  private _updateDragInfo(props: { itemIndex: number }, event?: MouseEvent) {\r\n    const columnReorderProps = this._columnReorderProps;\r\n    const itemIndex = props.itemIndex;\r\n    if (itemIndex >= 0) {\r\n      // Column index is set based on the checkbox\r\n      this._draggedColumnIndex = this.props.selectionMode !== SelectionMode.none ? itemIndex - 1 : itemIndex - 0;\r\n      this._getDropHintPositions();\r\n      if (columnReorderProps && columnReorderProps.onColumnDragStart) {\r\n        columnReorderProps.onColumnDragStart(true);\r\n      }\r\n    } else if (event && this._draggedColumnIndex >= 0) {\r\n      this._resetDropHints();\r\n      this._draggedColumnIndex = -1;\r\n      this._dropHintDetails = {};\r\n      if (columnReorderProps && columnReorderProps.onColumnDragEnd) {\r\n        const columnDragEndLocation = this._isEventOnHeader(event);\r\n        columnReorderProps.onColumnDragEnd({ dropLocation: columnDragEndLocation }, event);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _resetDropHints(): void {\r\n    if (this._currentDropHintIndex >= 0) {\r\n      this._updateDropHintElement(this._dropHintDetails[this._currentDropHintIndex].dropHintElementRef, 'none');\r\n      this._currentDropHintIndex = Number.MIN_SAFE_INTEGER;\r\n    }\r\n  }\r\n\r\n  private _updateDropHintElement(element: HTMLElement, displayProperty: string) {\r\n    (element.childNodes[1] as HTMLElement).style.display = displayProperty;\r\n    (element.childNodes[0] as HTMLElement).style.display = displayProperty;\r\n  }\r\n\r\n  private _getDropHintPositions(): void {\r\n    const { columns } = this.props;\r\n    const columnReorderProps = this._columnReorderProps;\r\n    let prevX = 0;\r\n    let prevMid = 0;\r\n    let prevRef: HTMLElement;\r\n    const frozenColumnCountFromStart =\r\n      columnReorderProps && columnReorderProps.frozenColumnCountFromStart\r\n        ? columnReorderProps.frozenColumnCountFromStart\r\n        : 0;\r\n    const frozenColumnCountFromEnd =\r\n      columnReorderProps && columnReorderProps.frozenColumnCountFromEnd\r\n        ? columnReorderProps.frozenColumnCountFromEnd\r\n        : 0;\r\n    for (let i = frozenColumnCountFromStart!; i < columns.length - frozenColumnCountFromEnd! + 1; i++) {\r\n      if (this._rootElement) {\r\n        const dropHintElement = this._rootElement!.querySelectorAll('#columnDropHint_' + i)[0] as HTMLElement;\r\n        if (dropHintElement) {\r\n          if (i === frozenColumnCountFromStart!) {\r\n            prevX = dropHintElement.offsetLeft;\r\n            prevMid = dropHintElement.offsetLeft;\r\n            prevRef = dropHintElement;\r\n          } else {\r\n            const newMid = (dropHintElement.offsetLeft + prevX!) / 2;\r\n            this._dropHintDetails[i - 1] = {\r\n              originX: prevX,\r\n              startX: prevMid!,\r\n              endX: newMid,\r\n              dropHintElementRef: prevRef!\r\n            };\r\n            prevMid = newMid;\r\n            prevRef = dropHintElement;\r\n            prevX = dropHintElement.offsetLeft;\r\n            if (i === columns.length - frozenColumnCountFromEnd!) {\r\n              this._dropHintDetails[i] = {\r\n                originX: prevX,\r\n                startX: prevMid!,\r\n                endX: dropHintElement.offsetLeft,\r\n                dropHintElementRef: prevRef\r\n              };\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Based on the given cursor position, finds the nearest drop hint and updates the state to make it visible\r\n   *\r\n   */\r\n  private _computeDropHintToBeShown(clientX: number): void {\r\n    if (this._rootElement) {\r\n      const clientRect = this._rootElement.getBoundingClientRect();\r\n      const headerOriginX = clientRect.left;\r\n      const eventXRelativePosition = clientX - headerOriginX;\r\n      const currentDropHintIndex = this._currentDropHintIndex!;\r\n      if (this._isValidCurrentDropHintIndex()) {\r\n        if (\r\n          eventXRelativePosition >= this._dropHintDetails[currentDropHintIndex!].startX &&\r\n          eventXRelativePosition <= this._dropHintDetails[currentDropHintIndex!].endX\r\n        ) {\r\n          return;\r\n        }\r\n      }\r\n      const { columns } = this.props;\r\n      const columnReorderProps = this._columnReorderProps;\r\n      const frozenColumnCountFromStart =\r\n        columnReorderProps && columnReorderProps.frozenColumnCountFromStart\r\n          ? columnReorderProps.frozenColumnCountFromStart\r\n          : 0;\r\n      const frozenColumnCountFromEnd =\r\n        columnReorderProps && columnReorderProps.frozenColumnCountFromEnd\r\n          ? columnReorderProps.frozenColumnCountFromEnd\r\n          : 0;\r\n      const currentIndex: number = frozenColumnCountFromStart!;\r\n      const lastValidColumn = columns.length - frozenColumnCountFromEnd!;\r\n      let indexToUpdate = -1;\r\n      if (eventXRelativePosition <= this._dropHintDetails[currentIndex].endX) {\r\n        indexToUpdate = currentIndex;\r\n      } else if (eventXRelativePosition >= this._dropHintDetails[lastValidColumn]!.startX) {\r\n        indexToUpdate = lastValidColumn;\r\n      } else if (this._isValidCurrentDropHintIndex()) {\r\n        if (\r\n          this._dropHintDetails[currentDropHintIndex! + 1] &&\r\n          eventXRelativePosition >= this._dropHintDetails[currentDropHintIndex! + 1].startX &&\r\n          eventXRelativePosition <= this._dropHintDetails[currentDropHintIndex! + 1].endX\r\n        ) {\r\n          indexToUpdate = currentDropHintIndex! + 1;\r\n        } else if (\r\n          this._dropHintDetails[currentDropHintIndex! - 1] &&\r\n          eventXRelativePosition >= this._dropHintDetails[currentDropHintIndex! - 1].startX &&\r\n          eventXRelativePosition <= this._dropHintDetails[currentDropHintIndex! - 1].endX\r\n        ) {\r\n          indexToUpdate = currentDropHintIndex! - 1;\r\n        }\r\n      }\r\n      if (indexToUpdate === -1) {\r\n        let startIndex = frozenColumnCountFromStart!;\r\n        let endIndex = lastValidColumn;\r\n        while (startIndex < endIndex) {\r\n          const middleIndex = Math.ceil((endIndex + startIndex!) / 2);\r\n          if (\r\n            eventXRelativePosition >= this._dropHintDetails[middleIndex].startX &&\r\n            eventXRelativePosition <= this._dropHintDetails[middleIndex].endX\r\n          ) {\r\n            indexToUpdate = middleIndex;\r\n            break;\r\n          } else if (eventXRelativePosition < this._dropHintDetails[middleIndex]!.originX) {\r\n            endIndex = middleIndex;\r\n          } else if (eventXRelativePosition > this._dropHintDetails[middleIndex]!.originX) {\r\n            startIndex = middleIndex;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (indexToUpdate === this._draggedColumnIndex || indexToUpdate === this._draggedColumnIndex + 1) {\r\n        if (this._isValidCurrentDropHintIndex()) {\r\n          this._resetDropHints();\r\n        }\r\n      } else if (currentDropHintIndex !== indexToUpdate && indexToUpdate >= 0) {\r\n        this._resetDropHints();\r\n        this._updateDropHintElement(this._dropHintDetails[indexToUpdate].dropHintElementRef, 'inline-block');\r\n        this._currentDropHintIndex = indexToUpdate;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isEventOnHeader(event: MouseEvent): ColumnDragEndLocation | undefined {\r\n    if (this._rootElement) {\r\n      const clientRect = this._rootElement.getBoundingClientRect();\r\n      if (\r\n        event.clientX > clientRect.left &&\r\n        event.clientX < clientRect.right &&\r\n        event.clientY > clientRect.top &&\r\n        event.clientY < clientRect.bottom\r\n      ) {\r\n        return ColumnDragEndLocation.header;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _renderColumnDivider(columnIndex: number): JSX.Element | null {\r\n    const { columns = NO_COLUMNS } = this.props;\r\n    const column = columns[columnIndex];\r\n    const { onRenderDivider } = column;\r\n    return onRenderDivider\r\n      ? onRenderDivider({ column, columnIndex }, this._renderColumnSizer)\r\n      : this._renderColumnSizer({ column, columnIndex });\r\n  }\r\n\r\n  private _renderColumnSizer = ({ columnIndex }: IDetailsColumnProps): JSX.Element | null => {\r\n    const { columns = NO_COLUMNS } = this.props;\r\n    const column = columns[columnIndex];\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    return column.isResizable ? (\r\n      <div\r\n        key={ `${column.key}_sizer` }\r\n        aria-hidden={ true }\r\n        role='button'\r\n        data-is-focusable={ false }\r\n        onClick={ stopPropagation }\r\n        data-sizer-index={ columnIndex }\r\n        onBlur={ this._onSizerBlur }\r\n        className={ css(\r\n          'ms-DetailsHeader-cellSizer',\r\n          styles.cellSizer,\r\n          columnIndex < columns.length - 1 ? styles.cellSizerStart : styles.cellSizerEnd,\r\n          {\r\n            ['is-resizing ' + styles.cellIsResizing]:\r\n              columnResizeDetails && columnResizeDetails.columnIndex === columnIndex\r\n          }\r\n        ) }\r\n        onDoubleClick={ this._onSizerDoubleClick.bind(this, columnIndex) }\r\n      />\r\n    ) : null;\r\n  }\r\n\r\n  private _renderDropHint(dropHintIndex: number): JSX.Element {\r\n    return (\r\n      <div key={ 'dropHintKey' } className={ styles.dropHintStyle } id={ `columnDropHint_${dropHintIndex}` }>\r\n        <Icon\r\n          key={ `dropHintCaretKey` }\r\n          aria-hidden={ true }\r\n          data-is-focusable={ false }\r\n          data-sizer-index={ dropHintIndex }\r\n          className={ css('ms-DetailsHeader-dropHintCaretStyle', styles.dropHintCaretStyle) }\r\n          iconName={ 'CaretUpSolid8' }\r\n        />\r\n        <div\r\n          key={ `dropHintLineKey` }\r\n          aria-hidden={ true }\r\n          data-is-focusable={ false }\r\n          data-sizer-index={ dropHintIndex }\r\n          className={ css('ms-DetailsHeader-dropHintLineStyle', styles.dropHintLineStyle) }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  private _onRenderColumnHeaderTooltip = (\r\n    tooltipHostProps: ITooltipHostProps,\r\n    defaultRender?: IRenderFunction<ITooltipHostProps>\r\n  ): JSX.Element => {\r\n    return <span className={ tooltipHostProps.hostClassName }>{ tooltipHostProps.children }</span>;\r\n  }\r\n\r\n  /**\r\n   * double click on the column sizer will auto ajust column width\r\n   * to fit the longest content among current rendered rows.\r\n   *\r\n   * @private\r\n   * @param {number} columnIndex (index of the column user double clicked)\r\n   * @param {React.MouseEvent} ev (mouse double click event)\r\n   */\r\n  private _onSizerDoubleClick(columnIndex: number, ev: React.MouseEvent<HTMLElement>): void {\r\n    const { onColumnAutoResized, columns } = this.props;\r\n    if (onColumnAutoResized) {\r\n      onColumnAutoResized(columns[columnIndex], columnIndex);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the select all toggle is clicked.\r\n   */\r\n  private _onSelectAllClicked = (): void => {\r\n    const { selection } = this.props;\r\n\r\n    selection.toggleAllSelected();\r\n  }\r\n\r\n  private _onRootMouseDown = (ev: MouseEvent): void => {\r\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n    const columnIndex = Number(columnIndexAttr);\r\n    const { columns } = this.props;\r\n\r\n    if (columnIndexAttr === null || ev.button !== MOUSEDOWN_PRIMARY_BUTTON) {\r\n      // Ignore anything except the primary button.\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      columnResizeDetails: {\r\n        columnIndex: columnIndex,\r\n        columnMinWidth: columns[columnIndex].calculatedWidth!,\r\n        originX: ev.clientX\r\n      }\r\n    });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onRootMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { columnResizeDetails, isSizing } = this.state;\r\n\r\n    if (columnResizeDetails && !isSizing && ev.clientX !== columnResizeDetails.originX) {\r\n      this.setState({ isSizing: true });\r\n    }\r\n  }\r\n\r\n  private _onRootRef = (focusZone: FocusZone): void => {\r\n    if (focusZone) {\r\n      // Need to resolve the actual DOM node, not the component. The element itself will be used for drag/drop and focusing.\r\n      this._rootElement = findDOMNode(focusZone) as HTMLElement;\r\n    } else {\r\n      this._rootElement = undefined;\r\n    }\r\n  }\r\n\r\n  private _onRootKeyDown = (ev: KeyboardEvent): void => {\r\n    const { columnResizeDetails, isSizing } = this.state;\r\n    const { columns, onColumnResized } = this.props;\r\n\r\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n\r\n    if (!columnIndexAttr || isSizing) {\r\n      return;\r\n    }\r\n\r\n    const columnIndex = Number(columnIndexAttr);\r\n\r\n    if (!columnResizeDetails) {\r\n      if (ev.which === KeyCodes.enter) {\r\n        this.setState({\r\n          columnResizeDetails: {\r\n            columnIndex: columnIndex,\r\n            columnMinWidth: columns[columnIndex].calculatedWidth!\r\n          }\r\n        });\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    } else {\r\n      let increment: number | undefined;\r\n\r\n      if (ev.which === KeyCodes.enter) {\r\n        this.setState({\r\n          columnResizeDetails: undefined\r\n        });\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      } else if (ev.which === KeyCodes.left) {\r\n        increment = getRTL() ? 1 : -1;\r\n      } else if (ev.which === KeyCodes.right) {\r\n        increment = getRTL() ? -1 : 1;\r\n      }\r\n\r\n      if (increment) {\r\n        if (!ev.shiftKey) {\r\n          increment *= 10;\r\n        }\r\n\r\n        this.setState({\r\n          columnResizeDetails: {\r\n            ...columnResizeDetails,\r\n            columnMinWidth: columnResizeDetails.columnMinWidth + increment\r\n          }\r\n        });\r\n\r\n        if (onColumnResized) {\r\n          onColumnResized(columns[columnIndex], columnResizeDetails.columnMinWidth + increment, columnIndex);\r\n        }\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * mouse move event handler in the header\r\n   * it will set isSizing state to true when user clicked on the sizer and move the mouse.\r\n   *\r\n   * @private\r\n   * @param {React.MouseEvent} ev (mouse move event)\r\n   */\r\n  private _onSizerMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const {\r\n      // use buttons property here since ev.button in some edge case is not upding well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons\r\n    } = ev;\r\n    const { onColumnIsSizingChanged, onColumnResized, columns } = this.props;\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    if (buttons !== undefined && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n      // cancel mouse down event and return early when the primary button is not pressed\r\n      this._onSizerMouseUp(ev);\r\n      return;\r\n    }\r\n\r\n    if (ev.clientX !== columnResizeDetails!.originX) {\r\n      if (onColumnIsSizingChanged) {\r\n        onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], true);\r\n      }\r\n    }\r\n\r\n    if (onColumnResized) {\r\n      let movement = ev.clientX - columnResizeDetails!.originX!;\r\n\r\n      if (getRTL()) {\r\n        movement = -movement;\r\n      }\r\n\r\n      onColumnResized(\r\n        columns[columnResizeDetails!.columnIndex],\r\n        columnResizeDetails!.columnMinWidth + movement,\r\n        columnResizeDetails!.columnIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  private _onSizerBlur = (ev: React.FocusEvent<HTMLElement>): void => {\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    if (columnResizeDetails) {\r\n      this.setState({\r\n        columnResizeDetails: undefined,\r\n        isSizing: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * mouse up event handler in the header\r\n   * clear the resize related state.\r\n   * This is to ensure we can catch double click event\r\n   *\r\n   * @private\r\n   * @param {React.MouseEvent} ev (mouse up event)\r\n   */\r\n  private _onSizerMouseUp = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { columns, onColumnIsSizingChanged } = this.props;\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    this.setState({\r\n      columnResizeDetails: undefined,\r\n      isSizing: false\r\n    });\r\n\r\n    if (onColumnIsSizingChanged) {\r\n      onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], false);\r\n    }\r\n  }\r\n\r\n  private _onSelectionChanged(): void {\r\n    const isAllSelected = this.props.selection.isAllSelected();\r\n\r\n    if (this.state.isAllSelected !== isAllSelected) {\r\n      this.setState({\r\n        isAllSelected: isAllSelected\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onToggleCollapseAll(): void {\r\n    const { onToggleCollapseAll } = this.props;\r\n    const newCollapsed = !this.state.isAllCollapsed;\r\n    this.setState({\r\n      isAllCollapsed: newCollapsed\r\n    });\r\n    if (onToggleCollapseAll) {\r\n      onToggleCollapseAll(newCollapsed);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getLegacyColumnReorderProps(columnReorderOptions: IColumnReorderOptions): IColumnReorderHeaderProps {\r\n  return {\r\n    ...columnReorderOptions,\r\n    onColumnDragEnd: undefined\r\n  };\r\n}\r\n\r\nfunction stopPropagation(ev: React.MouseEvent<HTMLElement>): void {\r\n  ev.stopPropagation();\r\n}\r\n"]}
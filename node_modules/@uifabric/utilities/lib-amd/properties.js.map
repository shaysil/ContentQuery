{"version":3,"file":"properties.js","sourceRoot":"../src/","sources":["properties.ts"],"names":[],"mappings":"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","sourcesContent":["import { filteredAssign } from './object';\n\n/**\n * An array of events that are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementEvents = [\n  'onCopy',\n  'onCut',\n  'onPaste',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCompositionUpdate',\n  'onFocus',\n  'onFocusCapture',\n  'onBlur',\n  'onBlurCapture',\n  'onChange',\n  'onInput',\n  'onSubmit',\n  'onLoad',\n  'onError',\n  'onKeyDown',\n  'onKeyDownCapture',\n  'onKeyPress',\n  'onKeyUp',\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n  'onClick',\n  'onClickCapture',\n  'onContextMenu',\n  'onDoubleClick',\n  'onDrag',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onMouseDown',\n  'onMouseDownCapture',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'onMouseUpCapture',\n  'onSelect',\n  'onTouchCancel',\n  'onTouchEnd',\n  'onTouchMove',\n  'onTouchStart',\n  'onScroll',\n  'onWheel',\n  'onPointerCancel',\n  'onPointerDown',\n  'onPointerEnter',\n  'onPointerLeave',\n  'onPointerMove',\n  'onPointerOut',\n  'onPointerOver',\n  'onPointerUp',\n  'onGotPointerCapture',\n  'onLostPointerCapture'\n];\n\n/**\n * An array of element attributes which are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementProperties = [\n  'defaultChecked',\n  'defaultValue',\n  'accept',\n  'acceptCharset',\n  'accessKey',\n  'action',\n  'allowFullScreen',\n  'allowTransparency',\n  'alt',\n  'async',\n  'autoComplete',\n  'autoFocus',\n  'autoPlay',\n  'capture',\n  'cellPadding',\n  'cellSpacing',\n  'charSet',\n  'challenge',\n  'checked',\n  'children',\n  'classID',\n  'className',\n  'cols',\n  'colSpan',\n  'content',\n  'contentEditable',\n  'contextMenu',\n  'controls',\n  'coords',\n  'crossOrigin',\n  'data',\n  'dateTime',\n  'default',\n  'defer',\n  'dir',\n  'download',\n  'draggable',\n  'encType',\n  'form',\n  'formAction',\n  'formEncType',\n  'formMethod',\n  'formNoValidate',\n  'formTarget',\n  'frameBorder',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'hrefLang',\n  'htmlFor',\n  'httpEquiv',\n  'icon',\n  'id',\n  'inputMode',\n  'integrity',\n  'is',\n  'keyParams',\n  'keyType',\n  'kind',\n  'lang',\n  'list',\n  'loop',\n  'low',\n  'manifest',\n  'marginHeight',\n  'marginWidth',\n  'max',\n  'maxLength',\n  'media',\n  'mediaGroup',\n  'method',\n  'min',\n  'minLength',\n  'multiple',\n  'muted',\n  'name',\n  'noValidate',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'poster',\n  'preload',\n  'radioGroup',\n  'readOnly',\n  'rel',\n  'required',\n  'role',\n  'rows',\n  'rowSpan',\n  'sandbox',\n  'scope',\n  'scoped',\n  'scrolling',\n  'seamless',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'spellCheck',\n  'src',\n  'srcDoc',\n  'srcLang',\n  'srcSet',\n  'start',\n  'step',\n  'style',\n  'summary',\n  'tabIndex',\n  'title',\n  'type',\n  'useMap',\n  'value',\n  'width',\n  'wmode',\n  'wrap'\n];\n\n/**\n * An array of HTML element properties and events.\n *\n * @public\n */\nexport const htmlElementProperties = baseElementProperties.concat(baseElementEvents);\n\n/**\n * An array of A tag properties and events.\n *\n * @public\n */\nexport const anchorProperties = htmlElementProperties.concat(['href', 'target']);\n\n/**\n * An array of BUTTON tag properties and events.\n *\n * @public\n */\nexport const buttonProperties = htmlElementProperties.concat(['disabled']);\n\n/**\n * An array of DIV tag properties and events.\n *\n * @public\n */\nexport const divProperties = htmlElementProperties.concat(['align', 'noWrap']);\n\n/**\n * An array of INPUT tag properties and events.\n *\n * @public\n */\nexport const inputProperties = buttonProperties;\n\n/**\n * An array of TEXTAREA tag properties and events.\n *\n * @public\n */\nexport const textAreaProperties = buttonProperties;\n\n/**\n * An array of IMAGE tag properties and events.\n *\n * @public\n */\nexport const imageProperties = divProperties;\n\n/**\n * Gets native supported props for an html element provided the allowance set. Use one of the property\n * sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given\n * props set. Note that all data- and aria- prefixed attributes will be allowed.\n * NOTE: getNativeProps should always be applied first when adding props to a react component. The\n * non-native props should be applied second. This will prevent getNativeProps from overriding your custom props.\n * For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to\n * the component after an onClick function is added, then the getNativeProps onClick will override it.\n *\n * @public\n * @param props - The unfiltered input props\n * @param allowedPropsNames-  The array of allowed propnames.\n * @returns The filtered props\n */\nexport function getNativeProps<T>(props: {}, allowedPropNames: string[], excludedPropNames?: string[]): T {\n  return filteredAssign(\n    (propName: string) => {\n      return (\n        (!excludedPropNames || excludedPropNames.indexOf(propName) < 0) &&\n        (propName.indexOf('data-') === 0 || propName.indexOf('aria-') === 0 || allowedPropNames.indexOf(propName) >= 0)\n      );\n    },\n    {},\n    props\n  ) as T;\n}\n"]}
{"version":3,"file":"Stack.Vertical.WrapNested.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.WrapNested.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { mergeStyleSets, IStyleSet, DefaultPalette, Slider, Stack } from 'office-ui-fabric-react';\n\nexport interface IExampleState {\n  stackHeight: number;\n}\n\nexport class VerticalStackWrapNestedExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      stackHeight: 420\n    };\n  }\n\n  public render(): JSX.Element {\n    const textStyles = {\n      width: 50,\n      height: 50,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: DefaultPalette.white\n    } as IStyleSet<{}>;\n\n    const { stackHeight } = this.state;\n\n    const styles = mergeStyleSets({\n      root: {\n        background: DefaultPalette.themeTertiary,\n        height: stackHeight\n      },\n\n      stackOne: {\n        background: DefaultPalette.neutralTertiary,\n        selectors: {\n          '& span': {\n            ...textStyles,\n            background: DefaultPalette.themePrimary\n          }\n        }\n      },\n\n      stackTwo: {\n        background: DefaultPalette.neutralSecondary,\n        selectors: {\n          '& span': {\n            ...textStyles,\n            background: DefaultPalette.themeDark\n          }\n        }\n      },\n\n      stackThree: {\n        background: DefaultPalette.neutralPrimary,\n        selectors: {\n          '& span': {\n            ...textStyles,\n            background: DefaultPalette.themeDarker\n          }\n        }\n      }\n    });\n\n    const tokens = {\n      sectionStack: {\n        childrenGap: 10\n      },\n      wrapStack: {\n        childrenGap: '30 40'\n      },\n      firstStack: {\n        childrenGap: '10 30'\n      },\n      secondStack: {\n        childrenGap: '20 50'\n      }\n    };\n\n    return (\n      <Stack tokens={tokens.sectionStack}>\n        <Slider\n          label=\"Change the stack height to see how child items wrap onto multiple columns:\"\n          min={1}\n          max={420}\n          step={1}\n          defaultValue={420}\n          showValue={true}\n          onChange={this._onHeightChange}\n        />\n\n        <Stack wrap tokens={tokens.wrapStack} className={styles.root}>\n          <Stack wrap tokens={tokens.firstStack} className={styles.stackOne}>\n            <span>1</span>\n            <span>2</span>\n            <span>3</span>\n            <span>4</span>\n            <span>5</span>\n            <span>6</span>\n            <span>7</span>\n          </Stack>\n\n          <Stack wrap tokens={tokens.secondStack} className={styles.stackTwo}>\n            <span>1</span>\n            <span>2</span>\n            <span>3</span>\n          </Stack>\n\n          <Stack wrap className={styles.stackThree}>\n            <span>1</span>\n            <span>2</span>\n            <span>3</span>\n            <span>4</span>\n            <span>5</span>\n            <span>6</span>\n            <span>7</span>\n            <span>8</span>\n            <span>9</span>\n            <span>10</span>\n          </Stack>\n        </Stack>\n\n        <span>\n          <b>Note:</b>\n        </span>\n        <span>\n          Support for nested wrapping of vertical flex-boxes is scarce across browsers, especially in the way they handle overflows.\n        </span>\n        <span>Most browsers don't scale the width of the flex-box when the inner items overflow and wrap around it.</span>\n        <span>\n          The one exception to this case being Microsoft Edge that handles it correctly (though this might go soon with the switch to\n          Chromium).\n        </span>\n        <span>There are ways in which we could have gone around this issue.</span>\n        <span>\n          However, we have chosen to adhere to the flex-box spec so that we have the correct implementation if support comes down the line.\n        </span>\n      </Stack>\n    );\n  }\n\n  private _onHeightChange = (value: number): void => {\n    this.setState({ stackHeight: value });\n  };\n}\n"]}
{"version":3,"file":"Stack.Vertical.Wrap.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.Wrap.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,iEAAuF;AAMvF;IAA8C,oDAAkC;IAC9E,kCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAwDO,qBAAe,GAAG,UAAC,KAAa;YACtC,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC;QA7DA,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,GAAG;SACjB,CAAC;;IACJ,CAAC;IAEM,yCAAM,GAAb;QACU,IAAA,oCAAW,CAAgB;QAEnC,IAAM,MAAM,GAAG,uCAAc,CAAC;YAC5B,IAAI,EAAE;gBACJ,UAAU,EAAE,uCAAc,CAAC,aAAa;gBACxC,MAAM,EAAE,WAAW;gBACnB,SAAS,EAAE;oBACT,QAAQ,EAAE;wBACR,KAAK,EAAE,EAAE;wBACT,MAAM,EAAE,EAAE;wBACV,OAAO,EAAE,MAAM;wBACf,UAAU,EAAE,QAAQ;wBACpB,cAAc,EAAE,QAAQ;wBACxB,UAAU,EAAE,uCAAc,CAAC,YAAY;wBACvC,KAAK,EAAE,uCAAc,CAAC,KAAK;qBAC5B;iBACF;aACF;SACF,CAAC,CAAC;QAEH,IAAM,MAAM,GAAG;YACb,YAAY,EAAE;gBACZ,WAAW,EAAE,EAAE;aAChB;YACD,SAAS,EAAE;gBACT,WAAW,EAAE,EAAE;aAChB;SACF,CAAC;QAEF,OAAO,CACL,oBAAC,8BAAK,IAAC,MAAM,EAAE,MAAM,CAAC,YAAY;YAChC,oBAAC,+BAAM,IACL,KAAK,EAAC,4EAA4E,EAClF,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,eAAe,GAC9B;YAEF,oBAAC,8BAAK,IAAC,IAAI,QAAC,MAAM,EAAE,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;gBAC1D,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc,CACR,CACF,CACT,CAAC;IACJ,CAAC;IAKH,+BAAC;AAAD,CAAC,AAjED,CAA8C,KAAK,CAAC,SAAS,GAiE5D;AAjEY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { mergeStyleSets, DefaultPalette, Slider, Stack } from 'office-ui-fabric-react';\n\nexport interface IExampleState {\n  stackHeight: number;\n}\n\nexport class VerticalStackWrapExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      stackHeight: 420\n    };\n  }\n\n  public render(): JSX.Element {\n    const { stackHeight } = this.state;\n\n    const styles = mergeStyleSets({\n      root: {\n        background: DefaultPalette.themeTertiary,\n        height: stackHeight,\n        selectors: {\n          '& span': {\n            width: 50,\n            height: 50,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: DefaultPalette.themePrimary,\n            color: DefaultPalette.white\n          }\n        }\n      }\n    });\n\n    const tokens = {\n      sectionStack: {\n        childrenGap: 10\n      },\n      wrapStack: {\n        childrenGap: 20\n      }\n    };\n\n    return (\n      <Stack tokens={tokens.sectionStack}>\n        <Slider\n          label=\"Change the stack height to see how child items wrap onto multiple columns:\"\n          min={1}\n          max={420}\n          step={1}\n          defaultValue={420}\n          showValue={true}\n          onChange={this._onHeightChange}\n        />\n\n        <Stack wrap tokens={tokens.wrapStack} className={styles.root}>\n          <span>1</span>\n          <span>2</span>\n          <span>3</span>\n          <span>4</span>\n          <span>5</span>\n          <span>6</span>\n        </Stack>\n      </Stack>\n    );\n  }\n\n  private _onHeightChange = (value: number): void => {\n    this.setState({ stackHeight: value });\n  };\n}\n"]}
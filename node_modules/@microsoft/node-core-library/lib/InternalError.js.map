{"version":3,"file":"InternalError.js","sourceRoot":"","sources":["../src/InternalError.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D;;;;;;;;GAQG;AACH,MAAa,aAAc,SAAQ,KAAK;IAM9B,MAAM,CAAC,cAAc,CAAC,kBAA0B;QACtD,OAAO,mBAAmB,kBAAkB,6DAA6D;cACrG,8DAA8D,CAAC;IACrE,CAAC;IAED;;;;;;OAMG;IACH,YAAY,OAAe;QACzB,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;QAE7C,uGAAuG;QACvG,2CAA2C;QAC3C,+IAA+I;QAC/I,EAAE;QACF,4EAA4E;QAC3E,IAAY,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,6BAA6B;QAEhF,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;IACpC,CAAC;IAED,gBAAgB;IACT,QAAQ;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,mCAAmC;IAC1D,CAAC;CACF;AAnCD,sCAmCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * An `Error` subclass that should be thrown to report an unexpected state that may indicate a software defect.\r\n * An application may handle this error by instructing the end user to report an issue to the application maintainers.\r\n *\r\n * @remarks\r\n * Do not use this class unless you intend to solicit bug reports from end users.\r\n *\r\n * @public\r\n */\r\nexport class InternalError extends Error {\r\n  /**\r\n   * The underlying error message, without the additional boilerplate for an `InternalError`.\r\n   */\r\n  public readonly unformattedMessage: string;\r\n\r\n  private static _formatMessage(unformattedMessage: string): string {\r\n    return `Internal Error: ${unformattedMessage}\\n\\nYou have encountered a software defect. Please consider`\r\n      + ` reporting the issue to the maintainers of this application.`;\r\n  }\r\n\r\n  /**\r\n   * Constructs a new instance of the {@link InternalError} class.\r\n   *\r\n   * @param message - A message describing the error.  This will be assigned to\r\n   * {@link InternalError.unformattedMessage}.  The `Error.message` field will have additional boilerplate\r\n   * explaining that the user has encountered a software defect.\r\n   */\r\n  constructor(message: string) {\r\n    super(InternalError._formatMessage(message));\r\n\r\n    // Manually set the prototype, as we can no longer extend built-in classes like Error, Array, Map, etc.\r\n    // tslint:disable-next-line:max-line-length\r\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n    //\r\n    // Note: the prototype must also be set on any classes which extend this one\r\n    (this as any).__proto__ = InternalError.prototype; // tslint:disable-line:no-any\r\n\r\n    this.unformattedMessage = message;\r\n  }\r\n\r\n  /** @override */\r\n  public toString(): string {\r\n    return this.message; // Avoid adding the \"Error:\" prefix\r\n  }\r\n}\r\n"]}
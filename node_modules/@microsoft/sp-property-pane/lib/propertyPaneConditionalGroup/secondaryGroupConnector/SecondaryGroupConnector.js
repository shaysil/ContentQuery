import * as tslib_1 from "tslib";
import * as React from 'react';
import { autobind, BaseComponent, Callout, DefaultButton, DirectionalHint } from '@microsoft/office-ui-fabric-react-bundle';
import styles from '../PropertyPaneConditionalGroup.module.scss';
import Strings from '../../loc/Strings.resx';
var SecondaryGroupConnector =  (function (_super) {
    tslib_1.__extends(SecondaryGroupConnector, _super);
    function SecondaryGroupConnector(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isCalloutVisible: false
        };
        return _this;
    }
    SecondaryGroupConnector.prototype.render = function () {
        var isCalloutVisible = this.state.isCalloutVisible;
        return (React.createElement("div", { className: styles.alternateFieldsConnector, role: 'button', onClick: this._handleConnectorClick },
            React.createElement("div", { ref: this._resolveRef('_ellipsisElement'), title: this.props.tooltip },
                React.createElement("span", null, Strings.DynamicDataSecondaryGroupButtonLabel)),
            isCalloutVisible &&
                React.createElement("div", { className: styles.callout },
                    React.createElement(Callout, { role: 'alertdialog', isBeakVisible: false, setInitialFocus: true, directionalHint: DirectionalHint.bottomCenter, onDismiss: this._handleCalloutDismiss, target: this._ellipsisElement },
                        React.createElement(DefaultButton, { "data-automation-id": 'connectToSource', onClick: this._onConnectToSourceClick, iconProps: { iconName: 'Plug' }, ariaDescription: Strings.ConnectToDynamicDataSourceDescription, text: Strings.ConnectToDynamicDataSource })))));
    };
    SecondaryGroupConnector.prototype._handleConnectorClick = function () {
        this.setState({
            isCalloutVisible: !this.state.isCalloutVisible
        });
    };
    SecondaryGroupConnector.prototype._handleCalloutDismiss = function () {
        this.setState({
            isCalloutVisible: false
        });
    };
    SecondaryGroupConnector.prototype._onConnectToSourceClick = function () {
        this.props.onConnectToSourceClick();
    };
    tslib_1.__decorate([
        autobind
    ], SecondaryGroupConnector.prototype, "_handleConnectorClick", null);
    tslib_1.__decorate([
        autobind
    ], SecondaryGroupConnector.prototype, "_handleCalloutDismiss", null);
    tslib_1.__decorate([
        autobind
    ], SecondaryGroupConnector.prototype, "_onConnectToSourceClick", null);
    return SecondaryGroupConnector;
}(BaseComponent));
export default SecondaryGroupConnector;

import * as tslib_1 from "tslib";
import { Label } from '@microsoft/office-ui-fabric-react-bundle';
import * as React from 'react';
import Styles from '../DynamicDataWidget.module.scss';
import DynamicDataWidgetSource from '../dynamicDataWidgetSource/DynamicDataWidgetSource';
var DynamicDataWidget =  (function (_super) {
    tslib_1.__extends(DynamicDataWidget, _super);
    function DynamicDataWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DynamicDataWidget.prototype.render = function () {
        var _this = this;
        this._widgetSources = [];
        if (this._isSourceShared()) {
            this._widgetSources.push(this._renderWidgetSource(this.props.entries));
        }
        else {
            this.props.entries.forEach(function (entry) {
                _this._widgetSources.push(_this._renderWidgetSource([entry]));
            });
        }
        return (React.createElement("div", null, this._widgetSources));
    };
    DynamicDataWidget.prototype._isSourceShared = function () {
        if (this.props.entries.length === 1) {
            return true;
        }
        else {
            var sharedConfiguration = this.props.fieldProperties.sharedConfiguration;
            return !!(sharedConfiguration && sharedConfiguration.depth !== 0 );
        }
    };
    DynamicDataWidget.prototype._renderWidgetSource = function (entries) {
        var currentKey = this.props.parentKey + '-dynamicDataWidgetSource' + this._widgetSources.length;
        return (React.createElement("div", { key: currentKey, className: Styles.dynamicDataWidget },
            (entries.length === 1) &&
                React.createElement(Label, { className: Styles.entryLabel }, entries[0].properties.label),
            React.createElement(DynamicDataWidgetSource, tslib_1.__assign({}, this.props, { parentKey: currentKey, entries: entries }))));
    };
    return DynamicDataWidget;
}(React.Component));
export default DynamicDataWidget;

webpackJsonpf9e737b7_f0df_4597_ba8c_3060f82380db_1_8_0([0],[
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["c"] = __extends;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __assign; });
/* harmony export (immutable) */ __webpack_exports__["d"] = __rest;
/* harmony export (immutable) */ __webpack_exports__["b"] = __decorate;
/* unused harmony export __param */
/* unused harmony export __metadata */
/* unused harmony export __awaiter */
/* unused harmony export __generator */
/* unused harmony export __exportStar */
/* unused harmony export __values */
/* unused harmony export __read */
/* unused harmony export __spread */
/* unused harmony export __await */
/* unused harmony export __asyncGenerator */
/* unused harmony export __asyncDelegator */
/* unused harmony export __asyncValues */
/* unused harmony export __makeTemplateObject */
/* unused harmony export __importStar */
/* unused harmony export __importDefault */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Utilities.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Styling.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.9.3/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(17);

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/Stylesheet.js

var InjectionMode = {
    /**
     * Avoids style injection, use getRules() to read the styles.
     */
    none: 0,
    /**
     * Inserts rules using the insertRule api.
     */
    insertNode: 1,
    /**
     * Appends rules using appendChild.
     */
    appendChild: 2
};
var STYLESHEET_SETTING = '__stylesheet__';
// tslint:disable-next-line:no-any
var _fileScopedGlobal = {};
var _stylesheet;
/**
 * Represents the state of styles registered in the page. Abstracts
 * the surface for adding styles to the stylesheet, exposes helpers
 * for reading the styles registered in server rendered scenarios.
 *
 * @public
 */
var Stylesheet_Stylesheet = /** @class */ (function () {
    function Stylesheet(config) {
        this._rules = [];
        this._preservedRules = [];
        this._rulesToInsert = [];
        this._counter = 0;
        this._keyToClassName = {};
        this._onResetCallbacks = [];
        // tslint:disable-next-line:no-any
        this._classNameToArgs = {};
        this._config = tslib_es6["a" /* __assign */]({ injectionMode: InjectionMode.insertNode, defaultPrefix: 'css', namespace: undefined }, config);
    }
    /**
     * Gets the singleton instance.
     */
    Stylesheet.getInstance = function () {
        // tslint:disable-next-line:no-any
        var global = typeof window !== 'undefined' ? window : _fileScopedGlobal;
        _stylesheet = global[STYLESHEET_SETTING];
        if (!_stylesheet || (_stylesheet._lastStyleElement && _stylesheet._lastStyleElement.ownerDocument !== document)) {
            // tslint:disable-next-line:no-string-literal
            var fabricConfig = (global && global['FabricConfig']) || {};
            _stylesheet = global[STYLESHEET_SETTING] = new Stylesheet(fabricConfig.mergeStyles);
        }
        return _stylesheet;
    };
    /**
     * Configures the stylesheet.
     */
    Stylesheet.prototype.setConfig = function (config) {
        this._config = tslib_es6["a" /* __assign */]({}, this._config, config);
    };
    /**
     * Configures a reset callback.
     *
     * @param callback - A callback which will be called when the Stylesheet is reset.
     */
    Stylesheet.prototype.onReset = function (callback) {
        this._onResetCallbacks.push(callback);
    };
    /**
     * Generates a unique classname.
     *
     * @param displayName - Optional value to use as a prefix.
     */
    Stylesheet.prototype.getClassName = function (displayName) {
        var namespace = this._config.namespace;
        var prefix = displayName || this._config.defaultPrefix;
        return "" + (namespace ? namespace + '-' : '') + prefix + "-" + this._counter++;
    };
    /**
     * Used internally to cache information about a class which was
     * registered with the stylesheet.
     */
    Stylesheet.prototype.cacheClassName = function (className, key, args, rules) {
        this._keyToClassName[key] = className;
        this._classNameToArgs[className] = {
            args: args,
            rules: rules
        };
    };
    /**
     * Gets the appropriate classname given a key which was previously
     * registered using cacheClassName.
     */
    Stylesheet.prototype.classNameFromKey = function (key) {
        return this._keyToClassName[key];
    };
    /**
     * Gets the arguments associated with a given classname which was
     * previously registered using cacheClassName.
     */
    Stylesheet.prototype.argsFromClassName = function (className) {
        var entry = this._classNameToArgs[className];
        return entry && entry.args;
    };
    /**
     * Gets the arguments associated with a given classname which was
     * previously registered using cacheClassName.
     */
    Stylesheet.prototype.insertedRulesFromClassName = function (className) {
        var entry = this._classNameToArgs[className];
        return entry && entry.rules;
    };
    /**
     * Inserts a css rule into the stylesheet.
     * @param preserve - Preserves the rule beyond a reset boundary.
     */
    Stylesheet.prototype.insertRule = function (rule, preserve) {
        var injectionMode = this._config.injectionMode;
        var element = injectionMode !== InjectionMode.none ? this._getStyleElement() : undefined;
        if (preserve) {
            this._preservedRules.push(rule);
        }
        if (element) {
            switch (this._config.injectionMode) {
                case InjectionMode.insertNode:
                    var sheet = element.sheet;
                    try {
                        sheet.insertRule(rule, sheet.cssRules.length);
                    }
                    catch (e) {
                        // The browser will throw exceptions on unsupported rules (such as a moz prefix in webkit.)
                        // We need to swallow the exceptions for this scenario, otherwise we'd need to filter
                        // which could be slower and bulkier.
                    }
                    break;
                case InjectionMode.appendChild:
                    element.appendChild(document.createTextNode(rule));
                    break;
            }
        }
        else {
            this._rules.push(rule);
        }
        if (this._config.onInsertRule) {
            this._config.onInsertRule(rule);
        }
    };
    /**
     * Gets all rules registered with the stylesheet; only valid when
     * using InsertionMode.none.
     */
    Stylesheet.prototype.getRules = function (includePreservedRules) {
        return (includePreservedRules ? this._preservedRules.join('') : '') + this._rules.join('') + this._rulesToInsert.join('');
    };
    /**
     * Resets the internal state of the stylesheet. Only used in server
     * rendered scenarios where we're using InsertionMode.none.
     */
    Stylesheet.prototype.reset = function () {
        this._rules = [];
        this._rulesToInsert = [];
        this._counter = 0;
        this._classNameToArgs = {};
        this._keyToClassName = {};
        this._onResetCallbacks.forEach(function (callback) { return callback(); });
    };
    // Forces the regeneration of incoming styles without totally resetting the stylesheet.
    Stylesheet.prototype.resetKeys = function () {
        this._keyToClassName = {};
    };
    Stylesheet.prototype._getStyleElement = function () {
        var _this = this;
        if (!this._styleElement && typeof document !== 'undefined') {
            this._styleElement = this._createStyleElement();
            // Reset the style element on the next frame.
            window.requestAnimationFrame(function () {
                _this._styleElement = undefined;
            });
        }
        return this._styleElement;
    };
    Stylesheet.prototype._createStyleElement = function () {
        var styleElement = document.createElement('style');
        styleElement.setAttribute('data-merge-styles', 'true');
        styleElement.type = 'text/css';
        if (this._lastStyleElement && this._lastStyleElement.nextElementSibling) {
            document.head.insertBefore(styleElement, this._lastStyleElement.nextElementSibling);
        }
        else {
            document.head.appendChild(styleElement);
        }
        this._lastStyleElement = styleElement;
        return styleElement;
    };
    return Stylesheet;
}());


// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/transforms/kebabRules.js
function kebabRules(rulePairs, index) {
    rulePairs[index] = rulePairs[index].replace(/([A-Z])/g, '-$1').toLowerCase();
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/getVendorSettings.js
var _vendorSettings;
function getVendorSettings() {
    if (!_vendorSettings) {
        var doc = typeof document !== 'undefined' ? document : undefined;
        var nav = typeof navigator !== 'undefined' ? navigator : undefined;
        var userAgent = nav ? nav.userAgent.toLowerCase() : undefined;
        if (!doc) {
            _vendorSettings = {
                isWebkit: true,
                isMoz: true,
                isOpera: true,
                isMs: true
            };
        }
        else {
            _vendorSettings = {
                isWebkit: !!(doc && 'WebkitAppearance' in doc.documentElement.style),
                isMoz: !!(userAgent && userAgent.indexOf('firefox') > -1),
                isOpera: !!(userAgent && userAgent.indexOf('opera') > -1),
                isMs: !!(nav && (/rv:11.0/i.test(nav.userAgent) || /Edge\/\d./i.test(navigator.userAgent)))
            };
        }
    }
    return _vendorSettings;
}
/**
 * Sets the vendor settings for prefixing and vendor specific operations.
 */
function setVendorSettings(vendorSettings) {
    _vendorSettings = vendorSettings;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/transforms/prefixRules.js

var autoPrefixNames = {
    'user-select': 1
};
function prefixRules(rulePairs, index) {
    var vendorSettings = getVendorSettings();
    var name = rulePairs[index];
    if (autoPrefixNames[name]) {
        var value = rulePairs[index + 1];
        if (autoPrefixNames[name]) {
            if (vendorSettings.isWebkit) {
                rulePairs.push('-webkit-' + name, value);
            }
            if (vendorSettings.isMoz) {
                rulePairs.push('-moz-' + name, value);
            }
            if (vendorSettings.isMs) {
                rulePairs.push('-ms-' + name, value);
            }
            if (vendorSettings.isOpera) {
                rulePairs.push('-o-' + name, value);
            }
        }
    }
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/transforms/provideUnits.js
var NON_PIXEL_NUMBER_PROPS = [
    'column-count',
    'font-weight',
    'flex-basis',
    'flex',
    'flex-grow',
    'flex-shrink',
    'fill-opacity',
    'opacity',
    'order',
    'z-index',
    'zoom'
];
function provideUnits(rulePairs, index) {
    var name = rulePairs[index];
    var value = rulePairs[index + 1];
    if (typeof value === 'number') {
        var unit = NON_PIXEL_NUMBER_PROPS.indexOf(name) === -1 ? 'px' : '';
        rulePairs[index + 1] = "" + value + unit;
    }
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/transforms/rtlifyRules.js

var LEFT = 'left';
var RIGHT = 'right';
var NO_FLIP = '@noflip';
var NAME_REPLACEMENTS = (rtlifyRules__a = {},
    rtlifyRules__a[LEFT] = RIGHT,
    rtlifyRules__a[RIGHT] = LEFT,
    rtlifyRules__a);
var VALUE_REPLACEMENTS = {
    'w-resize': 'e-resize',
    'sw-resize': 'se-resize',
    'nw-resize': 'ne-resize'
};
var _rtl = getRTL();
/**
 * Sets the current RTL value.
 */
function setRTL(isRTL) {
    if (_rtl !== isRTL) {
        Stylesheet_Stylesheet.getInstance().resetKeys();
        _rtl = isRTL;
    }
}
/**
 * Gets the current RTL value.
 */
function getRTL() {
    if (_rtl === undefined) {
        _rtl = typeof document !== 'undefined' && !!document.documentElement && document.documentElement.getAttribute('dir') === 'rtl';
    }
    return _rtl;
}
/**
 * RTLifies the rulePair in the array at the current index. This mutates the array for performance
 * reasons.
 */
function rtlifyRules(rulePairs, index) {
    if (getRTL()) {
        var name_1 = rulePairs[index];
        if (!name_1) {
            return;
        }
        var value = rulePairs[index + 1];
        if (typeof value === 'string' && value.indexOf(NO_FLIP) >= 0) {
            rulePairs[index + 1] = value.replace(/\s*(?:\/\*\s*)?\@noflip\b(?:\s*\*\/)?\s*?/g, '');
        }
        else if (name_1.indexOf(LEFT) >= 0) {
            rulePairs[index] = name_1.replace(LEFT, RIGHT);
        }
        else if (name_1.indexOf(RIGHT) >= 0) {
            rulePairs[index] = name_1.replace(RIGHT, LEFT);
        }
        else if (String(value).indexOf(LEFT) >= 0) {
            rulePairs[index + 1] = value.replace(LEFT, RIGHT);
        }
        else if (String(value).indexOf(RIGHT) >= 0) {
            rulePairs[index + 1] = value.replace(RIGHT, LEFT);
        }
        else if (NAME_REPLACEMENTS[name_1]) {
            rulePairs[index] = NAME_REPLACEMENTS[name_1];
        }
        else if (VALUE_REPLACEMENTS[value]) {
            rulePairs[index + 1] = VALUE_REPLACEMENTS[value];
        }
        else {
            switch (name_1) {
                case 'margin':
                case 'padding':
                    rulePairs[index + 1] = flipQuad(value);
                    break;
                case 'box-shadow':
                    rulePairs[index + 1] = negateNum(value, 0);
                    break;
            }
        }
    }
}
/**
 * Given a string value in a space delimited format (e.g. "1 2 3 4"), negates a particular value.
 */
function negateNum(value, partIndex) {
    var parts = value.split(' ');
    var numberVal = parseInt(parts[partIndex], 10);
    parts[0] = parts[0].replace(String(numberVal), String(numberVal * -1));
    return parts.join(' ');
}
/**
 * Given a string quad, flips the left and right values.
 */
function flipQuad(value) {
    if (typeof value === 'string') {
        var parts = value.split(' ');
        if (parts.length === 4) {
            return parts[0] + " " + parts[3] + " " + parts[2] + " " + parts[1];
        }
    }
    return value;
}
var rtlifyRules__a;

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/styleToClassName.js





var DISPLAY_NAME = 'displayName';
function getDisplayName(rules) {
    var rootStyle = rules && rules['&'];
    return rootStyle ? rootStyle.displayName : undefined;
}
var globalSelectorRegExp = /\:global\((.+?)\)/g;
/**
 * Finds comma separated selectors in a :global() e.g. ":global(.class1, .class2, .class3)"
 * and wraps them each in their own global ":global(.class1), :global(.class2), :global(.class3)"
 *
 * @param selectorWithGlobals The selector to process
 * @returns The updated selector
 */
function expandCommaSeparatedGlobals(selectorWithGlobals) {
    // We the selector does not have a :global() we can shortcut
    if (!globalSelectorRegExp.test(selectorWithGlobals)) {
        return selectorWithGlobals;
    }
    var replacementInfo = [];
    var findGlobal = /\:global\((.+?)\)/g;
    var match = null;
    // Create a result list for global selectors so we can replace them.
    while ((match = findGlobal.exec(selectorWithGlobals))) {
        // Only if the found selector is a comma separated list we'll process it.
        if (match[1].indexOf(',') > -1) {
            replacementInfo.push([
                match.index,
                match.index + match[0].length,
                // Wrap each of the found selectors in :global()
                match[1]
                    .split(',')
                    .map(function (v) { return ":global(" + v.trim() + ")"; })
                    .join(', ')
            ]);
        }
    }
    // Replace the found selectors with their wrapped variants in reverse order
    return replacementInfo.reverse().reduce(function (selector, _a) {
        var matchIndex = _a[0], matchEndIndex = _a[1], replacement = _a[2];
        var prefix = selector.slice(0, matchIndex);
        var suffix = selector.slice(matchEndIndex);
        return prefix + replacement + suffix;
    }, selectorWithGlobals);
}
function expandSelector(newSelector, currentSelector) {
    if (newSelector.indexOf(':global(') >= 0) {
        return newSelector.replace(globalSelectorRegExp, '$1');
    }
    else if (newSelector.indexOf(':') === 0) {
        return currentSelector + newSelector;
    }
    else if (newSelector.indexOf('&') < 0) {
        return currentSelector + ' ' + newSelector;
    }
    return newSelector;
}
function extractRules(args, rules, currentSelector) {
    if (rules === void 0) { rules = { __order: [] }; }
    if (currentSelector === void 0) { currentSelector = '&'; }
    var stylesheet = Stylesheet_Stylesheet.getInstance();
    var currentRules = rules[currentSelector];
    if (!currentRules) {
        currentRules = {};
        rules[currentSelector] = currentRules;
        rules.__order.push(currentSelector);
    }
    for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {
        var arg = args_1[_i];
        // If the arg is a string, we need to look up the class map and merge.
        if (typeof arg === 'string') {
            var expandedRules = stylesheet.argsFromClassName(arg);
            if (expandedRules) {
                extractRules(expandedRules, rules, currentSelector);
            }
            // Else if the arg is an array, we need to recurse in.
        }
        else if (Array.isArray(arg)) {
            extractRules(arg, rules, currentSelector);
        }
        else {
            // tslint:disable-next-line:no-any
            for (var prop in arg) {
                if (prop === 'selectors') {
                    // tslint:disable-next-line:no-any
                    var selectors = arg.selectors;
                    for (var newSelector in selectors) {
                        if (selectors.hasOwnProperty(newSelector)) {
                            var selectorValue = selectors[newSelector];
                            if (newSelector.indexOf('@') === 0) {
                                newSelector = newSelector + '{' + currentSelector;
                                extractRules([selectorValue], rules, newSelector);
                            }
                            else if (newSelector.indexOf(',') > -1) {
                                var commaSeparatedSelectors = expandCommaSeparatedGlobals(newSelector)
                                    .split(/,/g)
                                    .map(function (s) { return s.trim(); });
                                extractRules([selectorValue], rules, commaSeparatedSelectors
                                    .map(function (commaSeparatedSelector) { return expandSelector(commaSeparatedSelector, currentSelector); })
                                    .join(', '));
                            }
                            else {
                                extractRules([selectorValue], rules, expandSelector(newSelector, currentSelector));
                            }
                        }
                    }
                }
                else {
                    if (arg[prop] !== undefined) {
                        // Else, add the rule to the currentSelector.
                        if (prop === 'margin' || prop === 'padding') {
                            // tslint:disable-next-line:no-any
                            expandQuads(currentRules, prop, arg[prop]);
                        }
                        else {
                            // tslint:disable-next-line:no-any
                            currentRules[prop] = arg[prop];
                        }
                    }
                }
            }
        }
    }
    return rules;
}
function expandQuads(currentRules, name, value) {
    var parts = typeof value === 'string' ? value.split(' ') : [value];
    currentRules[name + 'Top'] = parts[0];
    currentRules[name + 'Right'] = parts[1] || parts[0];
    currentRules[name + 'Bottom'] = parts[2] || parts[0];
    currentRules[name + 'Left'] = parts[3] || parts[1] || parts[0];
}
function getKeyForRules(rules) {
    var serialized = [];
    var hasProps = false;
    for (var _i = 0, _a = rules.__order; _i < _a.length; _i++) {
        var selector = _a[_i];
        serialized.push(selector);
        var rulesForSelector = rules[selector];
        for (var propName in rulesForSelector) {
            if (rulesForSelector.hasOwnProperty(propName) && rulesForSelector[propName] !== undefined) {
                hasProps = true;
                serialized.push(propName, rulesForSelector[propName]);
            }
        }
    }
    return hasProps ? serialized.join('') : undefined;
}
function serializeRuleEntries(ruleEntries) {
    if (!ruleEntries) {
        return '';
    }
    var allEntries = [];
    for (var entry in ruleEntries) {
        if (ruleEntries.hasOwnProperty(entry) && entry !== DISPLAY_NAME && ruleEntries[entry] !== undefined) {
            allEntries.push(entry, ruleEntries[entry]);
        }
    }
    // Apply transforms.
    for (var i = 0; i < allEntries.length; i += 2) {
        kebabRules(allEntries, i);
        provideUnits(allEntries, i);
        rtlifyRules(allEntries, i);
        prefixRules(allEntries, i);
    }
    // Apply punctuation.
    for (var i = 1; i < allEntries.length; i += 4) {
        allEntries.splice(i, 1, ':', allEntries[i], ';');
    }
    return allEntries.join('');
}
function styleToRegistration() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var rules = extractRules(args);
    var key = getKeyForRules(rules);
    if (key) {
        var stylesheet = Stylesheet_Stylesheet.getInstance();
        var registration = {
            className: stylesheet.classNameFromKey(key),
            key: key,
            args: args
        };
        if (!registration.className) {
            registration.className = stylesheet.getClassName(getDisplayName(rules));
            var rulesToInsert = [];
            for (var _a = 0, _b = rules.__order; _a < _b.length; _a++) {
                var selector = _b[_a];
                rulesToInsert.push(selector, serializeRuleEntries(rules[selector]));
            }
            registration.rulesToInsert = rulesToInsert;
        }
        return registration;
    }
}
function applyRegistration(registration, classMap) {
    var stylesheet = Stylesheet_Stylesheet.getInstance();
    var className = registration.className, key = registration.key, args = registration.args, rulesToInsert = registration.rulesToInsert;
    if (rulesToInsert) {
        // rulesToInsert is an ordered array of selector/rule pairs.
        for (var i = 0; i < rulesToInsert.length; i += 2) {
            var rules = rulesToInsert[i + 1];
            if (rules) {
                var selector = rulesToInsert[i];
                // Fix selector using map.
                selector = selector.replace(/(&)|\$([\w-]+)\b/g, function (match, amp, cn) {
                    if (amp) {
                        return '.' + registration.className;
                    }
                    else if (cn) {
                        return '.' + ((classMap && classMap[cn]) || cn);
                    }
                    return '';
                });
                // Insert. Note if a media query, we must close the query with a final bracket.
                var processedRule = selector + "{" + rules + "}" + (selector.indexOf('@') === 0 ? '}' : '');
                stylesheet.insertRule(processedRule);
            }
        }
        stylesheet.cacheClassName(className, key, args, rulesToInsert);
    }
}
function styleToClassName() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var registration = styleToRegistration.apply(void 0, args);
    if (registration) {
        applyRegistration(registration);
        return registration.className;
    }
    return '';
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/extractStyleParts.js

/**
 * Separates the classes and style objects. Any classes that are pre-registered
 * args are auto expanded into objects.
 */
function extractStyleParts() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var classes = [];
    var objects = [];
    var stylesheet = Stylesheet_Stylesheet.getInstance();
    function _processArgs(argsList) {
        for (var _i = 0, argsList_1 = argsList; _i < argsList_1.length; _i++) {
            var arg = argsList_1[_i];
            if (arg) {
                if (typeof arg === 'string') {
                    if (arg.indexOf(' ') >= 0) {
                        _processArgs(arg.split(' '));
                    }
                    else {
                        var translatedArgs = stylesheet.argsFromClassName(arg);
                        if (translatedArgs) {
                            _processArgs(translatedArgs);
                        }
                        else {
                            // Avoid adding the same class twice.
                            if (classes.indexOf(arg) === -1) {
                                classes.push(arg);
                            }
                        }
                    }
                }
                else if (Array.isArray(arg)) {
                    _processArgs(arg);
                }
                else if (typeof arg === 'object') {
                    objects.push(arg);
                }
            }
        }
    }
    _processArgs(args);
    return {
        classes: classes,
        objects: objects
    };
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/mergeStyles.js


/**
 * Concatination helper, which can merge class names together. Skips over falsey values.
 *
 * @public
 */
function mergeStyles() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var _a = extractStyleParts(args), classes = _a.classes, objects = _a.objects;
    if (objects.length) {
        classes.push(styleToClassName(objects));
    }
    return classes.join(' ');
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/concatStyleSets.js
/**
 * Combine a set of styles together (but does not register css classes).
 * @param styleSets - One or more stylesets to be merged (each param can also be falsy).
 */
function concatStyleSets() {
    var styleSets = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        styleSets[_i] = arguments[_i];
    }
    var mergedSet = {};
    // We process sub component styles in two phases. First we collect them, then we combine them into 1 style function.
    var workingSubcomponentStyles = {};
    for (var _a = 0, styleSets_1 = styleSets; _a < styleSets_1.length; _a++) {
        var currentSet = styleSets_1[_a];
        if (currentSet) {
            for (var prop in currentSet) {
                if (currentSet.hasOwnProperty(prop)) {
                    if (prop === 'subComponentStyles' && currentSet.subComponentStyles !== undefined) {
                        // subcomponent styles - style functions or objects
                        var currentComponentStyles = currentSet.subComponentStyles;
                        for (var subCompProp in currentComponentStyles) {
                            if (currentComponentStyles.hasOwnProperty(subCompProp)) {
                                if (workingSubcomponentStyles.hasOwnProperty(subCompProp)) {
                                    workingSubcomponentStyles[subCompProp].push(currentComponentStyles[subCompProp]);
                                }
                                else {
                                    workingSubcomponentStyles[subCompProp] = [currentComponentStyles[subCompProp]];
                                }
                            }
                        }
                        continue;
                    }
                    // the as any casts below is a workaround for ts 2.8.
                    // todo: remove cast to any in ts 2.9.
                    var mergedValue = mergedSet[prop];
                    var currentValue = currentSet[prop];
                    if (mergedValue === undefined) {
                        mergedSet[prop] = currentValue;
                    }
                    else {
                        mergedSet[prop] = (Array.isArray(mergedValue) ? mergedValue : [mergedValue]).concat((Array.isArray(currentValue) ? currentValue : [currentValue]));
                    }
                }
            }
        }
    }
    if (Object.keys(workingSubcomponentStyles).length > 0) {
        mergedSet.subComponentStyles = {};
        var mergedSubStyles = mergedSet.subComponentStyles;
        var _loop_1 = function (subCompProp) {
            if (workingSubcomponentStyles.hasOwnProperty(subCompProp)) {
                var workingSet_1 = workingSubcomponentStyles[subCompProp];
                mergedSubStyles[subCompProp] = function (styleProps) {
                    return concatStyleSets.apply(void 0, workingSet_1.map(function (styleFunctionOrObject) {
                        return typeof styleFunctionOrObject === 'function' ? styleFunctionOrObject(styleProps) : styleFunctionOrObject;
                    }));
                };
            }
        };
        // now we process the subcomponent styles if there are any
        for (var subCompProp in workingSubcomponentStyles) {
            _loop_1(subCompProp);
        }
    }
    return mergedSet;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/mergeStyleSets.js



/**
 * Takes in one or more style set objects, each consisting of a set of areas,
 * each which will produce a class name. Using this is analogous to calling
 * `mergeStyles` for each property in the object, but ensures we maintain the
 * set ordering when multiple style sets are merged.
 *
 * @param styleSets - One or more style sets to be merged.
 */
function mergeStyleSets() {
    var styleSets = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        styleSets[_i] = arguments[_i];
    }
    // tslint:disable-next-line:no-any
    var classNameSet = { subComponentStyles: {} };
    var classMap = {};
    var styleSet = styleSets[0];
    if (!styleSet && styleSets.length <= 1) {
        return { subComponentStyles: {} };
    }
    var concatenatedStyleSet = 
    // we have guarded against falsey values just above.
    styleSet;
    concatenatedStyleSet = concatStyleSets.apply(void 0, styleSets);
    var registrations = [];
    for (var styleSetArea in concatenatedStyleSet) {
        if (concatenatedStyleSet.hasOwnProperty(styleSetArea)) {
            if (styleSetArea === 'subComponentStyles') {
                classNameSet.subComponentStyles = concatenatedStyleSet.subComponentStyles || {};
                continue;
            }
            var styles = concatenatedStyleSet[styleSetArea];
            var _a = extractStyleParts(styles), classes = _a.classes, objects = _a.objects;
            var registration = styleToRegistration({ displayName: styleSetArea }, objects);
            registrations.push(registration);
            if (registration) {
                classMap[styleSetArea] = registration.className;
                // as any cast not needed in ts >=2.9
                classNameSet[styleSetArea] = classes.concat([registration.className]).join(' ');
            }
        }
    }
    for (var _b = 0, registrations_1 = registrations; _b < registrations_1.length; _b++) {
        var registration = registrations_1[_b];
        if (registration) {
            applyRegistration(registration, classMap);
        }
    }
    return classNameSet;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/fontFace.js


/**
 * Registers a font face.
 * @public
 */
function fontFace(font) {
    Stylesheet_Stylesheet.getInstance().insertRule("@font-face{" + serializeRuleEntries(font) + "}", true);
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/keyframes.js


/**
 * Registers keyframe definitions.
 *
 * @public
 */
function keyframes(timeline) {
    var stylesheet = Stylesheet_Stylesheet.getInstance();
    var name = stylesheet.getClassName();
    var rulesArray = [];
    for (var prop in timeline) {
        if (timeline.hasOwnProperty(prop)) {
            rulesArray.push(prop, '{', serializeRuleEntries(timeline[prop]), '}');
        }
    }
    var rules = rulesArray.join('');
    stylesheet.insertRule("@keyframes " + name + "{" + rules + "}", true);
    stylesheet.cacheClassName(name, rules, [], ['keyframes', rules]);
    return name;
}

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/set-version/1.1.3/node_modules/@uifabric/set-version/lib/index.js + 1 modules
var lib = __webpack_require__(39);

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/version.js
// @uifabric/merge-styles@6.16.1
// Do not modify this file, the file is generated as part of publish. The checked in version is a placeholder only.

Object(lib["a" /* setVersion */])('@uifabric/merge-styles', '6.16.1');

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "d", function() { return mergeStyles; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "c", function() { return mergeStyleSets; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "b", function() { return concatStyleSets; });
/* unused concated harmony import fontFace */
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, false, function() { return fontFace; });
/* unused concated harmony import keyframes */
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, false, function() { return keyframes; });
/* unused concated harmony import InjectionMode */
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, false, function() { return InjectionMode; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return Stylesheet_Stylesheet; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "e", function() { return setRTL; });










/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Label.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/KeytipData.js
module.exports = __webpack_require__(45);

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Icon.js
var pkg = __webpack_require__(13);
module.exports = pkg.workaround_Icon;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Dropdown/Dropdown.js
module.exports = __webpack_require__(92);

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/Tooltip.types.js
module.exports = __webpack_require__(66);

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/common/DirectionalHint.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Dropdown/Dropdown.types.js
module.exports = __webpack_require__(97);

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export shallowCompare */
/* harmony export (immutable) */ __webpack_exports__["a"] = assign;
/* harmony export (immutable) */ __webpack_exports__["b"] = filteredAssign;
/* unused harmony export getId */
/* unused harmony export resetIds */
/* unused harmony export mapEnumByName */
/* unused harmony export values */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__uifabric_merge_styles__ = __webpack_require__(20);

// Initialize global window id.
var CURRENT_ID_PROPERTY = '__currentId__';
var DEFAULT_ID_STRING = 'id__';
// tslint:disable-next-line:no-any
var _global = (typeof window !== 'undefined' && window) || process;
if (_global[CURRENT_ID_PROPERTY] === undefined) {
    _global[CURRENT_ID_PROPERTY] = 0;
}
// tslint:disable-next-line:no-any
function checkProperties(a, b) {
    for (var propName in a) {
        if (a.hasOwnProperty(propName)) {
            if (!b.hasOwnProperty(propName) || b[propName] !== a[propName]) {
                return false;
            }
        }
    }
    return true;
}
/**
 * Compares a to b and b to a.
 *
 * @public
 */
function shallowCompare(a, b) {
    return checkProperties(a, b) && checkProperties(b, a);
}
/**
 * Makes a resulting merge of a bunch of objects. Pass in the target object followed by 1 or more
 * objects as arguments and they will be merged sequentially into the target. Note that this will
 * shallow merge; it will not create new cloned values for target members.
 *
 * @public
 * @param target - Target object to merge following object arguments into.
 * @param args - One or more objects that will be mixed into the target in the order they are provided.
 * @returns Resulting merged target.
 */
// tslint:disable-next-line:no-any
function assign(target) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return filteredAssign.apply(this, [null, target].concat(args));
}
/**
 * Makes a resulting merge of a bunch of objects, but allows a filter function to be passed in to filter
 * the resulting merges. This allows for scenarios where you want to merge "everything except that one thing"
 * or "properties that start with data-". Note that this will shallow merge; it will not create new cloned
 * values for target members.
 *
 * @public
 * @param isAllowed - Callback to determine if the given propName is allowed in the result.
 * @param target - Target object to merge following object arguments into.
 * @param args - One or more objects that will be mixed into the target in the order they are provided.
 * @returns Resulting merged target.
 */
// tslint:disable-next-line:no-any
function filteredAssign(isAllowed, target) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    target = target || {};
    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
        var sourceObject = args_1[_a];
        if (sourceObject) {
            for (var propName in sourceObject) {
                if (sourceObject.hasOwnProperty(propName) && (!isAllowed || isAllowed(propName))) {
                    target[propName] = sourceObject[propName];
                }
            }
        }
    }
    return target;
}
// Configure ids to reset on stylesheet resets.
var stylesheet = __WEBPACK_IMPORTED_MODULE_0__uifabric_merge_styles__["a" /* Stylesheet */].getInstance();
if (stylesheet && stylesheet.onReset) {
    stylesheet.onReset(resetIds);
}
/**
 * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)
 *
 * @public
 */
function getId(prefix) {
    var index = _global[CURRENT_ID_PROPERTY]++;
    return (prefix || DEFAULT_ID_STRING) + index;
}
/**
 * Resets id counter to an (optional) number.
 *
 * @public
 */
function resetIds(counter) {
    if (counter === void 0) { counter = 0; }
    _global[CURRENT_ID_PROPERTY] = counter;
}
/* Takes an enum and iterates over each value of the enum (as a string), running the callback on each, returning a mapped array.
 * The callback takes as a first parameter the string that represents the name of the entry, and the second parameter is the
 * value of that entry, which is the value you'd normally use when using the enum (usually a number).
 * */
function mapEnumByName(
// tslint:disable-next-line:no-any
theEnum, callback) {
    // map<any> to satisfy compiler since it doesn't realize we strip out undefineds in the .filter() call
    return Object.keys(theEnum)
        .map(function (p) {
        // map on each property name as a string
        if (String(Number(p)) !== p) {
            // if the property is not just a number (because enums in TypeScript will map both ways)
            return callback(p, theEnum[p]);
        }
    })
        .filter(function (v) { return !!v; }); // only return elements with values
}
/**
 * Get all values in an object dictionary
 *
 * @param obj - The dictionary to get values for
 */
// tslint:disable-next-line:no-any
function values(obj) {
    return Object.keys(obj).reduce(function (arr, key) {
        arr.push(obj[key]);
        return arr;
    }, []);
}

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(127)))

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/keytips/KeytipConstants.js
module.exports = __webpack_require__(52);

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/TooltipHost.types.js
module.exports = __webpack_require__(61);

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Callout.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Checkbox/index.js
module.exports = __webpack_require__(71);

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Checkbox/Checkbox.base.js
module.exports = __webpack_require__(74);

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Button.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/selectableOption/SelectableOption.types.js
module.exports = __webpack_require__(98);

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/positioning.js
module.exports = __webpack_require__(108);

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/positioning/positioning.types.js
module.exports = __webpack_require__(113);

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Slider/Slider.base.js
module.exports = __webpack_require__(124);

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/set-version/1.1.3/node_modules/@uifabric/set-version/lib/setVersion.js
// A packages cache that makes sure that we don't inject the same packageName twice in the same bundle -
// this cache is local to the module closure inside this bundle
var packagesCache = {};
function setVersion(packageName, packageVersion) {
    if (typeof window !== 'undefined') {
        // tslint:disable-next-line:no-any
        var packages = (window.__packages__ = window.__packages__ || {});
        // We allow either the global packages or local packages caches to invalidate so testing can just clear the global to set this state
        if (!packages[packageName] || !packagesCache[packageName]) {
            packagesCache[packageName] = packageVersion;
            var versions = (packages[packageName] = packages[packageName] || []);
            versions.push(packageVersion);
        }
    }
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/set-version/1.1.3/node_modules/@uifabric/set-version/lib/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return setVersion; });


setVersion('@uifabric/set-version', '6.0.0');


/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GlobalSettings; });
/**
 * Storing global state in local module variables has issues when more than one copy
 * if the module gets loaded on the page (due to a bundling error or simply by consuming
 * a prebundled script.)
 *
 * This file contains helpers to deal with the getting and setting local state, and allows
 * callers to get called back when it mutates.
 */
var GLOBAL_SETTINGS_PROP_NAME = '__globalSettings__';
var CALLBACK_STATE_PROP_NAME = '__callbacks__';
// tslint:disable-next-line:no-any
var _global;
var _counter = 0;
if (typeof window !== 'undefined') {
    _global = window;
}
else if (typeof global !== 'undefined') {
    _global = global;
}
else {
    _global = {};
}
// tslint:disable-next-line:no-any
var _globalSettings = (_global[GLOBAL_SETTINGS_PROP_NAME] = _global[GLOBAL_SETTINGS_PROP_NAME] || (_a = {},
    _a[CALLBACK_STATE_PROP_NAME] = {},
    _a));
var _callbacks = _globalSettings[CALLBACK_STATE_PROP_NAME];
/**
 * Global settings helper, which stores settings in the global (window) namespace.
 * If window is not provided, it will store settings in module scope. Provides a
 * way to observe changes as well when their values change.
 *
 * @public
 */
var GlobalSettings = /** @class */ (function () {
    function GlobalSettings() {
    }
    GlobalSettings.getValue = function (key, defaultValue) {
        if (_globalSettings[key] === undefined) {
            _globalSettings[key] = typeof defaultValue === 'function' ? defaultValue() : defaultValue;
        }
        return _globalSettings[key];
    };
    GlobalSettings.setValue = function (key, value) {
        var oldValue = _globalSettings[key];
        if (value !== oldValue) {
            _globalSettings[key] = value;
            var changeDescription = {
                oldValue: oldValue,
                value: value,
                key: key
            };
            for (var id in _callbacks) {
                if (_callbacks.hasOwnProperty(id)) {
                    _callbacks[id](changeDescription);
                }
            }
        }
        return value;
    };
    GlobalSettings.addChangeListener = function (cb) {
        // Note: we use generated ids on the callbacks to create a map of the callbacks, which optimizes removal.
        // (It's faster to delete a key than it is to look up the index of an object and splice an array.)
        var id = cb.__id__;
        if (!id) {
            id = cb.__id__ = String(_counter++);
        }
        _callbacks[id] = cb;
    };
    GlobalSettings.removeChangeListener = function (cb) {
        delete _callbacks[cb.__id__];
    };
    return GlobalSettings;
}());

var _a;

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(128)))

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Toggle/Toggle.js
module.exports = __webpack_require__(42);

/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Toggle", function() { return Toggle; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Toggle_base__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Toggle_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Toggle_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Toggle_styles__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Toggle_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Toggle_styles__);



var Toggle = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__Toggle_base__["ToggleBase"], __WEBPACK_IMPORTED_MODULE_2__Toggle_styles__["getStyles"], undefined, { scope: 'Toggle' });


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Toggle/Toggle.base.js
module.exports = __webpack_require__(44);

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToggleBase", function() { return ToggleBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Label__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Label___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Label__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__KeytipData__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__KeytipData___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__KeytipData__);





var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["classNamesFunction"])();
var ToggleBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](ToggleBase, _super);
    function ToggleBase(props) {
        var _this = _super.call(this, props) || this;
        _this._toggleButton = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._onClick = function (ev) {
            var _a = _this.props, disabled = _a.disabled, checkedProp = _a.checked, onChange = _a.onChange, onChanged = _a.onChanged, onClick = _a.onClick;
            var checked = _this.state.checked;
            if (!disabled) {
                // Only update the state if the user hasn't provided it.
                if (checkedProp === undefined) {
                    _this.setState({
                        checked: !checked
                    });
                }
                if (onChange) {
                    onChange(ev, !checked);
                }
                if (onChanged) {
                    onChanged(!checked);
                }
                if (onClick) {
                    onClick(ev);
                }
            }
        };
        _this._warnMutuallyExclusive({
            checked: 'defaultChecked'
        });
        _this._warnDeprecations({
            onAriaLabel: 'ariaLabel',
            offAriaLabel: undefined,
            onChanged: 'onChange'
        });
        _this.state = {
            checked: !!(props.checked || props.defaultChecked)
        };
        _this._id = props.id || Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getId"])('Toggle');
        return _this;
    }
    Object.defineProperty(ToggleBase.prototype, "checked", {
        /**
         * Gets the current checked state of the toggle.
         */
        get: function () {
            return this.state.checked;
        },
        enumerable: true,
        configurable: true
    });
    ToggleBase.prototype.componentWillReceiveProps = function (newProps) {
        if (newProps.checked !== undefined) {
            this.setState({
                checked: !!newProps.checked // convert null to false
            });
        }
    };
    ToggleBase.prototype.render = function () {
        var _this = this;
        var _a = this.props, _b = _a.as, RootType = _b === void 0 ? 'div' : _b, className = _a.className, theme = _a.theme, disabled = _a.disabled, keytipProps = _a.keytipProps, label = _a.label, ariaLabel = _a.ariaLabel, onAriaLabel = _a.onAriaLabel, offAriaLabel = _a.offAriaLabel, offText = _a.offText, onText = _a.onText, styles = _a.styles, inlineLabel = _a.inlineLabel;
        var checked = this.state.checked;
        var stateText = checked ? onText : offText;
        var badAriaLabel = checked ? onAriaLabel : offAriaLabel;
        var toggleNativeProps = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_2__Utilities__["inputProperties"], ['defaultChecked']);
        var classNames = getClassNames(styles, {
            theme: theme,
            className: className,
            disabled: disabled,
            checked: checked,
            inlineLabel: inlineLabel,
            onOffMissing: !onText && !offText
        });
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](RootType, { className: classNames.root, hidden: toggleNativeProps.hidden },
            label && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Label__["Label"], { htmlFor: this._id, className: classNames.label }, label)),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.container },
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__KeytipData__["KeytipData"], { keytipProps: keytipProps, ariaDescribedBy: toggleNativeProps['aria-describedby'], disabled: disabled }, function (keytipAttributes) { return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("button", __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, toggleNativeProps, keytipAttributes, { className: classNames.pill, disabled: disabled, id: _this._id, type: "button", role: "switch" // ARIA 1.1 definition; "checkbox" in ARIA 1.0
                    , ref: _this._toggleButton, "aria-disabled": disabled, "aria-checked": checked, "aria-label": ariaLabel ? ariaLabel : badAriaLabel, "data-is-focusable": true, onChange: _this._noop, onClick: _this._onClick }),
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.thumb }))); }),
                stateText && __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Label__["Label"], { className: classNames.text }, stateText))));
    };
    ToggleBase.prototype.focus = function () {
        if (this._toggleButton.current) {
            this._toggleButton.current.focus();
        }
    };
    ToggleBase.prototype._noop = function () {
        /* no-op */
    };
    return ToggleBase;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_KeytipData_index__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_KeytipData_index___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_KeytipData_index__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__components_KeytipData_index__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__components_KeytipData_index__[key]; }) }(__WEBPACK_IMPORT_KEY__));



/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/KeytipData/index.js
module.exports = __webpack_require__(47);

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__KeytipData__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__KeytipData___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__KeytipData__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__KeytipData__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__KeytipData__[key]; }) }(__WEBPACK_IMPORT_KEY__));



/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/KeytipData/KeytipData.js
module.exports = __webpack_require__(49);

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeytipData", function() { return KeytipData; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipManager__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipManager___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipManager__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities_keytips_KeytipUtils__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities_keytips_KeytipUtils___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__utilities_keytips_KeytipUtils__);




/**
 * A small element to help the target component correctly read out its aria-describedby for its Keytip
 */
var KeytipData = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](KeytipData, _super);
    function KeytipData() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._keytipManager = __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipManager__["KeytipManager"].getInstance();
        return _this;
    }
    KeytipData.prototype.componentDidMount = function () {
        // Register Keytip in KeytipManager
        if (this.props.keytipProps) {
            this._uniqueId = this._keytipManager.register(this._getKtpProps());
        }
    };
    KeytipData.prototype.componentWillUnmount = function () {
        // Unregister Keytip in KeytipManager
        this.props.keytipProps && this._keytipManager.unregister(this._getKtpProps(), this._uniqueId);
    };
    KeytipData.prototype.componentDidUpdate = function () {
        // Update Keytip in KeytipManager
        this.props.keytipProps && this._keytipManager.update(this._getKtpProps(), this._uniqueId);
    };
    KeytipData.prototype.render = function () {
        var _a = this.props, children = _a.children, keytipProps = _a.keytipProps, ariaDescribedBy = _a.ariaDescribedBy;
        var nativeKeytipProps = {};
        if (keytipProps) {
            nativeKeytipProps = this._getKtpAttrs(keytipProps, ariaDescribedBy);
        }
        return children(nativeKeytipProps);
    };
    KeytipData.prototype._getKtpProps = function () {
        return __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ disabled: this.props.disabled }, this.props.keytipProps);
    };
    /**
     * Gets the aria- and data- attributes to attach to the component
     * @param keytipProps
     * @param describedByPrepend
     */
    KeytipData.prototype._getKtpAttrs = function (keytipProps, describedByPrepend) {
        if (keytipProps) {
            // Add the parent overflow sequence if necessary
            var newKeytipProps = this._keytipManager.addParentOverflow(keytipProps);
            // Construct aria-describedby and data-ktp-id attributes and return
            var ariaDescribedBy = Object(__WEBPACK_IMPORTED_MODULE_3__utilities_keytips_KeytipUtils__["getAriaDescribedBy"])(newKeytipProps.keySequences);
            var keySequences = newKeytipProps.keySequences.slice();
            if (newKeytipProps.overflowSetSequence) {
                keySequences = Object(__WEBPACK_IMPORTED_MODULE_3__utilities_keytips_KeytipUtils__["mergeOverflows"])(keySequences, newKeytipProps.overflowSetSequence);
            }
            var ktpId = Object(__WEBPACK_IMPORTED_MODULE_3__utilities_keytips_KeytipUtils__["sequencesToID"])(keySequences);
            return {
                'aria-describedby': Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["mergeAriaAttributeValues"])(describedByPrepend, ariaDescribedBy),
                'data-ktp-target': ktpId,
                'data-ktp-execute-target': ktpId
            };
        }
        return undefined;
    };
    return KeytipData;
}(__WEBPACK_IMPORTED_MODULE_1__Utilities__["BaseComponent"]));



/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/keytips/KeytipManager.js
module.exports = __webpack_require__(51);

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeytipManager", function() { return KeytipManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__);



/**
 * This class is responsible for handling registering, updating, and unregistering of keytips
 */
var KeytipManager = /** @class */ (function () {
    function KeytipManager() {
        this.keytips = [];
        this.persistedKeytips = [];
        // This is (and should be) updated and kept in sync
        // with the inKeytipMode in KeytipLayer.
        this.inKeytipMode = false;
        // Boolean that gets checked before entering keytip mode by the KeytipLayer
        // Used for an override in special cases (e.g. Disable entering keytip mode when a modal is shown)
        this.shouldEnterKeytipMode = true;
    }
    /**
     * Static function to get singleton KeytipManager instance
     *
     * @returns {KeytipManager} Singleton KeytipManager instance
     */
    KeytipManager.getInstance = function () {
        return this._instance;
    };
    /**
     * Registers a keytip
     *
     * @param keytipProps - Keytip to register
     * @param persisted - T/F if this keytip should be persisted, default is false
     * @returns {string} Unique ID for this keytip
     */
    KeytipManager.prototype.register = function (keytipProps, persisted) {
        if (persisted === void 0) { persisted = false; }
        var props = keytipProps;
        if (!persisted) {
            // Add the overflowSetSequence if necessary
            props = this.addParentOverflow(keytipProps);
        }
        // Create a unique keytip
        var uniqueKeytip = this._getUniqueKtp(props);
        // Add to array
        persisted ? this.persistedKeytips.push(uniqueKeytip) : this.keytips.push(uniqueKeytip);
        var event = persisted ? __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__["KeytipEvents"].PERSISTED_KEYTIP_ADDED : __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__["KeytipEvents"].KEYTIP_ADDED;
        __WEBPACK_IMPORTED_MODULE_1__Utilities__["EventGroup"].raise(this, event, {
            keytip: props,
            uniqueID: uniqueKeytip.uniqueID
        });
        return uniqueKeytip.uniqueID;
    };
    /**
     * Update a keytip
     *
     * @param keytipProps - Keytip to update
     * @param uniqueID - Unique ID of this keytip
     */
    KeytipManager.prototype.update = function (keytipProps, uniqueID) {
        var newKeytipProps = this.addParentOverflow(keytipProps);
        var uniqueKeytip = this._getUniqueKtp(newKeytipProps, uniqueID);
        var keytipIndex = Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["findIndex"])(this.keytips, function (ktp) {
            return ktp.uniqueID === uniqueID;
        });
        if (keytipIndex >= 0) {
            // Update everything except 'visible'
            uniqueKeytip.keytip.visible = this.keytips[keytipIndex].keytip.visible;
            // Update keytip in this.keytips
            this.keytips = Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["replaceElement"])(this.keytips, uniqueKeytip, keytipIndex);
            // Raise event
            __WEBPACK_IMPORTED_MODULE_1__Utilities__["EventGroup"].raise(this, __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__["KeytipEvents"].KEYTIP_UPDATED, {
                keytip: uniqueKeytip.keytip,
                uniqueID: uniqueKeytip.uniqueID
            });
        }
    };
    /**
     * Unregisters a keytip
     *
     * @param keytipToRemove - IKeytipProps of the keytip to remove
     * @param uniqueID - Unique ID of this keytip
     * @param persisted - T/F if this keytip should be persisted, default is false
     */
    KeytipManager.prototype.unregister = function (keytipToRemove, uniqueID, persisted) {
        if (persisted === void 0) { persisted = false; }
        if (persisted) {
            // Remove keytip from this.persistedKeytips
            this.persistedKeytips = this.persistedKeytips.filter(function (uniqueKtp) {
                return uniqueKtp.uniqueID !== uniqueID;
            });
        }
        else {
            // Remove keytip from this.keytips
            this.keytips = this.keytips.filter(function (uniqueKtp) {
                return uniqueKtp.uniqueID !== uniqueID;
            });
        }
        var event = persisted ? __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__["KeytipEvents"].PERSISTED_KEYTIP_REMOVED : __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__["KeytipEvents"].KEYTIP_REMOVED;
        __WEBPACK_IMPORTED_MODULE_1__Utilities__["EventGroup"].raise(this, event, {
            keytip: keytipToRemove,
            uniqueID: uniqueID
        });
    };
    /**
     * Manual call to enter keytip mode
     */
    KeytipManager.prototype.enterKeytipMode = function () {
        __WEBPACK_IMPORTED_MODULE_1__Utilities__["EventGroup"].raise(this, __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__["KeytipEvents"].ENTER_KEYTIP_MODE);
    };
    /**
     * Manual call to exit keytip mode
     */
    KeytipManager.prototype.exitKeytipMode = function () {
        __WEBPACK_IMPORTED_MODULE_1__Utilities__["EventGroup"].raise(this, __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__["KeytipEvents"].EXIT_KEYTIP_MODE);
    };
    /**
     * Gets all IKeytipProps from this.keytips
     *
     * @returns {IKeytipProps[]} All keytips stored in the manager
     */
    KeytipManager.prototype.getKeytips = function () {
        return this.keytips.map(function (uniqueKeytip) {
            return uniqueKeytip.keytip;
        });
    };
    /**
     * Adds the overflowSetSequence to the keytipProps if its parent keytip also has it
     *
     * @param keytipProps - Keytip props to add overflowSetSequence to if necessary
     * @returns {IKeytipProps} - Modified keytip props, if needed to be modified
     */
    KeytipManager.prototype.addParentOverflow = function (keytipProps) {
        var fullSequence = keytipProps.keySequences.slice();
        fullSequence.pop();
        if (fullSequence.length !== 0) {
            var parentKeytip = Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["find"])(this.getKeytips(), function (keytip) {
                return Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["arraysEqual"])(fullSequence, keytip.keySequences);
            });
            if (parentKeytip && parentKeytip.overflowSetSequence) {
                return __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, keytipProps, { overflowSetSequence: parentKeytip.overflowSetSequence });
            }
        }
        return keytipProps;
    };
    /**
     * Public function to bind for overflow items that have a submenu
     *
     * @param overflowButtonSequences
     * @param keytipSequences
     */
    KeytipManager.prototype.menuExecute = function (overflowButtonSequences, keytipSequences) {
        __WEBPACK_IMPORTED_MODULE_1__Utilities__["EventGroup"].raise(this, __WEBPACK_IMPORTED_MODULE_2__utilities_keytips_KeytipConstants__["KeytipEvents"].PERSISTED_KEYTIP_EXECUTE, {
            overflowButtonSequences: overflowButtonSequences,
            keytipSequences: keytipSequences
        });
    };
    /**
     * Creates an IUniqueKeytip object
     *
     * @param keytipProps - IKeytipProps
     * @param uniqueID - Unique ID, will default to the next unique ID if not passed
     * @returns {IUniqueKeytip} IUniqueKeytip object
     */
    KeytipManager.prototype._getUniqueKtp = function (keytipProps, uniqueID) {
        if (uniqueID === void 0) { uniqueID = Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["getId"])(); }
        return { keytip: __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, keytipProps), uniqueID: uniqueID };
    };
    KeytipManager._instance = new KeytipManager();
    return KeytipManager;
}());



/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KTP_PREFIX", function() { return KTP_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KTP_SEPARATOR", function() { return KTP_SEPARATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KTP_FULL_PREFIX", function() { return KTP_FULL_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DATAKTP_TARGET", function() { return DATAKTP_TARGET; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DATAKTP_EXECUTE_TARGET", function() { return DATAKTP_EXECUTE_TARGET; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KTP_LAYER_ID", function() { return KTP_LAYER_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KTP_ARIA_SEPARATOR", function() { return KTP_ARIA_SEPARATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeytipEvents", function() { return KeytipEvents; });
var KTP_PREFIX = 'ktp';
var KTP_SEPARATOR = '-';
var KTP_FULL_PREFIX = KTP_PREFIX + KTP_SEPARATOR;
var DATAKTP_TARGET = 'data-ktp-target';
var DATAKTP_EXECUTE_TARGET = 'data-ktp-execute-target';
var KTP_LAYER_ID = 'ktp-layer-id';
var KTP_ARIA_SEPARATOR = ', ';
// Events
var KeytipEvents;
(function (KeytipEvents) {
    KeytipEvents.KEYTIP_ADDED = 'keytipAdded';
    KeytipEvents.KEYTIP_REMOVED = 'keytipRemoved';
    KeytipEvents.KEYTIP_UPDATED = 'keytipUpdated';
    KeytipEvents.PERSISTED_KEYTIP_ADDED = 'persistedKeytipAdded';
    KeytipEvents.PERSISTED_KEYTIP_REMOVED = 'persistedKeytipRemoved';
    KeytipEvents.PERSISTED_KEYTIP_EXECUTE = 'persistedKeytipExecute';
    KeytipEvents.ENTER_KEYTIP_MODE = 'enterKeytipMode';
    KeytipEvents.EXIT_KEYTIP_MODE = 'exitKeytipMode';
})(KeytipEvents || (KeytipEvents = {}));


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/keytips/KeytipUtils.js
module.exports = __webpack_require__(54);

/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["sequencesToID"] = sequencesToID;
/* harmony export (immutable) */ __webpack_exports__["mergeOverflows"] = mergeOverflows;
/* harmony export (immutable) */ __webpack_exports__["ktpTargetFromSequences"] = ktpTargetFromSequences;
/* harmony export (immutable) */ __webpack_exports__["ktpTargetFromId"] = ktpTargetFromId;
/* harmony export (immutable) */ __webpack_exports__["getAriaDescribedBy"] = getAriaDescribedBy;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__KeytipConstants__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__KeytipConstants___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__KeytipConstants__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Utilities__);


/**
 * Converts a whole set of KeySequences into one keytip ID, which will be the ID for the last keytip sequence specified
 * keySequences should not include the initial keytip 'start' sequence.
 *
 * @param keySequences - Full path of IKeySequences for one keytip.
 * @returns {string} String to use for the keytip ID.
 */
function sequencesToID(keySequences) {
    return keySequences.reduce(function (prevValue, keySequence) {
        return prevValue + __WEBPACK_IMPORTED_MODULE_0__KeytipConstants__["KTP_SEPARATOR"] + keySequence.split('').join(__WEBPACK_IMPORTED_MODULE_0__KeytipConstants__["KTP_SEPARATOR"]);
    }, __WEBPACK_IMPORTED_MODULE_0__KeytipConstants__["KTP_PREFIX"]);
}
/**
 * Merges an overflow sequence with a key sequence.
 *
 * @param keySequences - Full sequence for one keytip.
 * @param overflowKeySequences - Full overflow keytip sequence.
 * @returns {string[]} Sequence that will be used by the keytip when in the overflow.
 */
function mergeOverflows(keySequences, overflowKeySequences) {
    var overflowSequenceLen = overflowKeySequences.length;
    var overflowSequence = overflowKeySequences.slice().pop();
    var newKeySequences = keySequences.slice();
    return Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["addElementAtIndex"])(newKeySequences, overflowSequenceLen - 1, overflowSequence);
}
/**
 * Constructs the data-ktp-target attribute selector from a full key sequence.
 *
 * @param keySequences - Full string[] for a Keytip.
 * @returns {string} String selector to use to query for the keytip target.
 */
function ktpTargetFromSequences(keySequences) {
    return '[' + __WEBPACK_IMPORTED_MODULE_0__KeytipConstants__["DATAKTP_TARGET"] + '="' + sequencesToID(keySequences) + '"]';
}
/**
 * Constructs the data-ktp-execute-target attribute selector from a keytip ID.
 *
 * @param keytipId - ID of the Keytip.
 * @returns {string} String selector to use to query for the keytip execute target.
 */
function ktpTargetFromId(keytipId) {
    return '[' + __WEBPACK_IMPORTED_MODULE_0__KeytipConstants__["DATAKTP_EXECUTE_TARGET"] + '="' + keytipId + '"]';
}
/**
 * Gets the aria-describedby value to put on the component with this keytip.
 *
 * @param keySequences - KeySequences of the keytip.
 * @returns {string} The aria-describedby value to set on the component with this keytip.
 */
function getAriaDescribedBy(keySequences) {
    var describedby = ' ' + __WEBPACK_IMPORTED_MODULE_0__KeytipConstants__["KTP_LAYER_ID"];
    if (!keySequences.length) {
        // Return just the layer ID
        return describedby;
    }
    return describedby + ' ' + sequencesToID(keySequences);
}


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Toggle/Toggle.styles.js
module.exports = __webpack_require__(56);

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Styling__);

var getStyles = function (props) {
    var theme = props.theme, className = props.className, disabled = props.disabled, checked = props.checked, inlineLabel = props.inlineLabel, onOffMissing = props.onOffMissing;
    var semanticColors = theme.semanticColors;
    var pillUncheckedBackground = semanticColors.bodyBackground;
    var pillCheckedBackground = semanticColors.inputBackgroundChecked;
    var pillCheckedHoveredBackground = semanticColors.inputBackgroundCheckedHovered;
    var pillCheckedDisabledBackground = semanticColors.disabledBodySubtext;
    var thumbBackground = semanticColors.inputBorderHovered;
    var thumbCheckedBackground = semanticColors.inputForegroundChecked;
    var thumbDisabledBackground = semanticColors.disabledBodySubtext;
    var thumbCheckedDisabledBackground = semanticColors.disabledBackground;
    var pillBorderColor = semanticColors.smallInputBorder;
    var pillBorderHoveredColor = semanticColors.inputBorderHovered;
    var pillBorderDisabledColor = semanticColors.disabledBodySubtext;
    var textDisabledColor = semanticColors.disabledText;
    return {
        root: [
            'ms-Toggle',
            checked && 'is-checked',
            !disabled && 'is-enabled',
            disabled && 'is-disabled',
            theme.fonts.medium,
            {
                marginBottom: '8px'
            },
            inlineLabel && {
                display: 'flex',
                alignItems: 'center'
            },
            className
        ],
        label: [
            'ms-Toggle-label',
            disabled && {
                color: textDisabledColor,
                selectors: (_a = {},
                    _a[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                        color: 'GrayText'
                    },
                    _a)
            },
            inlineLabel &&
                !onOffMissing && {
                marginRight: 16
            },
            onOffMissing &&
                inlineLabel && {
                order: 1,
                marginLeft: 16
            }
        ],
        container: [
            'ms-Toggle-innerContainer',
            {
                display: 'inline-flex',
                position: 'relative'
            }
        ],
        pill: [
            'ms-Toggle-background',
            Object(__WEBPACK_IMPORTED_MODULE_0__Styling__["getFocusStyle"])(theme, -3),
            {
                fontSize: '20px',
                boxSizing: 'border-box',
                width: '2.2em',
                height: '1em',
                borderRadius: '1em',
                transition: 'all 0.1s ease',
                borderWidth: '1px',
                borderStyle: 'solid',
                background: pillUncheckedBackground,
                borderColor: pillBorderColor,
                cursor: 'pointer',
                display: 'flex',
                alignItems: 'center',
                padding: '0 .2em'
            },
            !disabled && [
                !checked && {
                    selectors: {
                        ':hover': [
                            {
                                borderColor: pillBorderHoveredColor
                            }
                        ],
                        ':hover .ms-Toggle-thumb': [
                            {
                                selectors: (_b = {},
                                    _b[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                        borderColor: 'Highlight'
                                    },
                                    _b)
                            }
                        ]
                    }
                },
                checked && [
                    {
                        background: pillCheckedBackground,
                        borderColor: 'transparent',
                        justifyContent: 'flex-end'
                    },
                    {
                        selectors: (_c = {
                                ':hover': [
                                    {
                                        backgroundColor: pillCheckedHoveredBackground,
                                        borderColor: 'transparent',
                                        selectors: (_d = {},
                                            _d[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                                backgroundColor: 'Highlight'
                                            },
                                            _d)
                                    }
                                ]
                            },
                            _c[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                backgroundColor: 'WindowText'
                            },
                            _c)
                    }
                ]
            ],
            disabled && [
                {
                    cursor: 'default'
                },
                !checked && [
                    {
                        borderColor: pillBorderDisabledColor
                    }
                ],
                checked && [
                    {
                        backgroundColor: pillCheckedDisabledBackground,
                        borderColor: 'transparent',
                        justifyContent: 'flex-end'
                    }
                ]
            ],
            !disabled && {
                selectors: {
                    '&:hover': {
                        selectors: (_e = {},
                            _e[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                borderColor: 'Highlight'
                            },
                            _e)
                    }
                }
            }
        ],
        thumb: [
            'ms-Toggle-thumb',
            {
                width: '.5em',
                height: '.5em',
                borderRadius: '.5em',
                transition: 'all 0.1s ease',
                backgroundColor: thumbBackground,
                /* Border is added to handle high contrast mode for Firefox */
                borderColor: 'transparent',
                borderWidth: '.28em',
                borderStyle: 'solid',
                boxSizing: 'border-box'
            },
            !disabled &&
                checked && [
                {
                    backgroundColor: thumbCheckedBackground,
                    selectors: (_f = {},
                        _f[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                            backgroundColor: 'Window',
                            borderColor: 'Window'
                        },
                        _f)
                }
            ],
            disabled && [
                !checked && [
                    {
                        backgroundColor: thumbDisabledBackground
                    }
                ],
                checked && [
                    {
                        backgroundColor: thumbCheckedDisabledBackground
                    }
                ]
            ]
        ],
        text: [
            'ms-Toggle-stateText',
            {
                selectors: {
                    // Workaround: make rules more specific than Label rules.
                    '&&': {
                        padding: '0',
                        margin: '0 8px',
                        userSelect: 'none'
                    }
                }
            },
            disabled && {
                selectors: {
                    '&&': {
                        color: textDisabledColor,
                        selectors: (_g = {},
                            _g[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                color: 'GrayText'
                            },
                            _g)
                    }
                }
            }
        ]
    };
    var _a, _b, _c, _d, _e, _f, _g;
};


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/TooltipHost.js
module.exports = __webpack_require__(58);

/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipHost", function() { return TooltipHost; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TooltipHost_base__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TooltipHost_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__TooltipHost_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__TooltipHost_styles__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__TooltipHost_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__TooltipHost_styles__);



var TooltipHost = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__TooltipHost_base__["TooltipHostBase"], __WEBPACK_IMPORTED_MODULE_2__TooltipHost_styles__["getStyles"], undefined, {
    scope: 'TooltipHost'
});


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/TooltipHost.base.js
module.exports = __webpack_require__(60);

/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipHostBase", function() { return TooltipHostBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__TooltipHost_types__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__TooltipHost_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__TooltipHost_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Tooltip__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Tooltip_types__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Tooltip_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__Tooltip_types__);






var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["classNamesFunction"])();
var TooltipHostBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](TooltipHostBase, _super);
    // Constructor
    function TooltipHostBase(props) {
        var _this = _super.call(this, props) || this;
        // The wrapping div that gets the hover events
        _this._tooltipHost = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        // The ID of the setTimeout that will eventually close the tooltip if the
        // the tooltip isn't hovered over.
        _this._closingTimer = -1;
        _this.show = function () {
            _this._toggleTooltip(true);
        };
        _this.dismiss = function () {
            _this._hideTooltip();
        };
        // Show Tooltip
        _this._onTooltipMouseEnter = function (ev) {
            var overflowMode = _this.props.overflowMode;
            if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== _this) {
                TooltipHostBase._currentVisibleTooltip.dismiss();
            }
            TooltipHostBase._currentVisibleTooltip = _this;
            if (overflowMode !== undefined) {
                var overflowElement = _this._getTargetElement();
                if (overflowElement && !Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["hasOverflow"])(overflowElement)) {
                    return;
                }
            }
            if (ev.target && Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["portalContainsElement"])(ev.target, _this._getTargetElement())) {
                // Do not show tooltip when target is inside a portal relative to TooltipHost.
                return;
            }
            _this._toggleTooltip(true);
            _this._clearDismissTimer();
        };
        // Hide Tooltip
        _this._onTooltipMouseLeave = function (ev) {
            if (_this.props.closeDelay) {
                _this._clearDismissTimer();
                _this._closingTimer = _this._async.setTimeout(function () {
                    _this._toggleTooltip(false);
                }, _this.props.closeDelay);
            }
            else {
                _this._toggleTooltip(false);
            }
            if (TooltipHostBase._currentVisibleTooltip === _this) {
                TooltipHostBase._currentVisibleTooltip = undefined;
            }
        };
        _this._clearDismissTimer = function () {
            _this._async.clearTimeout(_this._closingTimer);
        };
        // Hide Tooltip
        _this._hideTooltip = function () {
            _this._toggleTooltip(false);
        };
        _this.state = {
            isTooltipVisible: false
        };
        return _this;
    }
    // Render
    TooltipHostBase.prototype.render = function () {
        var _a = this.props, calloutProps = _a.calloutProps, children = _a.children, content = _a.content, delay = _a.delay, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, className = _a.hostClassName, id = _a.id, _b = _a.setAriaDescribedBy, setAriaDescribedBy = _b === void 0 ? true : _b, tooltipProps = _a.tooltipProps, styles = _a.styles, theme = _a.theme;
        this._classNames = getClassNames(styles, {
            theme: theme,
            className: className
        });
        var isTooltipVisible = this.state.isTooltipVisible;
        var tooltipId = id || Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getId"])('tooltip');
        var isContentPresent = !!(content || (tooltipProps && tooltipProps.onRenderContent && tooltipProps.onRenderContent()));
        var showTooltip = isTooltipVisible && isContentPresent;
        var ariaDescribedBy = setAriaDescribedBy && isTooltipVisible && isContentPresent ? tooltipId : undefined;
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ className: this._classNames.root, ref: this._tooltipHost }, { onFocusCapture: this._onTooltipMouseEnter }, { onBlurCapture: this._hideTooltip }, { onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave, "aria-describedby": ariaDescribedBy }),
            children,
            showTooltip && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__Tooltip__["Tooltip"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ id: tooltipId, delay: delay, content: content, targetElement: this._getTargetElement(), directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL, calloutProps: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["assign"])({}, calloutProps, {
                    onMouseEnter: this._onTooltipMouseEnter,
                    onMouseLeave: this._onTooltipMouseLeave
                }), onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave }, Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_2__Utilities__["divProperties"]), tooltipProps)))));
    };
    TooltipHostBase.prototype.componentWillUnmount = function () {
        if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip === this) {
            TooltipHostBase._currentVisibleTooltip = undefined;
        }
    };
    TooltipHostBase.prototype._getTargetElement = function () {
        if (!this._tooltipHost.current) {
            return undefined;
        }
        var overflowMode = this.props.overflowMode;
        // Select target element based on overflow mode. For parent mode, you want to position the tooltip relative
        // to the parent element, otherwise it might look off.
        if (overflowMode !== undefined) {
            switch (overflowMode) {
                case __WEBPACK_IMPORTED_MODULE_3__TooltipHost_types__["TooltipOverflowMode"].Parent:
                    return this._tooltipHost.current.parentElement;
                case __WEBPACK_IMPORTED_MODULE_3__TooltipHost_types__["TooltipOverflowMode"].Self:
                    return this._tooltipHost.current;
            }
        }
        return this._tooltipHost.current;
    };
    TooltipHostBase.prototype._toggleTooltip = function (isTooltipVisible) {
        var _this = this;
        if (this.state.isTooltipVisible !== isTooltipVisible) {
            this.setState({ isTooltipVisible: isTooltipVisible }, function () { return _this.props.onTooltipToggle && _this.props.onTooltipToggle(_this.state.isTooltipVisible); });
        }
    };
    TooltipHostBase.defaultProps = {
        delay: __WEBPACK_IMPORTED_MODULE_5__Tooltip_types__["TooltipDelay"].medium
    };
    return TooltipHostBase;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipOverflowMode", function() { return TooltipOverflowMode; });
var TooltipOverflowMode;
(function (TooltipOverflowMode) {
    /** Only show tooltip if parent DOM element is overflowing */
    TooltipOverflowMode[TooltipOverflowMode["Parent"] = 0] = "Parent";
    /** Only show tooltip if tooltip host's content is overflowing */
    TooltipOverflowMode[TooltipOverflowMode["Self"] = 1] = "Self";
})(TooltipOverflowMode || (TooltipOverflowMode = {}));


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/Tooltip.js
module.exports = __webpack_require__(63);

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return Tooltip; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Tooltip_base__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Tooltip_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Tooltip_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Tooltip_styles__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Tooltip_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Tooltip_styles__);



var Tooltip = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__Tooltip_base__["TooltipBase"], __WEBPACK_IMPORTED_MODULE_2__Tooltip_styles__["getStyles"], undefined, {
    scope: 'Tooltip'
});


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/Tooltip.base.js
module.exports = __webpack_require__(65);

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipBase", function() { return TooltipBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Tooltip_types__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Tooltip_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Tooltip_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Callout__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Callout___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Callout__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_DirectionalHint__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_DirectionalHint___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__common_DirectionalHint__);






var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["classNamesFunction"])();
var TooltipBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](TooltipBase, _super);
    function TooltipBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._onRenderContent = function (props) {
            return __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("p", { className: _this._classNames.subText }, props.content);
        };
        return _this;
    }
    TooltipBase.prototype.render = function () {
        var _a = this.props, className = _a.className, calloutProps = _a.calloutProps, delay = _a.delay, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, styles = _a.styles, id = _a.id, maxWidth = _a.maxWidth, _b = _a.onRenderContent, onRenderContent = _b === void 0 ? this._onRenderContent : _b, targetElement = _a.targetElement, theme = _a.theme;
        this._classNames = getClassNames(styles, {
            theme: theme,
            className: className || (calloutProps && calloutProps.className),
            delay: delay,
            maxWidth: maxWidth
        });
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__Callout__["Callout"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ target: targetElement, directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL }, calloutProps, Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_2__Utilities__["divProperties"], ['id']), { className: this._classNames.root }),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: this._classNames.content, id: id, role: "tooltip", onMouseEnter: this.props.onMouseEnter, onMouseLeave: this.props.onMouseLeave }, onRenderContent(this.props, this._onRenderContent))));
    };
    // Specify default props values
    TooltipBase.defaultProps = {
        directionalHint: __WEBPACK_IMPORTED_MODULE_5__common_DirectionalHint__["DirectionalHint"].topCenter,
        delay: __WEBPACK_IMPORTED_MODULE_3__Tooltip_types__["TooltipDelay"].medium,
        maxWidth: '364px',
        calloutProps: {
            isBeakVisible: true,
            beakWidth: 16,
            gapSpace: 0,
            setInitialFocus: true,
            doNotLayer: false
        }
    };
    return TooltipBase;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipDelay", function() { return TooltipDelay; });
var TooltipDelay;
(function (TooltipDelay) {
    TooltipDelay[TooltipDelay["zero"] = 0] = "zero";
    TooltipDelay[TooltipDelay["medium"] = 1] = "medium";
    TooltipDelay[TooltipDelay["long"] = 2] = "long";
})(TooltipDelay || (TooltipDelay = {}));


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/Tooltip.styles.js
module.exports = __webpack_require__(68);

/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Tooltip_types__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Tooltip_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Tooltip_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Styling__);


var getStyles = function (props) {
    var className = props.className, delay = props.delay, maxWidth = props.maxWidth, theme = props.theme;
    var palette = theme.palette, fonts = theme.fonts;
    return {
        root: [
            'ms-Tooltip',
            theme.fonts.medium,
            __WEBPACK_IMPORTED_MODULE_1__Styling__["AnimationClassNames"].fadeIn200,
            {
                background: palette.white,
                padding: '8px',
                animationDelay: '300ms',
                maxWidth: maxWidth
            },
            delay === __WEBPACK_IMPORTED_MODULE_0__Tooltip_types__["TooltipDelay"].zero && {
                animationDelay: '0s'
            },
            delay === __WEBPACK_IMPORTED_MODULE_0__Tooltip_types__["TooltipDelay"].long && {
                animationDelay: '500ms'
            },
            className
        ],
        content: [
            'ms-Tooltip-content',
            fonts.small,
            palette.neutralPrimary,
            {
                wordWrap: 'break-word',
                overflowWrap: 'break-word',
                overflow: 'hidden'
            }
        ],
        subText: [
            'ms-Tooltip-subtext',
            {
                margin: 0
            }
        ]
    };
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Tooltip/TooltipHost.styles.js
module.exports = __webpack_require__(70);

/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Styling__);

var GlobalClassNames = {
    root: 'ms-TooltipHost'
};
var getStyles = function (props) {
    var className = props.className, theme = props.theme;
    var classNames = Object(__WEBPACK_IMPORTED_MODULE_0__Styling__["getGlobalClassNames"])(GlobalClassNames, theme);
    return {
        root: [
            classNames.root,
            {
                display: 'inline'
            },
            className
        ]
    };
};


/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Checkbox__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Checkbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Checkbox__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__Checkbox__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__Checkbox__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Checkbox_base__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Checkbox_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Checkbox_base__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__Checkbox_base__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_1__Checkbox_base__[key]; }) }(__WEBPACK_IMPORT_KEY__));




/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Checkbox/Checkbox.js
module.exports = __webpack_require__(73);

/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Checkbox", function() { return Checkbox; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Checkbox_base__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Checkbox_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Checkbox_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Checkbox_styles__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Checkbox_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Checkbox_styles__);



var Checkbox = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__Checkbox_base__["CheckboxBase"], __WEBPACK_IMPORTED_MODULE_2__Checkbox_styles__["getStyles"], undefined, { scope: 'Checkbox' });


/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckboxBase", function() { return CheckboxBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Icon__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Icon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Icon__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__KeytipData__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__KeytipData___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__KeytipData__);





var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["classNamesFunction"])();
var CheckboxBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](CheckboxBase, _super);
    /**
     * Initialize a new instance of the Checkbox
     * @param props - Props for the component
     * @param context - Context or initial state for the base component.
     */
    function CheckboxBase(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._checkBox = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._onFocus = function (ev) {
            var inputProps = _this.props.inputProps;
            if (inputProps && inputProps.onFocus) {
                inputProps.onFocus(ev);
            }
        };
        _this._onBlur = function (ev) {
            var inputProps = _this.props.inputProps;
            if (inputProps && inputProps.onBlur) {
                inputProps.onBlur(ev);
            }
        };
        _this._onChange = function (ev) {
            var _a = _this.props, disabled = _a.disabled, onChange = _a.onChange;
            var isChecked = _this.state.isChecked;
            if (!disabled) {
                if (onChange) {
                    onChange(ev, !isChecked);
                }
                if (_this.props.checked === undefined) {
                    _this.setState({ isChecked: !isChecked });
                }
            }
        };
        _this._onRenderLabel = function (props) {
            var label = props.label;
            return label ? __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: _this._classNames.text }, label) : null;
        };
        _this._warnMutuallyExclusive({
            checked: 'defaultChecked'
        });
        _this._id = _this.props.id || Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getId"])('checkbox-');
        _this.state = {
            isChecked: !!(props.checked !== undefined ? props.checked : props.defaultChecked)
        };
        return _this;
    }
    CheckboxBase.prototype.componentWillReceiveProps = function (newProps) {
        if (newProps.checked !== undefined) {
            this.setState({
                isChecked: !!newProps.checked // convert null to false
            });
        }
    };
    /**
     * Render the Checkbox based on passed props
     */
    CheckboxBase.prototype.render = function () {
        var _this = this;
        var _a = this.props, checked = _a.checked, className = _a.className, defaultChecked = _a.defaultChecked, disabled = _a.disabled, inputProps = _a.inputProps, name = _a.name, boxSide = _a.boxSide, theme = _a.theme, ariaLabel = _a.ariaLabel, ariaLabelledBy = _a.ariaLabelledBy, ariaDescribedBy = _a.ariaDescribedBy, styles = _a.styles, _b = _a.onRenderLabel, onRenderLabel = _b === void 0 ? this._onRenderLabel : _b, checkmarkIconProps = _a.checkmarkIconProps, ariaPositionInSet = _a.ariaPositionInSet, ariaSetSize = _a.ariaSetSize, keytipProps = _a.keytipProps, title = _a.title;
        var isChecked = checked === undefined ? this.state.isChecked : checked;
        var isReversed = boxSide !== 'start' ? true : false;
        this._classNames = getClassNames(styles, {
            theme: theme,
            className: className,
            disabled: disabled,
            checked: isChecked,
            reversed: isReversed,
            isUsingCustomLabelRender: onRenderLabel !== this._onRenderLabel
        });
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__KeytipData__["KeytipData"], { keytipProps: keytipProps, disabled: disabled }, function (keytipAttributes) { return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: _this._classNames.root },
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("input", __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ type: "checkbox" }, inputProps, { "data-ktp-execute-target": keytipAttributes['data-ktp-execute-target'] }, checked !== undefined && { checked: checked }, defaultChecked !== undefined && { defaultChecked: defaultChecked }, { disabled: disabled, className: _this._classNames.input, ref: _this._checkBox, name: name, id: _this._id, title: title, onChange: _this._onChange, onFocus: _this._onFocus, onBlur: _this._onBlur, "aria-disabled": disabled, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledBy, "aria-describedby": Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["mergeAriaAttributeValues"])(ariaDescribedBy, keytipAttributes['aria-describedby']), "aria-posinset": ariaPositionInSet, "aria-setsize": ariaSetSize })),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("label", { className: _this._classNames.label, htmlFor: _this._id },
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: _this._classNames.checkbox, "data-ktp-target": keytipAttributes['data-ktp-target'] },
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Icon__["Icon"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ iconName: "CheckMark" }, checkmarkIconProps, { className: _this._classNames.checkmark }))),
                onRenderLabel(_this.props, _this._onRenderLabel)))); }));
    };
    Object.defineProperty(CheckboxBase.prototype, "checked", {
        get: function () {
            return this.state.isChecked;
        },
        enumerable: true,
        configurable: true
    });
    CheckboxBase.prototype.focus = function () {
        if (this._checkBox.current) {
            this._checkBox.current.focus();
        }
    };
    CheckboxBase.defaultProps = {
        boxSide: 'start'
    };
    return CheckboxBase;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Checkbox/Checkbox.styles.js
module.exports = __webpack_require__(76);

/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Styling__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Utilities__);


var MS_CHECKBOX_LABEL_SIZE = '20px';
var MS_CHECKBOX_TRANSITION_DURATION = '200ms';
var MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';
var getStyles = function (props) {
    var className = props.className, theme = props.theme, reversed = props.reversed, checked = props.checked, disabled = props.disabled, isUsingCustomLabelRender = props.isUsingCustomLabelRender;
    var semanticColors = theme.semanticColors;
    var checkmarkFontColor = semanticColors.inputForegroundChecked;
    var checkmarkFontColorCheckedDisabled = semanticColors.disabledBackground;
    var checkmarkFontColorHovered = semanticColors.inputBorder;
    var checkboxBorderColor = semanticColors.smallInputBorder;
    var checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;
    var checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;
    var checkboxBorderHoveredColor = semanticColors.inputBorderHovered;
    var checkboxBackgroundChecked = semanticColors.inputBackgroundChecked;
    var checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;
    var checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;
    var checkboxHoveredTextColor = semanticColors.bodyText;
    var checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;
    var checkboxTextColor = semanticColors.bodyText;
    var checkboxTextColorDisabled = semanticColors.disabledText;
    return {
        root: [
            'ms-Checkbox',
            {
                position: 'relative',
                display: 'flex'
            },
            reversed && 'reversed',
            checked && 'is-checked',
            !disabled && 'is-enabled',
            disabled && 'is-disabled',
            !disabled && [
                !checked && {
                    selectors: {
                        ':hover .ms-Checkbox-checkbox': {
                            borderColor: checkboxBorderHoveredColor,
                            selectors: (_a = {},
                                _a[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                    borderColor: 'Highlight'
                                },
                                _a)
                        },
                        ':focus .ms-Checkbox-checkbox': { borderColor: checkboxBorderHoveredColor },
                        ':hover .ms-Checkbox-checkmark': {
                            color: checkmarkFontColorHovered,
                            opacity: '1',
                            selectors: (_b = {},
                                _b[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                    color: 'Highlight'
                                },
                                _b)
                        }
                    }
                },
                checked && {
                    selectors: (_c = {
                            ':hover .ms-Checkbox-checkbox': {
                                background: checkboxBackgroundCheckedHovered,
                                borderColor: checkboxBorderColorCheckedHovered
                            },
                            ':focus .ms-Checkbox-checkbox': {
                                background: checkboxBackgroundCheckedHovered,
                                borderColor: checkboxBorderColorCheckedHovered
                            }
                        },
                        _c[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                            selectors: {
                                ':hover .ms-Checkbox-checkbox': {
                                    background: 'Window',
                                    borderColor: 'Highlight'
                                },
                                ':focus .ms-Checkbox-checkbox': {
                                    background: 'Highlight'
                                },
                                ':focus:hover .ms-Checkbox-checkbox': {
                                    background: 'Highlight'
                                },
                                ':focus:hover .ms-Checkbox-checkmark': {
                                    color: 'Window'
                                },
                                ':hover .ms-Checkbox-checkmark': {
                                    color: 'Highlight'
                                }
                            }
                        },
                        _c)
                },
                {
                    selectors: {
                        ':hover .ms-Checkbox-text': { color: checkboxHoveredTextColor },
                        ':focus .ms-Checkbox-text': { color: checkboxHoveredTextColor }
                    }
                }
            ],
            className
        ],
        input: [
            {
                position: 'absolute',
                background: 'none',
                opacity: 0,
                selectors: (_d = {},
                    _d["." + __WEBPACK_IMPORTED_MODULE_1__Utilities__["IsFocusVisibleClassName"] + " &:focus + label::before"] = {
                        outline: '1px solid ' + theme.palette.neutralSecondary,
                        outlineOffset: '2px',
                        selectors: (_e = {},
                            _e[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                outline: '1px solid ActiveBorder'
                            },
                            _e)
                    },
                    _d)
            }
        ],
        label: [
            'ms-Checkbox-label',
            theme.fonts.medium,
            {
                display: 'flex',
                alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',
                cursor: disabled ? 'default' : 'pointer',
                position: 'relative',
                userSelect: 'none',
                textAlign: 'left'
            },
            reversed && {
                flexDirection: 'row-reverse',
                justifyContent: 'flex-end'
            },
            {
                selectors: {
                    '&::before': {
                        position: 'absolute',
                        left: 0,
                        right: 0,
                        top: 0,
                        bottom: 0,
                        content: '""',
                        pointerEvents: 'none'
                    }
                }
            }
        ],
        checkbox: [
            'ms-Checkbox-checkbox',
            {
                display: 'flex',
                flexShrink: 0,
                alignItems: 'center',
                justifyContent: 'center',
                height: MS_CHECKBOX_LABEL_SIZE,
                width: MS_CHECKBOX_LABEL_SIZE,
                borderWidth: '1px',
                borderStyle: 'solid',
                borderColor: checkboxBorderColor,
                boxSizing: 'border-box',
                transitionProperty: 'background, border, border-color',
                transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,
                transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,
                /* in case the icon is bigger than the box */
                overflow: 'hidden'
            },
            !reversed
                ? // this margin on the checkbox is for backwards compat.
                    // notably it has the effect where a customRender is used, there will be only a 4px margin from checkbox to label.
                    // the label by default would have another 4px margin for a total of 8px margin between checkbox and label.
                    // we don't combine the two (and move it into the text) to not incur a breaking change for everyone using custom render atm.
                    {
                        marginRight: 4
                    }
                : {
                    marginLeft: 4
                },
            !disabled &&
                checked && {
                background: checkboxBackgroundChecked,
                borderColor: checkboxBorderColorChecked,
                selectors: (_f = {},
                    _f[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                        background: 'Highlight',
                        borderColor: 'Highlight'
                    },
                    _f)
            },
            disabled && {
                borderColor: checkboxBorderColorDisabled,
                selectors: (_g = {},
                    _g[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                        borderColor: 'InactiveBorder'
                    },
                    _g)
            },
            checked &&
                disabled && {
                background: checkboxBackgroundDisabledChecked,
                borderColor: checkboxBorderColorDisabled
            }
        ],
        checkmark: [
            'ms-Checkbox-checkmark',
            {
                opacity: checked ? '1' : '0',
                color: checked && disabled ? checkmarkFontColorCheckedDisabled : checkmarkFontColor,
                selectors: (_h = {},
                    _h[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                        color: disabled ? 'InactiveBorder' : 'Window',
                        MsHighContrastAdjust: 'none'
                    },
                    _h)
            }
        ],
        text: [
            'ms-Checkbox-text',
            {
                color: disabled ? checkboxTextColorDisabled : checkboxTextColor,
                fontSize: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontSizes"].medium,
                lineHeight: '20px'
            },
            !reversed
                ? {
                    marginLeft: 4
                }
                : {
                    marginRight: 4
                },
            disabled && {
                selectors: (_j = {},
                    _j[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                        // backwards compat for the color of the text when the checkbox was rendered
                        // using a Button.
                        color: 'InactiveBorder'
                    },
                    _j)
            }
        ]
    };
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/ChoiceGroup/ChoiceGroup.js
module.exports = __webpack_require__(78);

/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChoiceGroup", function() { return ChoiceGroup; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ChoiceGroup_base__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ChoiceGroup_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__ChoiceGroup_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ChoiceGroup_styles__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ChoiceGroup_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__ChoiceGroup_styles__);



var ChoiceGroup = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__ChoiceGroup_base__["ChoiceGroupBase"], __WEBPACK_IMPORTED_MODULE_2__ChoiceGroup_styles__["getStyles"], undefined, { scope: 'ChoiceGroup' });


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/ChoiceGroup/ChoiceGroup.base.js
module.exports = __webpack_require__(80);

/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChoiceGroupBase", function() { return ChoiceGroupBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Label__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Label___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Label__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ChoiceGroupOption_index__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ChoiceGroupOption_index___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__ChoiceGroupOption_index__);





var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_3__Utilities__["classNamesFunction"])();
var ChoiceGroupBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](ChoiceGroupBase, _super);
    function ChoiceGroupBase(props) {
        var _this = _super.call(this, props) || this;
        _this._inputElement = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this.focusedVars = {};
        _this.changedVars = {};
        _this._onFocus = function (key) {
            return _this.focusedVars[key]
                ? _this.focusedVars[key]
                : (_this.focusedVars[key] = function (ev, option) {
                    _this.setState({
                        keyFocused: key,
                        keyChecked: _this.state.keyChecked
                    });
                });
        };
        _this._onBlur = function (ev, option) {
            _this.setState({
                keyFocused: undefined,
                keyChecked: _this.state.keyChecked
            });
        };
        _this._onChange = function (key) {
            return _this.changedVars[key]
                ? _this.changedVars[key]
                : (_this.changedVars[key] = function (evt, option) {
                    var _a = _this.props, onChanged = _a.onChanged, onChange = _a.onChange, selectedKey = _a.selectedKey, _b = _a.options, options = _b === void 0 ? [] : _b;
                    // Only manage state in uncontrolled scenarios.
                    if (selectedKey === undefined) {
                        _this.setState({
                            keyChecked: key
                        });
                    }
                    var originalOption = Object(__WEBPACK_IMPORTED_MODULE_3__Utilities__["find"])(options, function (value) { return value.key === key; });
                    // TODO: onChanged deprecated, remove else if after 07/17/2017 when onChanged has been removed.
                    if (onChange) {
                        onChange(evt, originalOption);
                    }
                    else if (onChanged) {
                        onChanged(originalOption);
                    }
                });
        };
        _this._warnDeprecations({ onChanged: 'onChange' });
        _this._warnMutuallyExclusive({
            selectedKey: 'defaultSelectedKey'
        });
        var validDefaultSelectedKey = !!props.options && props.options.some(function (option) { return option.key === props.defaultSelectedKey; });
        _this.state = {
            keyChecked: props.defaultSelectedKey === undefined || !validDefaultSelectedKey ? _this._getKeyChecked(props) : props.defaultSelectedKey,
            keyFocused: undefined
        };
        _this._id = Object(__WEBPACK_IMPORTED_MODULE_3__Utilities__["getId"])('ChoiceGroup');
        _this._labelId = Object(__WEBPACK_IMPORTED_MODULE_3__Utilities__["getId"])('ChoiceGroupLabel');
        return _this;
    }
    Object.defineProperty(ChoiceGroupBase.prototype, "checkedOption", {
        /**
         * Gets the current checked option.
         */
        get: function () {
            var _a = this.props.options, options = _a === void 0 ? [] : _a;
            var key = this.state.keyChecked;
            return Object(__WEBPACK_IMPORTED_MODULE_3__Utilities__["find"])(options, function (value) { return value.key === key; });
        },
        enumerable: true,
        configurable: true
    });
    ChoiceGroupBase.prototype.componentWillReceiveProps = function (newProps) {
        var newKeyChecked = this._getKeyChecked(newProps);
        var oldKeyChecked = this._getKeyChecked(this.props);
        if (newKeyChecked !== oldKeyChecked) {
            this.setState({
                keyChecked: newKeyChecked
            });
        }
    };
    ChoiceGroupBase.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, theme = _a.theme, styles = _a.styles, options = _a.options, label = _a.label, required = _a.required, disabled = _a.disabled, name = _a.name, role = _a.role;
        var _b = this.state, keyChecked = _b.keyChecked, keyFocused = _b.keyFocused;
        var classNames = getClassNames(styles, {
            theme: theme,
            className: className,
            optionsContainIconOrImage: options.some(function (option) { return Boolean(option.iconProps || option.imageSrc); })
        });
        var ariaLabelledBy = this.props.ariaLabelledBy
            ? this.props.ariaLabelledBy
            : label
                ? this._id + '-label'
                : this.props['aria-labelledby'];
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { role: role, className: classNames.applicationRole },
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ className: classNames.root, role: "radiogroup" }, ariaLabelledBy && { 'aria-labelledby': ariaLabelledBy }),
                label && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__Label__["Label"], { className: classNames.label, required: required, id: this._id + '-label' }, label)),
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.flexContainer }, options.map(function (option) {
                    var innerOptionProps = __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, option, { focused: option.key === keyFocused, checked: option.key === keyChecked, disabled: option.disabled || disabled, id: _this._id + "-" + option.key, labelId: _this._labelId + "-" + option.key, name: name || _this._id, required: required });
                    return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__ChoiceGroupOption_index__["ChoiceGroupOption"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ key: option.key, onBlur: _this._onBlur, onFocus: _this._onFocus(option.key), onChange: _this._onChange(option.key) }, innerOptionProps)));
                })))));
    };
    ChoiceGroupBase.prototype.focus = function () {
        var options = this.props.options;
        if (options) {
            for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
                var option = options_1[_i];
                var elementToFocus = document.getElementById(this._id + "-" + option.key);
                if (elementToFocus && elementToFocus.getAttribute('data-is-focusable') === 'true') {
                    elementToFocus.focus(); // focus on checked or default focusable key
                    return;
                }
            }
        }
        if (this._inputElement.current) {
            this._inputElement.current.focus();
        }
    };
    ChoiceGroupBase.prototype._getKeyChecked = function (props) {
        if (props.selectedKey !== undefined) {
            return props.selectedKey;
        }
        var _a = props.options, options = _a === void 0 ? [] : _a;
        var optionsChecked = options.filter(function (option) {
            return option.checked;
        });
        if (optionsChecked.length === 0) {
            return undefined;
        }
        else {
            return optionsChecked[0].key;
        }
    };
    ChoiceGroupBase.defaultProps = {
        options: []
    };
    return ChoiceGroupBase;
}(__WEBPACK_IMPORTED_MODULE_3__Utilities__["BaseComponent"]));



/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/ChoiceGroup/ChoiceGroupOption/index.js
module.exports = __webpack_require__(82);

/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ChoiceGroupOption__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ChoiceGroupOption___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__ChoiceGroupOption__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__ChoiceGroupOption__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__ChoiceGroupOption__[key]; }) }(__WEBPACK_IMPORT_KEY__));



/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.js
module.exports = __webpack_require__(84);

/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChoiceGroupOption", function() { return ChoiceGroupOption; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ChoiceGroupOption_base__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ChoiceGroupOption_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__ChoiceGroupOption_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ChoiceGroupOption_styles__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ChoiceGroupOption_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__ChoiceGroupOption_styles__);



var ChoiceGroupOption = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__ChoiceGroupOption_base__["ChoiceGroupOptionBase"], __WEBPACK_IMPORTED_MODULE_2__ChoiceGroupOption_styles__["getStyles"], undefined, { scope: 'ChoiceGroupOption' });


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.js
module.exports = __webpack_require__(86);

/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChoiceGroupOptionBase", function() { return ChoiceGroupOptionBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Image__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Image___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Image__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Icon__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Icon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Icon__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Utilities__);





var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_4__Utilities__["classNamesFunction"])();
var ChoiceGroupOptionBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](ChoiceGroupOptionBase, _super);
    function ChoiceGroupOptionBase(props) {
        var _this = _super.call(this, props) || this;
        _this._inputElement = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._onRenderField = function (props) {
            var _a = props.onRenderLabel, onRenderLabel = _a === void 0 ? _this._onRenderLabel : _a, id = props.id, imageSrc = props.imageSrc, imageAlt = props.imageAlt, selectedImageSrc = props.selectedImageSrc, iconProps = props.iconProps;
            var imageSize = props.imageSize ? props.imageSize : { width: 32, height: 32 };
            return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("label", { htmlFor: id, className: _this._classNames.field },
                imageSrc && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: _this._classNames.innerField, style: { height: imageSize.height, width: imageSize.width } },
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: _this._classNames.imageWrapper },
                        __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__Image__["Image"], { src: imageSrc, alt: imageAlt ? imageAlt : '', width: imageSize.width, height: imageSize.height })),
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: _this._classNames.selectedImageWrapper },
                        __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__Image__["Image"], { src: selectedImageSrc, alt: imageAlt ? imageAlt : '', width: imageSize.width, height: imageSize.height })))),
                iconProps ? (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: _this._classNames.innerField },
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: _this._classNames.iconWrapper },
                        __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Icon__["Icon"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, iconProps))))) : null,
                imageSrc || iconProps ? (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: _this._classNames.labelWrapper, style: { maxWidth: imageSize.width * 2 } }, onRenderLabel(props))) : (onRenderLabel(props))));
        };
        _this._onRenderLabel = function (props) {
            return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { id: props.labelId, className: "ms-ChoiceFieldLabel" }, props.text));
        };
        return _this;
    }
    ChoiceGroupOptionBase.prototype.render = function () {
        var _a = this.props, ariaLabel = _a.ariaLabel, focused = _a.focused, required = _a.required, theme = _a.theme, iconProps = _a.iconProps, imageSrc = _a.imageSrc, _b = _a.imageSize, imageSize = _b === void 0 ? { width: 32, height: 32 } : _b, disabled = _a.disabled, checked = _a.checked, id = _a.id, styles = _a.styles, name = _a.name, _c = _a.onRenderField, onRenderField = _c === void 0 ? this._onRenderField : _c;
        this._classNames = getClassNames(styles, {
            theme: theme,
            hasIcon: !!iconProps,
            hasImage: !!imageSrc,
            checked: checked,
            disabled: disabled,
            imageIsLarge: !!imageSrc && (imageSize.width > 71 || imageSize.height > 71),
            focused: focused
        });
        var _d = Object(__WEBPACK_IMPORTED_MODULE_4__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_4__Utilities__["inputProperties"]), className = _d.className, nativeProps = __WEBPACK_IMPORTED_MODULE_0_tslib__["d" /* __rest */](_d, ["className"]);
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: this._classNames.root },
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: this._classNames.choiceFieldWrapper },
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("input", __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ "aria-label": ariaLabel ? ariaLabel : undefined, ref: this._inputElement, id: id, className: Object(__WEBPACK_IMPORTED_MODULE_4__Utilities__["css"])(this._classNames.input, className), type: "radio", name: name, disabled: disabled, checked: checked, required: required, onChange: this._onChange.bind(this, this.props), onFocus: this._onFocus.bind(this, this.props), onBlur: this._onBlur.bind(this, this.props) }, nativeProps)),
                onRenderField(this.props, this._onRenderField))));
    };
    ChoiceGroupOptionBase.prototype._onChange = function (props, evt) {
        var onChange = props.onChange;
        if (onChange) {
            onChange(evt, props);
        }
    };
    ChoiceGroupOptionBase.prototype._onBlur = function (props, evt) {
        var onBlur = props.onBlur;
        if (onBlur) {
            onBlur(evt, props);
        }
    };
    ChoiceGroupOptionBase.prototype._onFocus = function (props, evt) {
        var onFocus = props.onFocus;
        if (onFocus) {
            onFocus(evt, props);
        }
    };
    return ChoiceGroupOptionBase;
}(__WEBPACK_IMPORTED_MODULE_4__Utilities__["BaseComponent"]));



/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Image.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.styles.js
module.exports = __webpack_require__(89);

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Styling__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Utilities__);


var GlobalClassNames = {
    root: 'ms-ChoiceField',
    choiceFieldWrapper: 'ms-ChoiceField-wrapper',
    input: 'ms-ChoiceField-input',
    field: 'ms-ChoiceField-field',
    innerField: 'ms-ChoiceField-innerField',
    imageWrapper: 'ms-ChoiceField-imageWrapper',
    iconWrapper: 'ms-ChoiceField-iconWrapper',
    labelWrapper: 'ms-ChoiceField-labelWrapper',
    checked: 'is-checked'
};
var labelWrapperLineHeight = 15;
var iconSize = 32;
var choiceFieldSize = 20;
var choiceFieldTransitionDuration = '200ms';
var choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';
var radioButtonSpacing = 3;
var radioButtonInnerSize = 5;
function getChoiceGroupFocusStyle(palette, hasIconOrImage) {
    return [
        'is-inFocus',
        {
            selectors: (_a = {},
                _a["." + __WEBPACK_IMPORTED_MODULE_1__Utilities__["IsFocusVisibleClassName"] + " &"] = {
                    position: 'relative',
                    outline: 'transparent',
                    selectors: {
                        '::-moz-focus-inner': {
                            border: 0
                        },
                        ':after': {
                            content: '""',
                            top: -2,
                            right: -2,
                            bottom: -2,
                            left: -2,
                            pointerEvents: 'none',
                            border: '1px solid ' + (hasIconOrImage ? palette.neutralSecondary : palette.neutralPrimary),
                            position: 'absolute',
                            selectors: (_b = {},
                                _b[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                                    borderColor: 'WindowText',
                                    borderWidth: hasIconOrImage ? 1 : 2
                                },
                                _b)
                        }
                    }
                },
                _a)
        }
    ];
    var _a, _b;
}
function getImageWrapperStyle(isSelectedImageWrapper, className, checked) {
    return [
        className,
        {
            paddingBottom: 2,
            transitionProperty: 'opacity',
            transitionDuration: choiceFieldTransitionDuration,
            transitionTimingFunction: 'ease',
            selectors: {
                '.ms-Image': {
                    display: 'inline-block',
                    borderStyle: 'none'
                }
            }
        },
        (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [
            'is-hidden',
            {
                position: 'absolute',
                left: 0,
                top: 0,
                width: '100%',
                height: '100%',
                overflow: 'hidden',
                opacity: 0
            }
        ]
    ];
}
var getStyles = function (props) {
    var theme = props.theme, hasIcon = props.hasIcon, hasImage = props.hasImage, checked = props.checked, disabled = props.disabled, imageIsLarge = props.imageIsLarge, focused = props.focused;
    var palette = theme.palette, semanticColors = theme.semanticColors;
    var classNames = Object(__WEBPACK_IMPORTED_MODULE_0__Styling__["getGlobalClassNames"])(GlobalClassNames, theme);
    var fieldHoverOrFocusProperties = {
        selectors: {
            '.ms-ChoiceFieldLabel': {
                color: semanticColors.bodyTextChecked
            },
            ':before': {
                borderColor: checked ? semanticColors.inputBackgroundCheckedHovered : semanticColors.inputBorderHovered
            }
        }
    };
    var enabledFieldWithImageHoverOrFocusProperties = {
        borderColor: checked ? palette.themeDark : palette.neutralTertiaryAlt,
        selectors: {
            ':before': {
                opacity: 1,
                borderColor: checked ? palette.themeDark : semanticColors.inputBorderHovered
            }
        }
    };
    var circleAreaProperties = [
        {
            content: '""',
            display: 'inline-block',
            backgroundColor: semanticColors.bodyBackground,
            borderWidth: 1,
            borderStyle: 'solid',
            borderColor: semanticColors.smallInputBorder,
            width: choiceFieldSize,
            height: choiceFieldSize,
            fontWeight: 'normal',
            position: 'absolute',
            top: 0,
            left: 0,
            boxSizing: 'border-box',
            transitionProperty: 'border-color',
            transitionDuration: choiceFieldTransitionDuration,
            transitionTimingFunction: choiceFieldTransitionTiming,
            borderRadius: '50%'
        },
        disabled && {
            backgroundColor: checked ? semanticColors.bodyBackground : semanticColors.disabledText,
            borderColor: semanticColors.disabledText,
            selectors: (_a = {},
                _a[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    color: 'GrayText'
                },
                _a)
        },
        checked && {
            borderWidth: 1,
            borderStyle: 'solid',
            borderColor: semanticColors.inputBackgroundChecked,
            selectors: (_b = {},
                _b[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    borderColor: 'Highlight'
                },
                _b)
        },
        (hasIcon || hasImage) && {
            top: radioButtonSpacing,
            right: radioButtonSpacing,
            left: 'auto',
            opacity: !disabled && checked ? 1 : 0
        }
    ];
    var dotAreaProperties = [
        {
            content: '""',
            width: 0,
            height: 0,
            borderRadius: '50%',
            position: 'absolute',
            left: choiceFieldSize / 2,
            right: 0,
            transitionProperty: 'border-width',
            transitionDuration: choiceFieldTransitionDuration,
            transitionTimingFunction: choiceFieldTransitionTiming,
            boxSizing: 'border-box'
        },
        checked && {
            borderWidth: 5,
            borderStyle: 'solid',
            borderColor: semanticColors.inputBackgroundChecked,
            left: 5,
            top: 5,
            width: 10,
            height: 10,
            selectors: (_c = {},
                _c[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    borderColor: 'Highlight'
                },
                _c)
        },
        checked &&
            (hasIcon || hasImage) && {
            top: radioButtonSpacing + radioButtonInnerSize,
            right: radioButtonSpacing + radioButtonInnerSize,
            left: 'auto' // To reset the value of 'left' to its default value, so that 'right' works
        }
    ];
    return {
        root: [
            classNames.root,
            theme.fonts.medium,
            {
                display: 'flex',
                alignItems: 'center',
                boxSizing: 'border-box',
                color: semanticColors.bodyText,
                fontSize: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontSizes"].medium,
                fontWeight: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontWeights"].regular,
                minHeight: 26,
                border: 'none',
                position: 'relative',
                marginTop: 8,
                selectors: {
                    '.ms-ChoiceFieldLabel': {
                        fontSize: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontSizes"].medium,
                        display: 'inline-block'
                    }
                }
            },
            !hasIcon &&
                !hasImage && {
                selectors: {
                    '.ms-ChoiceFieldLabel': {
                        paddingLeft: '26px'
                    }
                }
            },
            hasImage && 'ms-ChoiceField--image',
            hasIcon && 'ms-ChoiceField--icon',
            (hasIcon || hasImage) && {
                display: 'inline-flex',
                fontSize: 0,
                margin: '0 4px 4px 0',
                paddingLeft: 0,
                backgroundColor: palette.neutralLighter,
                height: '100%'
            }
        ],
        choiceFieldWrapper: [classNames.choiceFieldWrapper, focused && getChoiceGroupFocusStyle(palette, hasIcon || hasImage)],
        // The hidden input
        input: [
            classNames.input,
            {
                position: 'absolute',
                opacity: 0,
                top: 8
            },
            (hasIcon || hasImage) && {
                top: 0,
                right: 0,
                opacity: 0,
                width: '100%',
                height: '100%',
                margin: 0
            }
        ],
        field: [
            classNames.field,
            checked && classNames.checked,
            {
                display: 'inline-block',
                cursor: 'pointer',
                marginTop: 0,
                position: 'relative',
                verticalAlign: 'top',
                userSelect: 'none',
                minHeight: 20,
                selectors: {
                    ':hover': !disabled && fieldHoverOrFocusProperties,
                    ':focus': !disabled && fieldHoverOrFocusProperties,
                    // The circle
                    ':before': circleAreaProperties,
                    // The dot
                    ':after': dotAreaProperties
                }
            },
            hasIcon && 'ms-ChoiceField--icon',
            hasImage && 'ms-ChoiceField-field--image',
            (hasIcon || hasImage) && {
                boxSizing: 'content-box',
                cursor: 'pointer',
                paddingTop: 22,
                margin: 0,
                textAlign: 'center',
                transitionProperty: 'all',
                transitionDuration: choiceFieldTransitionDuration,
                transitionTimingFunction: 'ease',
                border: '2px solid transparent',
                justifyContent: 'center',
                alignItems: 'center',
                display: 'flex',
                flexDirection: 'column'
            },
            checked && {
                borderColor: palette.themePrimary
            },
            (hasIcon || hasImage) &&
                !disabled && {
                selectors: {
                    ':hover': enabledFieldWithImageHoverOrFocusProperties,
                    ':focus': enabledFieldWithImageHoverOrFocusProperties
                }
            },
            disabled && {
                cursor: 'default',
                selectors: (_d = {
                        '.ms-ChoiceFieldLabel': {
                            color: semanticColors.disabledBodyText
                        }
                    },
                    _d[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                        color: 'GrayText'
                    },
                    _d)
            }
        ],
        innerField: [
            classNames.innerField,
            (hasIcon || hasImage) && {
                position: 'relative',
                display: 'inline-block',
                paddingLeft: 30,
                paddingRight: 30
            },
            (hasIcon || hasImage) &&
                imageIsLarge && {
                paddingLeft: 24,
                paddingRight: 24
            },
            (hasIcon || hasImage) &&
                disabled && {
                opacity: 0.25,
                selectors: (_e = {},
                    _e[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                        color: 'GrayText',
                        opacity: 1
                    },
                    _e)
            }
        ],
        imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),
        selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),
        iconWrapper: [
            classNames.iconWrapper,
            {
                fontSize: iconSize,
                lineHeight: iconSize,
                height: iconSize
            }
        ],
        labelWrapper: [
            classNames.labelWrapper,
            (hasIcon || hasImage) && {
                display: 'block',
                position: 'relative',
                margin: '4px 8px',
                height: labelWrapperLineHeight * 2,
                lineHeight: labelWrapperLineHeight,
                overflow: 'hidden',
                whiteSpace: 'pre-wrap',
                textOverflow: 'ellipsis',
                fontSize: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontSizes"].medium,
                fontWeight: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontWeights"].regular
            }
        ]
    };
    var _a, _b, _c, _d, _e;
};


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/ChoiceGroup/ChoiceGroup.styles.js
module.exports = __webpack_require__(91);

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Styling__);

var GlobalClassNames = {
    root: 'ms-ChoiceFieldGroup',
    flexContainer: 'ms-ChoiceFieldGroup-flexContainer'
};
var getStyles = function (props) {
    var className = props.className, optionsContainIconOrImage = props.optionsContainIconOrImage, theme = props.theme;
    var classNames = Object(__WEBPACK_IMPORTED_MODULE_0__Styling__["getGlobalClassNames"])(GlobalClassNames, theme);
    return {
        applicationRole: className,
        root: [
            classNames.root,
            theme.fonts.medium,
            {
                display: 'block'
            }
        ],
        flexContainer: [
            classNames.flexContainer,
            optionsContainIconOrImage && {
                display: 'flex',
                flexDirection: 'row',
                flexWrap: 'wrap'
            }
        ]
    };
};


/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dropdown", function() { return Dropdown; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Dropdown_base__ = __webpack_require__(93);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Dropdown_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Dropdown_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Dropdown_styles__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Dropdown_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Dropdown_styles__);



var Dropdown = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__Dropdown_base__["DropdownBase"], __WEBPACK_IMPORTED_MODULE_2__Dropdown_styles__["getStyles"], undefined, {
    scope: 'Dropdown'
});


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Dropdown/Dropdown.base.js
module.exports = __webpack_require__(94);

/***/ }),
/* 94 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DropdownBase", function() { return DropdownBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Callout__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Callout___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Callout__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Checkbox__ = __webpack_require__(95);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Checkbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Checkbox__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Button__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__Button__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_DirectionalHint__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_DirectionalHint___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__common_DirectionalHint__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Dropdown_types__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Dropdown_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__Dropdown_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utilities_DropdownSizePosCache__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utilities_DropdownSizePosCache___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__utilities_DropdownSizePosCache__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__FocusZone__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__FocusZone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9__FocusZone__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__Icon__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__Icon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__Icon__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__Label__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__Label___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11__Label__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__KeytipData__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__KeytipData___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12__KeytipData__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__Panel__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__Panel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13__Panel__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__utilities_decorators_withResponsiveMode__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__utilities_decorators_withResponsiveMode___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14__utilities_decorators_withResponsiveMode__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__utilities_selectableOption_SelectableOption_types__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__utilities_selectableOption_SelectableOption_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15__utilities_selectableOption_SelectableOption_types__);
















var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["classNamesFunction"])();
var DropdownBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](DropdownBase, _super);
    function DropdownBase(props) {
        var _this = _super.call(this, props) || this;
        _this._host = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._focusZone = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._dropDown = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._scrollIdleDelay = 250 /* ms */;
        _this._sizePosCache = new __WEBPACK_IMPORTED_MODULE_8__utilities_DropdownSizePosCache__["DropdownSizePosCache"]();
        /** Render text in dropdown input */
        _this._onRenderTitle = function (item) {
            var _a = _this.props.multiSelectDelimiter, multiSelectDelimiter = _a === void 0 ? ', ' : _a;
            var displayTxt = item.map(function (i) { return i.text; }).join(multiSelectDelimiter);
            return __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", null, displayTxt);
        };
        /** Render placeholder text in dropdown input */
        _this._onRenderPlaceholder = function (props) {
            if (!_this._placeholder) {
                return null;
            }
            return __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", null, _this._placeholder);
        };
        /** Render Callout or Panel container and pass in list */
        _this._onRenderContainer = function (props) {
            var _a = _this.props, responsiveMode = _a.responsiveMode, calloutProps = _a.calloutProps, panelProps = _a.panelProps, dropdownWidth = _a.dropdownWidth;
            var isSmall = responsiveMode <= __WEBPACK_IMPORTED_MODULE_14__utilities_decorators_withResponsiveMode__["ResponsiveMode"].medium;
            var panelStyles = _this._classNames.subComponentStyles
                ? _this._classNames.subComponentStyles.panel
                : undefined;
            return isSmall ? (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_13__Panel__["Panel"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ isOpen: true, isLightDismiss: true, onDismissed: _this._onDismiss, hasCloseButton: false, styles: panelStyles }, panelProps), _this._renderFocusableList(props))) : (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Callout__["Callout"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ isBeakVisible: false, gapSpace: 0, doNotLayer: false, directionalHintFixed: false, directionalHint: __WEBPACK_IMPORTED_MODULE_6__common_DirectionalHint__["DirectionalHint"].bottomLeftEdge }, calloutProps, { className: _this._classNames.callout, target: _this._dropDown.current, onDismiss: _this._onDismiss, onScroll: _this._onScroll, onPositioned: _this._onPositioned, calloutWidth: dropdownWidth || (_this._dropDown.current ? _this._dropDown.current.clientWidth : 0) }), _this._renderFocusableList(props)));
        };
        /** Render Caret Down Icon */
        _this._onRenderCaretDown = function (props) {
            return __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_10__Icon__["Icon"], { className: _this._classNames.caretDown, iconName: "ChevronDown" });
        };
        /** Render List of items */
        _this._onRenderList = function (props) {
            var _a = _this.props.onRenderItem, onRenderItem = _a === void 0 ? _this._onRenderItem : _a;
            return __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_1_react__["Fragment"], null, _this.props.options.map(function (item, index) { return onRenderItem(__WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, item, { index: index }), _this._onRenderItem); }));
        };
        _this._onRenderItem = function (item) {
            switch (item.itemType) {
                case __WEBPACK_IMPORTED_MODULE_15__utilities_selectableOption_SelectableOption_types__["SelectableOptionMenuItemType"].Divider:
                    return _this._renderSeparator(item);
                case __WEBPACK_IMPORTED_MODULE_15__utilities_selectableOption_SelectableOption_types__["SelectableOptionMenuItemType"].Header:
                    return _this._renderHeader(item);
                default:
                    return _this._renderOption(item);
            }
        };
        _this._renderOption = function (item) {
            var _a = _this.props.onRenderOption, onRenderOption = _a === void 0 ? _this._onRenderOption : _a;
            var _b = _this.state.selectedIndices, selectedIndices = _b === void 0 ? [] : _b;
            var id = _this._id;
            var isItemSelected = item.index !== undefined && selectedIndices ? selectedIndices.indexOf(item.index) > -1 : false;
            // select the right className based on the combination of selected/disabled
            var itemClassName = isItemSelected && item.disabled === true // predicate: both selected and disabled
                ? _this._classNames.dropdownItemSelectedAndDisabled
                : isItemSelected // predicate: selected only
                    ? _this._classNames.dropdownItemSelected
                    : item.disabled === true // predicate: disabled only
                        ? _this._classNames.dropdownItemDisabled
                        : _this._classNames.dropdownItem;
            return !_this.props.multiSelect ? (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_5__Button__["CommandButton"], { id: id + '-list' + item.index, key: item.key, "data-index": item.index, "data-is-focusable": !item.disabled, disabled: item.disabled, className: itemClassName, onClick: _this._onItemClick(item), onMouseEnter: _this._onItemMouseEnter.bind(_this, item), onMouseLeave: _this._onMouseItemLeave.bind(_this, item), onMouseMove: _this._onItemMouseMove.bind(_this, item), role: "option", "aria-selected": isItemSelected ? 'true' : 'false', ariaLabel: item.ariaLabel, title: item.title ? item.title : item.text }, onRenderOption(item, _this._onRenderOption))) : (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__Checkbox__["Checkbox"], { id: id + '-list' + item.index, key: item.key, "data-index": item.index, "data-is-focusable": !item.disabled, disabled: item.disabled, onChange: _this._onItemClick(item), inputProps: {
                    onMouseEnter: _this._onItemMouseEnter.bind(_this, item),
                    onMouseLeave: _this._onMouseItemLeave.bind(_this, item),
                    onMouseMove: _this._onItemMouseMove.bind(_this, item)
                }, label: item.text, title: item.title ? item.title : item.text, onRenderLabel: _this._onRenderLabel.bind(_this, item), className: itemClassName, role: "option", "aria-selected": isItemSelected ? 'true' : 'false', checked: isItemSelected }));
        };
        /** Render content of item (i.e. text/icon inside of button) */
        _this._onRenderOption = function (item) {
            return __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: _this._classNames.dropdownOptionText }, item.text);
        };
        /** Render custom label for drop down item */
        _this._onRenderLabel = function (item) {
            var _a = _this.props.onRenderOption, onRenderOption = _a === void 0 ? _this._onRenderOption : _a;
            return onRenderOption(item, _this._onRenderOption);
        };
        _this._onPositioned = function (positions) {
            if (_this._focusZone.current) {
                // Focusing an element can trigger a reflow. Making this wait until there is an animation
                // frame can improve perf significantly.
                _this._async.requestAnimationFrame(function () {
                    var selectedIndices = _this.state.selectedIndices;
                    if (selectedIndices && selectedIndices[0] && !_this.props.options[selectedIndices[0]].disabled) {
                        var element = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getDocument"])().querySelector("#" + _this._id + "-list" + selectedIndices[0]);
                        _this._focusZone.current.focusElement(element);
                    }
                    else {
                        _this._focusZone.current.focus();
                    }
                });
            }
            if (!_this.state.calloutRenderEdge || _this.state.calloutRenderEdge !== positions.targetEdge) {
                _this.setState({
                    calloutRenderEdge: positions.targetEdge
                });
            }
        };
        _this._onItemClick = function (item) {
            return function (event) {
                if (!item.disabled) {
                    _this.setSelectedIndex(event, item.index);
                    if (!_this.props.multiSelect) {
                        // only close the callout when it's in single-select mode
                        _this.setState({
                            isOpen: false
                        });
                    }
                }
            };
        };
        /**
         * Scroll handler for the callout to make sure the mouse events
         * for updating focus are not interacting during scroll
         */
        _this._onScroll = function () {
            if (!_this._isScrollIdle && _this._scrollIdleTimeoutId !== undefined) {
                _this._async.clearTimeout(_this._scrollIdleTimeoutId);
                _this._scrollIdleTimeoutId = undefined;
            }
            else {
                _this._isScrollIdle = false;
            }
            _this._scrollIdleTimeoutId = _this._async.setTimeout(function () {
                _this._isScrollIdle = true;
            }, _this._scrollIdleDelay);
        };
        _this._onMouseItemLeave = function (item, ev) {
            if (_this._shouldIgnoreMouseEvent()) {
                return;
            }
            /**
             * IE11 focus() method forces parents to scroll to top of element.
             * Edge and IE expose a setActive() function for focusable divs that
             * sets the page focus but does not scroll the parent element.
             */
            if (_this._host.current) {
                if (_this._host.current.setActive) {
                    try {
                        _this._host.current.setActive();
                    }
                    catch (e) {
                        /* no-op */
                    }
                }
                else {
                    _this._host.current.focus();
                }
            }
        };
        _this._onDismiss = function () {
            _this.setState({ isOpen: false });
            if (_this._dropDown.current) {
                _this._dropDown.current.focus();
            }
        };
        _this._onDropdownBlur = function (ev) {
            // If Dropdown disabled do not proceed with this logic.
            var disabled = _this._isDisabled();
            if (disabled) {
                return;
            }
            // hasFocus tracks whether the root element has focus so always update the state.
            _this.setState({ hasFocus: false });
            if (_this.state.isOpen) {
                // Do not onBlur when the callout is opened
                return;
            }
            if (_this.props.onBlur) {
                _this.props.onBlur(ev);
            }
        };
        _this._onDropdownKeyDown = function (ev) {
            // If Dropdown disabled do not process any keyboard events.
            var disabled = _this._isDisabled();
            if (disabled) {
                return;
            }
            // Take note if we are processing an alt (option) or meta (command) keydown.
            // See comment in _shouldHandleKeyUp for reasoning.
            _this._lastKeyDownWasAltOrMeta = _this._isAltOrMeta(ev);
            if (_this.props.onKeyDown) {
                _this.props.onKeyDown(ev);
                if (ev.defaultPrevented) {
                    return;
                }
            }
            var newIndex;
            var selectedIndex = _this.state.selectedIndices.length ? _this.state.selectedIndices[0] : -1;
            var containsExpandCollapseModifier = ev.altKey || ev.metaKey;
            var isOpen = _this.state.isOpen;
            switch (ev.which) {
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].enter:
                    _this.setState({
                        isOpen: !isOpen
                    });
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].escape:
                    if (!isOpen) {
                        return;
                    }
                    _this.setState({
                        isOpen: false
                    });
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].up:
                    if (containsExpandCollapseModifier) {
                        if (isOpen) {
                            _this.setState({ isOpen: false });
                            break;
                        }
                        return;
                    }
                    if (_this.props.multiSelect) {
                        _this.setState({ isOpen: true });
                    }
                    else if (!_this._isDisabled()) {
                        newIndex = _this._moveIndex(ev, -1, selectedIndex - 1, selectedIndex);
                    }
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].down:
                    if (containsExpandCollapseModifier) {
                        ev.stopPropagation();
                        ev.preventDefault();
                    }
                    if ((containsExpandCollapseModifier && !isOpen) || _this.props.multiSelect) {
                        _this.setState({ isOpen: true });
                    }
                    else if (!_this._isDisabled()) {
                        newIndex = _this._moveIndex(ev, 1, selectedIndex + 1, selectedIndex);
                    }
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].home:
                    if (!_this.props.multiSelect) {
                        newIndex = _this._moveIndex(ev, 1, 0, selectedIndex);
                    }
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].end:
                    if (!_this.props.multiSelect) {
                        newIndex = _this._moveIndex(ev, -1, _this.props.options.length - 1, selectedIndex);
                    }
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].space:
                    // event handled in _onDropdownKeyUp
                    break;
                default:
                    return;
            }
            if (newIndex !== selectedIndex) {
                ev.stopPropagation();
                ev.preventDefault();
            }
        };
        _this._onDropdownKeyUp = function (ev) {
            // If Dropdown disabled do not process any keyboard events.
            var disabled = _this._isDisabled();
            if (disabled) {
                return;
            }
            var shouldHandleKey = _this._shouldHandleKeyUp(ev);
            var isOpen = _this.state.isOpen;
            if (_this.props.onKeyUp) {
                _this.props.onKeyUp(ev);
                if (ev.preventDefault) {
                    return;
                }
            }
            switch (ev.which) {
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].space:
                    _this.setState({
                        isOpen: !isOpen
                    });
                    break;
                default:
                    if (shouldHandleKey && isOpen) {
                        _this.setState({ isOpen: false });
                    }
                    return;
            }
            ev.stopPropagation();
            ev.preventDefault();
        };
        _this._onZoneKeyDown = function (ev) {
            var elementToFocus;
            // Take note if we are processing an alt (option) or meta (command) keydown.
            // See comment in _shouldHandleKeyUp for reasoning.
            _this._lastKeyDownWasAltOrMeta = _this._isAltOrMeta(ev);
            var containsExpandCollapseModifier = ev.altKey || ev.metaKey;
            switch (ev.which) {
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].up:
                    if (containsExpandCollapseModifier) {
                        _this.setState({ isOpen: false });
                    }
                    else {
                        if (_this._host.current) {
                            elementToFocus = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getLastFocusable"])(_this._host.current, _this._host.current.lastChild, true);
                        }
                    }
                    break;
                // All directional keystrokes should be canceled when the zone is rendered.
                // This avoids the body scroll from reacting and thus dismissing the dropdown.
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].home:
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].end:
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].pageUp:
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].pageDown:
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].down:
                    if (!containsExpandCollapseModifier && _this._host.current) {
                        elementToFocus = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getFirstFocusable"])(_this._host.current, _this._host.current.firstChild, true);
                    }
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].escape:
                    _this.setState({ isOpen: false });
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].tab:
                    _this.setState({ isOpen: false });
                    return;
                default:
                    return;
            }
            if (elementToFocus) {
                elementToFocus.focus();
            }
            ev.stopPropagation();
            ev.preventDefault();
        };
        _this._onZoneKeyUp = function (ev) {
            var shouldHandleKey = _this._shouldHandleKeyUp(ev);
            if (shouldHandleKey && _this.state.isOpen) {
                _this.setState({ isOpen: false });
                ev.preventDefault();
            }
        };
        _this._onDropdownClick = function (ev) {
            if (_this.props.onClick) {
                _this.props.onClick(ev);
                if (ev.preventDefault) {
                    return;
                }
            }
            var isOpen = _this.state.isOpen;
            var disabled = _this._isDisabled();
            if (!disabled) {
                _this.setState({
                    isOpen: !isOpen
                });
            }
        };
        _this._onFocus = function (ev) {
            var _a = _this.state, isOpen = _a.isOpen, selectedIndices = _a.selectedIndices;
            var multiSelect = _this.props.multiSelect;
            var disabled = _this._isDisabled();
            if (!disabled) {
                if (!isOpen && selectedIndices.length === 0 && !multiSelect) {
                    // Per aria
                    _this._moveIndex(ev, 1, 0, -1);
                }
                if (_this.props.onFocus) {
                    _this.props.onFocus(ev);
                }
                _this.setState({ hasFocus: true });
            }
        };
        /**
         * Because the isDisabled prop is deprecated, we have had to repeat this logic all over the place.
         * This helper method avoids all the repetition.
         */
        _this._isDisabled = function () {
            var disabled = _this.props.disabled;
            var isDisabled = _this.props.isDisabled;
            // Remove this deprecation workaround at 1.0.0
            if (isDisabled !== undefined) {
                disabled = isDisabled;
            }
            return disabled;
        };
        _this._warnDeprecations({
            isDisabled: 'disabled',
            onChanged: 'onChange',
            placeHolder: 'placeholder'
        });
        _this._warnMutuallyExclusive({
            defaultSelectedKey: 'selectedKey',
            defaultSelectedKeys: 'selectedKeys',
            selectedKeys: 'selectedKey',
            multiSelect: 'defaultSelectedKey',
            selectedKey: 'multiSelect'
        });
        _this._id = props.id || Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getId"])('Dropdown');
        _this._isScrollIdle = true;
        var selectedIndices;
        if (_this.props.multiSelect) {
            var selectedKeys = props.defaultSelectedKeys !== undefined ? props.defaultSelectedKeys : props.selectedKeys;
            selectedIndices = _this._getSelectedIndexes(props.options, selectedKeys);
        }
        else {
            var selectedKey = props.defaultSelectedKey !== undefined ? props.defaultSelectedKey : props.selectedKey;
            selectedIndices = _this._getSelectedIndexes(props.options, selectedKey);
            _this._sizePosCache.updateOptions(props.options);
        }
        _this.state = {
            isOpen: false,
            selectedIndices: selectedIndices,
            hasFocus: false,
            calloutRenderEdge: undefined
        };
        return _this;
    }
    DropdownBase.prototype.componentWillReceiveProps = function (newProps) {
        // In controlled component usage where selectedKey is provided, update the selectedIndex
        // state if the key or options change.
        var selectedKeyProp;
        // this does a shallow compare (assumes options are pure), for the purposes of determining whether
        // defaultSelectedKey/defaultSelectedKeys are respected.
        var didOptionsChange = newProps.options !== this.props.options;
        if (newProps.multiSelect) {
            if (didOptionsChange && newProps.defaultSelectedKeys !== undefined) {
                selectedKeyProp = 'defaultSelectedKeys';
            }
            else {
                selectedKeyProp = 'selectedKeys';
            }
        }
        else {
            if (didOptionsChange && newProps.defaultSelectedKey !== undefined) {
                selectedKeyProp = 'defaultSelectedKey';
            }
            else {
                selectedKeyProp = 'selectedKey';
            }
        }
        if (newProps[selectedKeyProp] !== undefined && (newProps[selectedKeyProp] !== this.props[selectedKeyProp] || didOptionsChange)) {
            this.setState({
                selectedIndices: this._getSelectedIndexes(newProps.options, newProps[selectedKeyProp])
            });
        }
        if (newProps.options !== this.props.options && // preexisting code assumes purity of the options...
            !newProps.multiSelect // only relevant in single selection
        ) {
            this._sizePosCache.updateOptions(newProps.options);
        }
    };
    DropdownBase.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (prevState.isOpen === true && this.state.isOpen === false) {
            this._gotMouseMove = false;
            if (this._dropDown.current) {
                this._dropDown.current.focus();
            }
            if (this.props.onDismiss) {
                this.props.onDismiss();
            }
        }
    };
    DropdownBase.prototype.render = function () {
        var _this = this;
        var id = this._id;
        var _a = this.props, className = _a.className, label = _a.label, options = _a.options, ariaLabel = _a.ariaLabel, required = _a.required, errorMessage = _a.errorMessage, multiSelect = _a.multiSelect, keytipProps = _a.keytipProps, propStyles = _a.styles, theme = _a.theme, panelProps = _a.panelProps, calloutProps = _a.calloutProps, _b = _a.onRenderTitle, onRenderTitle = _b === void 0 ? this._onRenderTitle : _b, _c = _a.onRenderContainer, onRenderContainer = _c === void 0 ? this._onRenderContainer : _c, _d = _a.onRenderPlaceHolder, onRenderPlaceHolder = _d === void 0 ? this._onRenderPlaceholder : _d, _e = _a.onRenderCaretDown, onRenderCaretDown = _e === void 0 ? this._onRenderCaretDown : _e;
        var _f = this.state, isOpen = _f.isOpen, selectedIndices = _f.selectedIndices, hasFocus = _f.hasFocus, calloutRenderEdge = _f.calloutRenderEdge;
        var selectedOptions = this._getAllSelectedOptions(options, selectedIndices);
        var divProps = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(this.props, __WEBPACK_IMPORTED_MODULE_2__Utilities__["divProperties"]);
        var disabled = this._isDisabled();
        var optionId = id + '-option';
        var ariaAttrs = multiSelect || disabled
            ? {
                role: undefined,
                ariaActiveDescendant: undefined,
                childRole: undefined,
                ariaSetSize: undefined,
                ariaPosInSet: undefined,
                ariaSelected: undefined
            }
            : // single select
                {
                    role: 'listbox',
                    ariaActiveDescendant: isOpen && selectedIndices.length === 1 && selectedIndices[0] >= 0 ? this._id + '-list' + selectedIndices[0] : optionId,
                    childRole: 'option',
                    ariaSetSize: this._sizePosCache.optionSetSize,
                    ariaPosInSet: this._sizePosCache.positionInSet(selectedIndices[0]),
                    ariaSelected: selectedIndices[0] === undefined ? undefined : true
                };
        this._classNames = getClassNames(propStyles, {
            theme: theme,
            className: className,
            hasError: Boolean(errorMessage && errorMessage.length > 0),
            isOpen: isOpen,
            required: required,
            disabled: disabled,
            isRenderingPlaceholder: !selectedOptions.length,
            panelClassName: !!panelProps ? panelProps.className : undefined,
            calloutClassName: !!calloutProps ? calloutProps.className : undefined,
            calloutRenderEdge: calloutRenderEdge
        });
        var labelStyles = this._classNames.subComponentStyles
            ? this._classNames.subComponentStyles.label
            : undefined;
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: this._classNames.root },
            label && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_11__Label__["Label"], { className: this._classNames.label, id: id + '-label', htmlFor: id, required: required, styles: labelStyles }, label)),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_12__KeytipData__["KeytipData"], { keytipProps: keytipProps, disabled: disabled }, function (keytipAttributes) { return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, keytipAttributes, { "data-is-focusable": !disabled, ref: _this._dropDown, id: id, tabIndex: disabled ? -1 : 0, "aria-expanded": isOpen ? 'true' : 'false', role: ariaAttrs.role, "aria-label": ariaLabel, "aria-labelledby": label && !ariaLabel ? id + '-label' : undefined, "aria-describedby": Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["mergeAriaAttributeValues"])(optionId, keytipAttributes['aria-describedby']), "aria-activedescendant": isOpen ? ariaAttrs.ariaActiveDescendant : undefined, "aria-required": required, "aria-disabled": disabled, "aria-owns": isOpen ? id + '-list' : undefined }, divProps, { className: _this._classNames.dropdown, onBlur: _this._onDropdownBlur, onKeyDown: _this._onDropdownKeyDown, onKeyUp: _this._onDropdownKeyUp, onClick: _this._onDropdownClick, onFocus: _this._onFocus }),
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { id: optionId, className: _this._classNames.title, "aria-atomic": true, role: ariaAttrs.childRole, "aria-live": !hasFocus || disabled || multiSelect || isOpen ? 'off' : 'assertive', "aria-label": selectedOptions.length ? selectedOptions[0].text : _this._placeholder, "aria-setsize": ariaAttrs.ariaSetSize, "aria-posinset": ariaAttrs.ariaPosInSet, "aria-selected": ariaAttrs.ariaSelected }, // If option is selected render title, otherwise render the placeholder text
                selectedOptions.length
                    ? onRenderTitle(selectedOptions, _this._onRenderTitle)
                    : onRenderPlaceHolder(_this.props, _this._onRenderPlaceholder)),
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: _this._classNames.caretDownWrapper }, onRenderCaretDown(_this.props, _this._onRenderCaretDown)))); }),
            isOpen && onRenderContainer(this.props, this._onRenderContainer),
            errorMessage && errorMessage.length > 0 && __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: this._classNames.errorMessage }, errorMessage)));
    };
    DropdownBase.prototype.focus = function (shouldOpenOnFocus) {
        if (this._dropDown.current && this._dropDown.current.tabIndex !== -1) {
            this._dropDown.current.focus();
            if (shouldOpenOnFocus) {
                this.setState({
                    isOpen: true
                });
            }
        }
    };
    DropdownBase.prototype.setSelectedIndex = function (event, index) {
        var _a = this.props, onChange = _a.onChange, onChanged = _a.onChanged, options = _a.options, selectedKey = _a.selectedKey, selectedKeys = _a.selectedKeys, multiSelect = _a.multiSelect, notifyOnReselect = _a.notifyOnReselect;
        var _b = this.state.selectedIndices, selectedIndices = _b === void 0 ? [] : _b;
        var checked = selectedIndices ? selectedIndices.indexOf(index) > -1 : false;
        index = Math.max(0, Math.min(options.length - 1, index));
        if (!multiSelect && !notifyOnReselect && index === selectedIndices[0]) {
            return;
        }
        else if (!multiSelect && selectedKey === undefined) {
            // Set the selected option if this is an uncontrolled component
            this.setState({
                selectedIndices: [index]
            });
        }
        else if (multiSelect && selectedKeys === undefined) {
            var newIndexes = selectedIndices ? this._copyArray(selectedIndices) : [];
            if (checked) {
                var position = newIndexes.indexOf(index);
                if (position > -1) {
                    // unchecked the current one
                    newIndexes.splice(position, 1);
                }
            }
            else {
                // add the new selected index into the existing one
                newIndexes.push(index);
            }
            this.setState({
                selectedIndices: newIndexes
            });
        }
        if (onChange) {
            // for single-select, option passed in will always be selected.
            // for multi-select, flip the checked value
            var changedOpt = multiSelect ? __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, options[index], { selected: !checked }) : options[index];
            onChange(event, changedOpt, index);
        }
        if (onChanged) {
            // for single-select, option passed in will always be selected.
            // for multi-select, flip the checked value
            var changedOpt = multiSelect ? __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, options[index], { selected: !checked }) : options[index];
            onChanged(changedOpt, index);
        }
    };
    Object.defineProperty(DropdownBase.prototype, "_placeholder", {
        /** Get either props.placeholder (new name) or props.placeHolder (old name) */
        get: function () {
            return this.props.placeholder || this.props.placeHolder;
        },
        enumerable: true,
        configurable: true
    });
    DropdownBase.prototype._copyArray = function (array) {
        var newArray = [];
        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {
            var element = array_1[_i];
            newArray.push(element);
        }
        return newArray;
    };
    /**
     * Finds the next valid Dropdown option and sets the selected index to it.
     * @param stepValue Value of how many items the function should traverse.  Should be -1 or 1.
     * @param index Index of where the search should start
     * @param selectedIndex The selectedIndex Dropdown's state
     * @returns The next valid dropdown option's index
     */
    DropdownBase.prototype._moveIndex = function (event, stepValue, index, selectedIndex) {
        var options = this.props.options;
        // Return selectedIndex if nothing has changed or options is empty
        if (selectedIndex === index || options.length === 0) {
            return selectedIndex;
        }
        // Set starting index to 0 if index is < 0
        if (index < 0) {
            index = 0;
        }
        // Set starting index to last option index if greater than options.length
        if (index >= options.length) {
            index = options.length - 1;
        }
        var stepCounter = 0;
        // If current index is a header or divider, or disabled, increment by step
        while (options[index].itemType === __WEBPACK_IMPORTED_MODULE_7__Dropdown_types__["DropdownMenuItemType"].Header ||
            options[index].itemType === __WEBPACK_IMPORTED_MODULE_7__Dropdown_types__["DropdownMenuItemType"].Divider ||
            options[index].disabled) {
            // If stepCounter exceeds length of options, then return selectedIndex (-1)
            if (stepCounter >= options.length) {
                return selectedIndex;
            }
            // If index + stepValue is out of bounds, wrap around
            if (index + stepValue < 0) {
                index = options.length;
            }
            else if (index + stepValue >= options.length) {
                index = -1;
            }
            index = index + stepValue;
            stepCounter++;
        }
        this.setSelectedIndex(event, index);
        return index;
    };
    /** Wrap item list in a FocusZone */
    DropdownBase.prototype._renderFocusableList = function (props) {
        var _a = props.onRenderList, onRenderList = _a === void 0 ? this._onRenderList : _a, label = props.label;
        var id = this._id;
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: this._classNames.dropdownItemsWrapper, onKeyDown: this._onZoneKeyDown, onKeyUp: this._onZoneKeyUp, ref: this._host, tabIndex: 0 },
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_9__FocusZone__["FocusZone"], { ref: this._focusZone, direction: __WEBPACK_IMPORTED_MODULE_9__FocusZone__["FocusZoneDirection"].vertical, id: id + '-list', className: this._classNames.dropdownItems, "aria-labelledby": label ? id + '-label' : undefined, role: "listbox" }, onRenderList(props, this._onRenderList))));
    };
    DropdownBase.prototype._renderSeparator = function (item) {
        var index = item.index, key = item.key;
        if (index > 0) {
            return __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { role: "separator", key: key, className: this._classNames.dropdownDivider });
        }
        return null;
    };
    DropdownBase.prototype._renderHeader = function (item) {
        var _a = this.props.onRenderOption, onRenderOption = _a === void 0 ? this._onRenderOption : _a;
        var key = item.key;
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { key: key, className: this._classNames.dropdownItemHeader }, onRenderOption(item, this._onRenderOption)));
    };
    DropdownBase.prototype._onItemMouseEnter = function (item, ev) {
        if (this._shouldIgnoreMouseEvent()) {
            return;
        }
        var targetElement = ev.currentTarget;
        targetElement.focus();
    };
    DropdownBase.prototype._onItemMouseMove = function (item, ev) {
        var targetElement = ev.currentTarget;
        this._gotMouseMove = true;
        if (!this._isScrollIdle || document.activeElement === targetElement) {
            return;
        }
        targetElement.focus();
    };
    DropdownBase.prototype._shouldIgnoreMouseEvent = function () {
        return !this._isScrollIdle || !this._gotMouseMove;
    };
    /** Get all selected indexes for multi-select mode */
    DropdownBase.prototype._getSelectedIndexes = function (options, selectedKey) {
        if (selectedKey === undefined) {
            if (this.props.multiSelect) {
                return this._getAllSelectedIndices(options);
            }
            var selectedIndex = this._getSelectedIndex(options, null);
            return selectedIndex !== -1 ? [selectedIndex] : [];
        }
        else if (!Array.isArray(selectedKey)) {
            return [this._getSelectedIndex(options, selectedKey)];
        }
        var selectedIndices = [];
        for (var _i = 0, selectedKey_1 = selectedKey; _i < selectedKey_1.length; _i++) {
            var key = selectedKey_1[_i];
            selectedIndices.push(this._getSelectedIndex(options, key));
        }
        return selectedIndices;
    };
    /** Get all selected options for multi-select mode */
    DropdownBase.prototype._getAllSelectedOptions = function (options, selectedIndices) {
        var selectedOptions = [];
        for (var _i = 0, selectedIndices_1 = selectedIndices; _i < selectedIndices_1.length; _i++) {
            var index = selectedIndices_1[_i];
            var option = options[index];
            if (option) {
                selectedOptions.push(option);
            }
        }
        return selectedOptions;
    };
    DropdownBase.prototype._getAllSelectedIndices = function (options) {
        return options.map(function (option, index) { return (option.selected ? index : -1); }).filter(function (index) { return index !== -1; });
    };
    DropdownBase.prototype._getSelectedIndex = function (options, selectedKey) {
        return Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["findIndex"])(options, function (option) {
            // tslint:disable-next-line:triple-equals
            if (selectedKey != null) {
                return option.key === selectedKey;
            }
            else {
                return !!option.isSelected || !!option.selected;
            }
        });
    };
    /**
     * Returns true if the key for the event is alt (Mac option) or meta (Mac command).
     */
    DropdownBase.prototype._isAltOrMeta = function (ev) {
        return ev.which === __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].alt || ev.key === 'Meta';
    };
    /**
     * We close the menu on key up only if ALL of the following are true:
     * - Most recent key down was alt or meta (command)
     * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to
     *   expand/collapse the menu)
     * - We're not on a Mac (or iOS)
     *
     * This is because on Windows, pressing alt moves focus to the application menu bar or similar,
     * closing any open context menus. There is not a similar behavior on Macs.
     */
    DropdownBase.prototype._shouldHandleKeyUp = function (ev) {
        var keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);
        this._lastKeyDownWasAltOrMeta = false;
        return !!keyPressIsAltOrMetaAlone && !(Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["isMac"])() || Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["isIOS"])());
    };
    DropdownBase.defaultProps = {
        options: []
    };
    DropdownBase = __WEBPACK_IMPORTED_MODULE_0_tslib__["b" /* __decorate */]([
        __WEBPACK_IMPORTED_MODULE_14__utilities_decorators_withResponsiveMode__["withResponsiveMode"]
    ], DropdownBase);
    return DropdownBase;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Checkbox.js
module.exports = __webpack_require__(96);

/***/ }),
/* 96 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Checkbox_index__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Checkbox_index___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_Checkbox_index__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__components_Checkbox_index__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__components_Checkbox_index__[key]; }) }(__WEBPACK_IMPORT_KEY__));



/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_selectableOption_SelectableOption_types__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities_selectableOption_SelectableOption_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__utilities_selectableOption_SelectableOption_types__);
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_0__utilities_selectableOption_SelectableOption_types__, "SelectableOptionMenuItemType")) __webpack_require__.d(__webpack_exports__, "DropdownMenuItemType", function() { return __WEBPACK_IMPORTED_MODULE_0__utilities_selectableOption_SelectableOption_types__["SelectableOptionMenuItemType"]; });



/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectableOptionMenuItemType", function() { return SelectableOptionMenuItemType; });
var SelectableOptionMenuItemType;
(function (SelectableOptionMenuItemType) {
    SelectableOptionMenuItemType[SelectableOptionMenuItemType["Normal"] = 0] = "Normal";
    SelectableOptionMenuItemType[SelectableOptionMenuItemType["Divider"] = 1] = "Divider";
    SelectableOptionMenuItemType[SelectableOptionMenuItemType["Header"] = 2] = "Header";
})(SelectableOptionMenuItemType || (SelectableOptionMenuItemType = {}));


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Dropdown/utilities/DropdownSizePosCache.js
module.exports = __webpack_require__(100);

/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DropdownSizePosCache", function() { return DropdownSizePosCache; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Dropdown_types__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Dropdown_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Dropdown_types__);

/**
 * A utility class to cache size and position in cache.
 *
 * Dropdown options has non-selectable display types. It is therefore not cheap to determine
 * the total number of actual selectable options as well as the position an option is in the
 * list of options - O(n) cost for each lookup.
 *
 * Given that we potentially have to make this determination on every single render pass, this
 * cache should provide a little bit of relief.
 */
var DropdownSizePosCache = /** @class */ (function () {
    function DropdownSizePosCache() {
        this._size = 0;
    }
    /**
     * Invalidates the cache and recalculate the size of selectable options.
     */
    DropdownSizePosCache.prototype.updateOptions = function (options) {
        var displayOnlyOptionsCache = [];
        var size = 0;
        for (var i = 0; i < options.length; i++) {
            if (options[i].itemType === __WEBPACK_IMPORTED_MODULE_0__Dropdown_types__["DropdownMenuItemType"].Divider || options[i].itemType === __WEBPACK_IMPORTED_MODULE_0__Dropdown_types__["DropdownMenuItemType"].Header) {
                displayOnlyOptionsCache.push(i);
            }
            else {
                size++;
            }
        }
        this._size = size;
        this._displayOnlyOptionsCache = displayOnlyOptionsCache;
    };
    Object.defineProperty(DropdownSizePosCache.prototype, "optionSetSize", {
        /**
         * The size of all the selectable options.
         */
        get: function () {
            return this._size;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns the position of this option element relative to the full set of selectable option elements.
     * Note: the first selectable element is position 1 in the set.
     * @param index The raw index of the option element.
     */
    DropdownSizePosCache.prototype.positionInSet = function (index) {
        if (index === undefined) {
            return undefined;
        }
        // we could possibly memoize this too but this should be good enough, most of the time (the expectation is that
        // when you have a lot of options, the selectable options will heavily dominate over the non-selectable options.
        var offset = 0;
        while (index > this._displayOnlyOptionsCache[offset]) {
            offset++;
        }
        if (this._displayOnlyOptionsCache[offset] === index) {
            throw new Error("Unexpected: Option at index " + index + " is not a selectable element.");
        }
        return index - offset + 1;
    };
    return DropdownSizePosCache;
}());



/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/FocusZone.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Panel.js
var pkg = __webpack_require__(13);
module.exports = {}
for (var key in pkg) {
  if (pkg.hasOwnProperty(key)) {
    module.exports[key] = pkg[key];
  }
}
Object.defineProperty(module.exports, "__esModule", { value: true });

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/decorators/withResponsiveMode.js
var pkg = __webpack_require__(13);
module.exports = pkg.workaround_withResponsiveMode;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Dropdown/Dropdown.styles.js
module.exports = __webpack_require__(105);

/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Styling__);


var GlobalClassNames = {
    root: 'ms-Dropdown-container',
    label: 'ms-Dropdown-label',
    dropdown: 'ms-Dropdown',
    title: 'ms-Dropdown-title',
    caretDownWrapper: 'ms-Dropdown-caretDownWrapper',
    caretDown: 'ms-Dropdown-caretDown',
    callout: 'ms-Dropdown-callout',
    panel: 'ms-Dropdown-panel',
    dropdownItems: 'ms-Dropdown-items',
    dropdownItem: 'ms-Dropdown-item',
    dropdownDivider: 'ms-Dropdown-divider',
    dropdownOptionText: 'ms-Dropdown-optionText',
    dropdownItemHeader: 'ms-Dropdown-header',
    titleIsPlaceHolder: 'ms-Dropdown-titleIsPlaceHolder',
    titleHasError: 'ms-Dropdown-title--hasError'
};
var DROPDOWN_HEIGHT = 32;
var DROPDOWN_ITEM_HEIGHT = 32;
var highContrastAdjustMixin = {
    // highContrastAdjust mixin
    '@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: black-on-white)': {
        MsHighContrastAdjust: 'none'
    }
};
var highContrastItemAndTitleStateMixin = {
    selectors: __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]((_a = {}, _a[__WEBPACK_IMPORTED_MODULE_1__Styling__["HighContrastSelector"]] = {
        backgroundColor: 'Highlight',
        borderColor: 'Highlight',
        color: 'HighlightText',
        selectors: {
            ':hover': {
                color: 'HighlightText' // overrides the hover styling for buttons that are also selected
            }
        }
    }, _a), highContrastAdjustMixin)
};
var highContrastBorderState = {
    selectors: (_b = {},
        _b[__WEBPACK_IMPORTED_MODULE_1__Styling__["HighContrastSelector"]] = {
            borderColor: 'Highlight'
        },
        _b)
};
var getStyles = function (props) {
    var theme = props.theme, hasError = props.hasError, className = props.className, isOpen = props.isOpen, disabled = props.disabled, required = props.required, isRenderingPlaceholder = props.isRenderingPlaceholder, panelClassName = props.panelClassName, calloutClassName = props.calloutClassName;
    if (!theme) {
        throw new Error('theme is undefined or null in base Dropdown getStyles function.');
    }
    var globalClassnames = Object(__WEBPACK_IMPORTED_MODULE_1__Styling__["getGlobalClassNames"])(GlobalClassNames, theme);
    var palette = theme.palette, semanticColors = theme.semanticColors;
    var rootHoverFocusActiveSelectorNeutralDarkMixin = {
        color: palette.neutralDark
    };
    var rootHoverFocusActiveSelectorBodySubtextMixin = {
        color: semanticColors.bodySubtext
    };
    var borderColorError = {
        borderColor: semanticColors.errorText
    };
    var dropdownItemStyle = [
        globalClassnames.dropdownItem,
        {
            backgroundColor: 'transparent',
            boxSizing: 'border-box',
            cursor: 'pointer',
            display: 'block',
            padding: '4px 16px',
            width: '100%',
            minHeight: DROPDOWN_ITEM_HEIGHT,
            lineHeight: 20,
            height: 'auto',
            position: 'relative',
            border: '1px solid transparent',
            wordWrap: 'break-word',
            overflowWrap: 'break-word',
            textAlign: 'left'
        }
    ];
    var dropdownItemSelected = dropdownItemStyle.concat([
        {
            backgroundColor: palette.neutralQuaternaryAlt,
            color: palette.black
        },
        highContrastItemAndTitleStateMixin
    ]);
    var dropdownItemDisabled = dropdownItemStyle.concat([
        {
            color: semanticColors.disabledText,
            cursor: 'default'
        }
    ]);
    return {
        root: globalClassnames.root,
        label: globalClassnames.label,
        dropdown: [
            globalClassnames.dropdown,
            __WEBPACK_IMPORTED_MODULE_1__Styling__["normalize"],
            __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, theme.fonts.medium, { color: palette.neutralPrimary, position: 'relative', outline: 0, userSelect: 'none', selectors: (_a = {},
                    _a['&:hover .' + globalClassnames.title] = [
                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,
                        { borderColor: palette.neutralDark },
                        highContrastBorderState
                    ],
                    _a['&:focus .' + globalClassnames.title] = [
                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,
                        { borderColor: palette.themePrimary },
                        highContrastItemAndTitleStateMixin
                    ],
                    _a['&:active .' + globalClassnames.title] = [
                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,
                        { borderColor: palette.themeDark },
                        highContrastBorderState
                    ],
                    _a['&:hover .' + globalClassnames.caretDown] = !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,
                    _a['&:focus .' + globalClassnames.caretDown] = [
                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,
                        { selectors: __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]((_b = {}, _b[__WEBPACK_IMPORTED_MODULE_1__Styling__["HighContrastSelector"]] = { color: 'HighlightText' }, _b), highContrastAdjustMixin) }
                    ],
                    _a['&:active .' + globalClassnames.caretDown] = !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,
                    _a['&:hover .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,
                    _a['&:focus .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,
                    _a['&:active .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,
                    _a['&:hover .' + globalClassnames.titleHasError] = borderColorError,
                    _a['&:active .' + globalClassnames.titleHasError] = borderColorError,
                    _a['&:focus .' + globalClassnames.titleHasError] = borderColorError,
                    _a) }),
            className,
            isOpen && 'is-open',
            disabled && 'is-disabled',
            required && 'is-required'
        ],
        title: [
            globalClassnames.title,
            __WEBPACK_IMPORTED_MODULE_1__Styling__["normalize"],
            {
                backgroundColor: semanticColors.inputBackground,
                borderWidth: 1,
                borderStyle: 'solid',
                borderColor: semanticColors.inputBorder,
                cursor: 'pointer',
                display: 'block',
                height: DROPDOWN_HEIGHT,
                lineHeight: DROPDOWN_HEIGHT - 2,
                padding: "0 " + DROPDOWN_HEIGHT + "px 0 12px",
                position: 'relative',
                overflow: 'hidden',
                whiteSpace: 'nowrap',
                textOverflow: 'ellipsis'
            },
            isRenderingPlaceholder && [globalClassnames.titleIsPlaceHolder, { color: semanticColors.inputPlaceholderText }],
            hasError && [globalClassnames.titleHasError, borderColorError],
            disabled && {
                backgroundColor: semanticColors.disabledBackground,
                border: 'none',
                color: semanticColors.disabledText,
                cursor: 'default',
                selectors: (_c = {}, _c[__WEBPACK_IMPORTED_MODULE_1__Styling__["HighContrastSelector"]] = { border: '1px solid GrayText', color: 'GrayText' }, _c)
            }
        ],
        caretDownWrapper: [
            globalClassnames.caretDownWrapper,
            {
                position: 'absolute',
                top: 1,
                right: 12,
                height: DROPDOWN_HEIGHT,
                lineHeight: DROPDOWN_HEIGHT - 2 // height minus the border
            },
            !disabled && {
                cursor: 'pointer'
            }
        ],
        caretDown: [
            globalClassnames.caretDown,
            { color: palette.neutralSecondary, fontSize: __WEBPACK_IMPORTED_MODULE_1__Styling__["FontSizes"].small, pointerEvents: 'none' },
            disabled && { color: semanticColors.disabledText, selectors: (_d = {}, _d[__WEBPACK_IMPORTED_MODULE_1__Styling__["HighContrastSelector"]] = { color: 'GrayText' }, _d) }
        ],
        errorMessage: __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ color: semanticColors.errorText }, theme.fonts.small, { paddingTop: 5 }),
        callout: [
            globalClassnames.callout,
            {
                boxShadow: '0 0 2px 0 rgba(0,0,0,0.2)',
                border: "1px solid " + palette.neutralLight
            },
            calloutClassName
        ],
        dropdownItemsWrapper: { selectors: { '&:focus': { outline: 0 } } },
        dropdownItems: [globalClassnames.dropdownItems, { display: 'block' }],
        dropdownItem: dropdownItemStyle.concat([
            {
                selectors: (_e = {},
                    _e[__WEBPACK_IMPORTED_MODULE_1__Styling__["HighContrastSelector"]] = {
                        borderColor: 'Window'
                    },
                    _e['&:hover'] = {
                        color: 'inherit'
                    },
                    _e['&:focus'] = {
                        backgroundColor: semanticColors.listItemBackgroundHovered
                    },
                    _e['&:active'] = {
                        backgroundColor: semanticColors.listHeaderBackgroundHovered,
                        color: palette.black
                    },
                    _e)
            }
        ]),
        dropdownItemSelected: dropdownItemSelected,
        dropdownItemDisabled: dropdownItemDisabled,
        dropdownItemSelectedAndDisabled: [dropdownItemSelected, dropdownItemDisabled, { backgroundColor: 'transparent' }],
        dropdownDivider: [globalClassnames.dropdownDivider, { height: 1, backgroundColor: semanticColors.bodyDivider }],
        dropdownOptionText: [
            globalClassnames.dropdownOptionText,
            {
                overflow: 'hidden',
                whiteSpace: 'nowrap',
                textOverflow: 'ellipsis',
                minWidth: 0,
                maxWidth: '100%',
                wordWrap: 'break-word',
                overflowWrap: 'break-word',
                margin: '1px'
            }
        ],
        dropdownItemHeader: [
            globalClassnames.dropdownItemHeader,
            __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, theme.fonts.medium, { fontWeight: __WEBPACK_IMPORTED_MODULE_1__Styling__["FontWeights"].semibold, color: semanticColors.menuHeader, background: 'none', backgroundColor: 'transparent', border: 'none', height: DROPDOWN_ITEM_HEIGHT, lineHeight: DROPDOWN_ITEM_HEIGHT, cursor: 'default', padding: '0px 16px', userSelect: 'none', textAlign: 'left' })
        ],
        subComponentStyles: {
            label: { root: { display: 'inline-block' } },
            panel: {
                root: [panelClassName],
                main: {
                    // Force drop shadow even under medium breakpoint
                    boxShadow: '-30px 0px 30px -30px rgba(0,0,0,0.2)'
                },
                contentInner: { padding: '0 0 20px' }
            }
        }
    };
    var _a, _b, _c, _d, _e;
};
var _a, _b;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/SpinButton/SpinButton.js
module.exports = __webpack_require__(107);

/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyboardSpinDirection", function() { return KeyboardSpinDirection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpinButton", function() { return SpinButton; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Button__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Button__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Label__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Label___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Label__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Icon__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Icon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Icon__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utilities_positioning__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utilities_positioning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__utilities_positioning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__SpinButton_styles__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__SpinButton_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__SpinButton_styles__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__SpinButton_classNames__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__SpinButton_classNames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__SpinButton_classNames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__KeytipData__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__KeytipData___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9__KeytipData__);










var KeyboardSpinDirection;
(function (KeyboardSpinDirection) {
    KeyboardSpinDirection[KeyboardSpinDirection["down"] = -1] = "down";
    KeyboardSpinDirection[KeyboardSpinDirection["notSpinning"] = 0] = "notSpinning";
    KeyboardSpinDirection[KeyboardSpinDirection["up"] = 1] = "up";
})(KeyboardSpinDirection || (KeyboardSpinDirection = {}));
var SpinButton = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](SpinButton, _super);
    function SpinButton(props) {
        var _this = _super.call(this, props) || this;
        _this._input = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._initialStepDelay = 400;
        _this._stepDelay = 75;
        _this._onFocus = function (ev) {
            // We can't set focus on a non-existing element
            if (!_this._input.current) {
                return;
            }
            if (_this._spinningByMouse || _this.state.keyboardSpinDirection !== KeyboardSpinDirection.notSpinning) {
                _this._stop();
            }
            _this._input.current.select();
            _this.setState({ isFocused: true });
            if (_this.props.onFocus) {
                _this.props.onFocus(ev);
            }
        };
        _this._onBlur = function (ev) {
            _this._validate(ev);
            _this.setState({ isFocused: false });
            if (_this.props.onBlur) {
                _this.props.onBlur(ev);
            }
        };
        _this._onValidate = function (value, event) {
            if (_this.props.onValidate) {
                return _this.props.onValidate(value, event);
            }
            else {
                return _this._defaultOnValidate(value);
            }
        };
        _this._calculatePrecision = function (props) {
            var _a = props.precision, precision = _a === void 0 ? Math.max(Object(__WEBPACK_IMPORTED_MODULE_5__Utilities__["calculatePrecision"])(props.step), 0) : _a;
            return precision;
        };
        /**
         * Validate function to use if one is not passed in
         */
        _this._defaultOnValidate = function (value) {
            if (value === null || value.trim().length === 0 || isNaN(Number(value))) {
                return _this._lastValidValue;
            }
            var newValue = Math.min(_this.props.max, Math.max(_this.props.min, Number(value)));
            return String(newValue);
        };
        _this._onIncrement = function (value) {
            if (_this.props.onIncrement) {
                return _this.props.onIncrement(value);
            }
            else {
                return _this._defaultOnIncrement(value);
            }
        };
        /**
         * Increment function to use if one is not passed in
         */
        _this._defaultOnIncrement = function (value) {
            var _a = _this.props, max = _a.max, step = _a.step;
            var newValue = Math.min(Number(value) + Number(step), max);
            newValue = Object(__WEBPACK_IMPORTED_MODULE_5__Utilities__["precisionRound"])(newValue, _this._precision);
            return String(newValue);
        };
        _this._onDecrement = function (value) {
            if (_this.props.onDecrement) {
                return _this.props.onDecrement(value);
            }
            else {
                return _this._defaultOnDecrement(value);
            }
        };
        /**
         * Increment function to use if one is not passed in
         */
        _this._defaultOnDecrement = function (value) {
            var _a = _this.props, min = _a.min, step = _a.step;
            var newValue = Math.max(Number(value) - Number(step), min);
            newValue = Object(__WEBPACK_IMPORTED_MODULE_5__Utilities__["precisionRound"])(newValue, _this._precision);
            return String(newValue);
        };
        /**
         * This is used when validating text entry
         * in the input (not when changed via the buttons)
         * @param event - the event that fired
         */
        _this._validate = function (event) {
            if (_this.state.value !== undefined && _this._valueToValidate !== undefined && _this._valueToValidate !== _this._lastValidValue) {
                var newValue = _this._onValidate(_this._valueToValidate, event);
                if (newValue) {
                    _this._lastValidValue = newValue;
                    _this._valueToValidate = undefined;
                    _this.setState({ value: newValue });
                }
            }
        };
        /**
         * The method is needed to ensure we are updating the actual input value.
         * without this our value will never change (and validation will not have the correct number)
         * @param event - the event that was fired
         */
        _this._onInputChange = function (event) {
            var element = event.target;
            var value = element.value;
            _this._valueToValidate = value;
            _this.setState({
                value: value
            });
        };
        /**
         * Update the value with the given stepFunction
         * @param shouldSpin - should we fire off another updateValue when we are done here? This should be true
         * when spinning in response to a mouseDown
         * @param stepFunction - function to use to step by
         */
        _this._updateValue = function (shouldSpin, stepDelay, stepFunction) {
            var newValue = stepFunction(_this.state.value);
            if (newValue) {
                _this._lastValidValue = newValue;
                _this.setState({ value: newValue });
            }
            if (_this._spinningByMouse !== shouldSpin) {
                _this._spinningByMouse = shouldSpin;
            }
            if (shouldSpin) {
                _this._currentStepFunctionHandle = _this._async.setTimeout(function () {
                    _this._updateValue(shouldSpin, _this._stepDelay, stepFunction);
                }, stepDelay);
            }
        };
        /**
         * Stop spinning (clear any currently pending update and set spinning to false)
         */
        _this._stop = function () {
            if (_this._currentStepFunctionHandle >= 0) {
                _this._async.clearTimeout(_this._currentStepFunctionHandle);
                _this._currentStepFunctionHandle = -1;
            }
            if (_this._spinningByMouse || _this.state.keyboardSpinDirection !== KeyboardSpinDirection.notSpinning) {
                _this._spinningByMouse = false;
                _this.setState({ keyboardSpinDirection: KeyboardSpinDirection.notSpinning });
            }
        };
        /**
         * Handle keydown on the text field. We need to update
         * the value when up or down arrow are depressed
         * @param event - the keyboardEvent that was fired
         */
        _this._handleKeyDown = function (event) {
            // eat the up and down arrow keys to keep focus in the spinButton
            // (especially when a spinButton is inside of a FocusZone)
            if (event.which === __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].up || event.which === __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].down || event.which === __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].enter) {
                event.preventDefault();
                event.stopPropagation();
            }
            if (_this.props.disabled) {
                _this._stop();
                return;
            }
            var spinDirection = KeyboardSpinDirection.notSpinning;
            switch (event.which) {
                case __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].up:
                    spinDirection = KeyboardSpinDirection.up;
                    _this._updateValue(false /* shouldSpin */, _this._initialStepDelay, _this._onIncrement);
                    break;
                case __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].down:
                    spinDirection = KeyboardSpinDirection.down;
                    _this._updateValue(false /* shouldSpin */, _this._initialStepDelay, _this._onDecrement);
                    break;
                case __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].enter:
                case __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].tab:
                    _this._validate(event);
                    break;
                case __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].escape:
                    if (_this.state.value !== _this._lastValidValue) {
                        _this.setState({ value: _this._lastValidValue });
                    }
                    break;
                default:
                    break;
            }
            // style the increment/decrement button to look active
            // when the corresponding up/down arrow keys trigger a step
            if (_this.state.keyboardSpinDirection !== spinDirection) {
                _this.setState({ keyboardSpinDirection: spinDirection });
            }
        };
        /**
         * Make sure that we have stopped spinning on keyUp
         * if the up or down arrow fired this event
         * @param event stop spinning if we
         */
        _this._handleKeyUp = function (event) {
            if (_this.props.disabled || event.which === __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].up || event.which === __WEBPACK_IMPORTED_MODULE_5__Utilities__["KeyCodes"].down) {
                _this._stop();
                return;
            }
        };
        _this._onIncrementMouseDown = function () {
            _this._updateValue(true /* shouldSpin */, _this._initialStepDelay, _this._onIncrement);
        };
        _this._onDecrementMouseDown = function () {
            _this._updateValue(true /* shouldSpin */, _this._initialStepDelay, _this._onDecrement);
        };
        _this._warnMutuallyExclusive({
            value: 'defaultValue'
        });
        var value = props.value || props.defaultValue || String(props.min) || '0';
        _this._lastValidValue = value;
        // Ensure that the autocalculated precision is not negative.
        _this._precision = _this._calculatePrecision(_this.props);
        _this.state = {
            isFocused: false,
            value: value,
            keyboardSpinDirection: KeyboardSpinDirection.notSpinning
        };
        _this._currentStepFunctionHandle = -1;
        _this._labelId = Object(__WEBPACK_IMPORTED_MODULE_5__Utilities__["getId"])('Label');
        _this._inputId = Object(__WEBPACK_IMPORTED_MODULE_5__Utilities__["getId"])('input');
        _this._spinningByMouse = false;
        _this._valueToValidate = undefined;
        return _this;
    }
    /**
     * Invoked when a component is receiving new props. This method is not called for the initial render.
     */
    SpinButton.prototype.componentWillReceiveProps = function (newProps) {
        this._lastValidValue = this.state.value;
        var value = newProps.value ? newProps.value : String(newProps.min);
        if (newProps.defaultValue) {
            value = String(Math.max(newProps.min, Math.min(newProps.max, Number(newProps.defaultValue))));
        }
        if (newProps.value !== undefined) {
            this.setState({
                value: value
            });
        }
        this._precision = this._calculatePrecision(newProps);
    };
    SpinButton.prototype.render = function () {
        var _this = this;
        var _a = this.props, disabled = _a.disabled, label = _a.label, min = _a.min, max = _a.max, labelPosition = _a.labelPosition, iconProps = _a.iconProps, incrementButtonIcon = _a.incrementButtonIcon, incrementButtonAriaLabel = _a.incrementButtonAriaLabel, decrementButtonIcon = _a.decrementButtonIcon, decrementButtonAriaLabel = _a.decrementButtonAriaLabel, title = _a.title, ariaLabel = _a.ariaLabel, ariaDescribedBy = _a.ariaDescribedBy, customStyles = _a.styles, customUpArrowButtonStyles = _a.upArrowButtonStyles, customDownArrowButtonStyles = _a.downArrowButtonStyles, theme = _a.theme, ariaPositionInSet = _a.ariaPositionInSet, ariaSetSize = _a.ariaSetSize, ariaValueNow = _a.ariaValueNow, ariaValueText = _a.ariaValueText, keytipProps = _a.keytipProps, className = _a.className;
        var _b = this.state, isFocused = _b.isFocused, value = _b.value, keyboardSpinDirection = _b.keyboardSpinDirection;
        var classNames = this.props.getClassNames
            ? this.props.getClassNames(theme, !!disabled, !!isFocused, keyboardSpinDirection, labelPosition, className)
            : Object(__WEBPACK_IMPORTED_MODULE_8__SpinButton_classNames__["getClassNames"])(Object(__WEBPACK_IMPORTED_MODULE_7__SpinButton_styles__["getStyles"])(theme, customStyles), !!disabled, !!isFocused, keyboardSpinDirection, labelPosition, className);
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.root },
            labelPosition !== __WEBPACK_IMPORTED_MODULE_6__utilities_positioning__["Position"].bottom && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.labelWrapper },
                iconProps && __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__Icon__["Icon"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, iconProps, { className: classNames.icon, "aria-hidden": "true" })),
                label && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Label__["Label"], { id: this._labelId, htmlFor: this._inputId, className: classNames.label }, label)))),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_9__KeytipData__["KeytipData"], { keytipProps: keytipProps, disabled: disabled }, function (keytipAttributes) { return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.spinButtonWrapper, title: title && title, "aria-label": ariaLabel && ariaLabel, "aria-posinset": ariaPositionInSet, "aria-setsize": ariaSetSize, "data-ktp-target": keytipAttributes['data-ktp-target'] },
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("input", { value: value, id: _this._inputId, onChange: _this._onChange, onInput: _this._onInputChange, className: classNames.input, type: "text", autoComplete: "off", role: "spinbutton", "aria-labelledby": label && _this._labelId, "aria-valuenow": !isNaN(Number(ariaValueNow)) ? ariaValueNow : !isNaN(Number(value)) ? Number(value) : undefined, "aria-valuetext": ariaValueText ? ariaValueText : isNaN(Number(value)) ? value : undefined, "aria-valuemin": min, "aria-valuemax": max, "aria-describedby": Object(__WEBPACK_IMPORTED_MODULE_5__Utilities__["mergeAriaAttributeValues"])(ariaDescribedBy, ' ', keytipAttributes['aria-describedby']), onBlur: _this._onBlur, ref: _this._input, onFocus: _this._onFocus, onKeyDown: _this._handleKeyDown, onKeyUp: _this._handleKeyUp, readOnly: disabled, "aria-disabled": disabled, "data-lpignore": true, "data-ktp-execute-target": keytipAttributes['data-ktp-execute-target'] }),
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: classNames.arrowBox },
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__Button__["IconButton"], { styles: Object(__WEBPACK_IMPORTED_MODULE_7__SpinButton_styles__["getArrowButtonStyles"])(theme, true, customUpArrowButtonStyles), className: 'ms-UpButton', checked: keyboardSpinDirection === KeyboardSpinDirection.up, disabled: disabled, iconProps: incrementButtonIcon, onMouseDown: _this._onIncrementMouseDown, onMouseLeave: _this._stop, onMouseUp: _this._stop, tabIndex: -1, ariaLabel: incrementButtonAriaLabel, "data-is-focusable": false }),
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_2__Button__["IconButton"], { styles: Object(__WEBPACK_IMPORTED_MODULE_7__SpinButton_styles__["getArrowButtonStyles"])(theme, false, customDownArrowButtonStyles), className: 'ms-DownButton', checked: keyboardSpinDirection === KeyboardSpinDirection.down, disabled: disabled, iconProps: decrementButtonIcon, onMouseDown: _this._onDecrementMouseDown, onMouseLeave: _this._stop, onMouseUp: _this._stop, tabIndex: -1, ariaLabel: decrementButtonAriaLabel, "data-is-focusable": false })))); }),
            labelPosition === __WEBPACK_IMPORTED_MODULE_6__utilities_positioning__["Position"].bottom && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.labelWrapper },
                iconProps && __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_4__Icon__["Icon"], { iconName: iconProps.iconName, className: classNames.icon, "aria-hidden": "true" }),
                label && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Label__["Label"], { id: this._labelId, htmlFor: this._inputId, className: classNames.label }, label))))));
    };
    SpinButton.prototype.focus = function () {
        if (this._input.current) {
            this._input.current.focus();
        }
    };
    Object.defineProperty(SpinButton.prototype, "value", {
        /**
         * Gets the value of the spin button.
         */
        get: function () {
            return this.props.value === undefined ? this.state.value : this.props.value;
        },
        enumerable: true,
        configurable: true
    });
    SpinButton.prototype._onChange = function () {
        /**
         * A noop input change handler.
         * https://github.com/facebook/react/issues/7027.
         * Using the native onInput handler fixes the issue but onChange
         * still need to be wired to avoid React console errors
         * TODO: Check if issue is resolved when React 16 is available.
         */
    };
    SpinButton.defaultProps = {
        step: 1,
        min: 0,
        max: 100,
        disabled: false,
        labelPosition: __WEBPACK_IMPORTED_MODULE_6__utilities_positioning__["Position"].start,
        label: '',
        incrementButtonIcon: { iconName: 'ChevronUpSmall' },
        decrementButtonIcon: { iconName: 'ChevronDownSmall' }
    };
    SpinButton = __WEBPACK_IMPORTED_MODULE_0_tslib__["b" /* __decorate */]([
        Object(__WEBPACK_IMPORTED_MODULE_5__Utilities__["customizable"])('SpinButton', ['theme', 'styles'], true)
    ], SpinButton);
    return SpinButton;
}(__WEBPACK_IMPORTED_MODULE_5__Utilities__["BaseComponent"]));



/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__positioning_index__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__positioning_index___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__positioning_index__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__positioning_index__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__positioning_index__[key]; }) }(__WEBPACK_IMPORT_KEY__));



/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/positioning/index.js
module.exports = __webpack_require__(110);

/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__positioning__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__positioning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__positioning__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__positioning__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__positioning__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__positioning_types__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__positioning_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__positioning_types__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__positioning_types__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_1__positioning_types__[key]; }) }(__WEBPACK_IMPORT_KEY__));




/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/utilities/positioning/positioning.js
module.exports = __webpack_require__(112);

/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return Rectangle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__positioningTestPackage", function() { return __positioningTestPackage; });
/* harmony export (immutable) */ __webpack_exports__["positionElement"] = positionElement;
/* harmony export (immutable) */ __webpack_exports__["positionCallout"] = positionCallout;
/* harmony export (immutable) */ __webpack_exports__["getMaxHeight"] = getMaxHeight;
/* harmony export (immutable) */ __webpack_exports__["getOppositeEdge"] = getOppositeEdge;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__positioning_types__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__positioning_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__positioning_types__);




var Rectangle = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](Rectangle, _super);
    function Rectangle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Rectangle;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["Rectangle"]));

function _createPositionData(targetEdge, alignmentEdge, isAuto) {
    return {
        targetEdge: targetEdge,
        alignmentEdge: alignmentEdge,
        isAuto: isAuto
    };
}
// Currently the beakPercent is set to 50 for all positions meaning that it should tend to the center of the target
var DirectionalDictionary = (_a = {},
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].topLeftEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].left),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].topCenter] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].topRightEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].right),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].topAutoEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top, undefined, true),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].bottomLeftEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].left),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].bottomCenter] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].bottomRightEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].right),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].bottomAutoEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom, undefined, true),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].leftTopEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].left, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].leftCenter] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].left),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].leftBottomEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].left, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].rightTopEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].right, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].rightCenter] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].right),
    _a[__WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].rightBottomEdge] = _createPositionData(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].right, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom),
    _a);
function _isRectangleWithinBounds(rect, boundingRect) {
    if (rect.top < boundingRect.top) {
        return false;
    }
    if (rect.bottom > boundingRect.bottom) {
        return false;
    }
    if (rect.left < boundingRect.left) {
        return false;
    }
    if (rect.right > boundingRect.right) {
        return false;
    }
    return true;
}
/**
 * Gets all of the edges of a rectangle that are outside of the given bounds.
 * If there are no out of bounds edges it returns an empty array.
 */
function _getOutOfBoundsEdges(rect, boundingRect) {
    var outOfBounds = new Array();
    if (rect.top < boundingRect.top) {
        outOfBounds.push(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top);
    }
    if (rect.bottom > boundingRect.bottom) {
        outOfBounds.push(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom);
    }
    if (rect.left < boundingRect.left) {
        outOfBounds.push(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].left);
    }
    if (rect.right > boundingRect.right) {
        outOfBounds.push(__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].right);
    }
    return outOfBounds;
}
function _getEdgeValue(rect, edge) {
    return rect[__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"][edge]];
}
function _setEdgeValue(rect, edge, value) {
    rect[__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"][edge]] = value;
    return rect;
}
/**
 * Returns the middle value of an edge. Only returns 1 value rather than xy coordinates as
 * the itself already contains the other coordinate.
 * For instance, a bottom edge's current value is it's y coordinate, so the number returned is the x.
 *
 * @param {Rectangle} rect
 * @param {RectangleEdge} edge
 * @returns {number}
 */
function _getCenterValue(rect, edge) {
    var edges = _getFlankingEdges(edge);
    return (_getEdgeValue(rect, edges.positiveEdge) + _getEdgeValue(rect, edges.negativeEdge)) / 2;
}
/**
 * Flips the value depending on the edge.
 * If the edge is a "positive" edge, Top or Left, then the value should stay as it is.
 * If the edge is a "negative" edge, Bottom or Right, then the value should be flipped.
 * This is to account for the fact that the coordinates are effectively reveserved in certain cases for the "negative" edges.
 * For example, when testing to see if a bottom edge 1 is within the bounds of another bottom edge 2.
 * If edge 1 is greater than edge 2 then it is out of bounds. This is reversed for top edge 1 and top edge 2.
 * If top edge 1 is less than edge 2 then it is out of bounds.
 *
 *
 * @param {RectangleEdge} edge
 * @param {number} value
 * @returns {number}
 */
function _getRelativeEdgeValue(edge, value) {
    if (edge > 0) {
        return value;
    }
    else {
        return value * -1;
    }
}
function _getRelativeRectEdgeValue(edge, rect) {
    return _getRelativeEdgeValue(edge, _getEdgeValue(rect, edge));
}
function _getRelativeEdgeDifference(rect, hostRect, edge) {
    var edgeDifference = _getEdgeValue(rect, edge) - _getEdgeValue(hostRect, edge);
    return _getRelativeEdgeValue(edge, edgeDifference);
}
/**
 * Moves the edge of a rectangle to the value given. It only moves the edge in a linear direction based on that edge.
 * For example, if it's a bottom edge it will only change y coordinates.
 *
 * @param {Rectangle} rect
 * @param {RectangleEdge} edge
 * @param {number} newValue
 * @returns {Rectangle}
 */
function _moveEdge(rect, edge, newValue) {
    var difference = _getEdgeValue(rect, edge) - newValue;
    rect = _setEdgeValue(rect, edge, newValue);
    rect = _setEdgeValue(rect, edge * -1, _getEdgeValue(rect, edge * -1) - difference);
    return rect;
}
/**
 * Aligns the edge on the passed in rect to the target. If there is a gap then it will have that space between the two.
 *
 * @param {Rectangle} rect
 * @param {Rectangle} target
 * @param {RectangleEdge} edge
 * @param {number} [gap=0]
 * @returns {Rectangle}
 */
function _alignEdges(rect, target, edge, gap) {
    if (gap === void 0) { gap = 0; }
    return _moveEdge(rect, edge, _getEdgeValue(target, edge) + _getRelativeEdgeValue(edge, gap));
}
/**
 * Aligns the targetEdge on the passed in target to the rects corresponding opposite edge.
 * For instance if targetEdge is bottom, then the rects top will be moved to match it.
 *
 * @param {Rectangle} rect
 * @param {Rectangle} target
 * @param {RectangleEdge} targetEdge
 * @param {number} [gap=0]
 * @returns {Rectangle}
 */
function _alignOppositeEdges(rect, target, targetEdge, gap) {
    if (gap === void 0) { gap = 0; }
    var oppositeEdge = targetEdge * -1;
    var adjustedGap = _getRelativeEdgeValue(oppositeEdge, gap);
    return _moveEdge(rect, targetEdge * -1, _getEdgeValue(target, targetEdge) + adjustedGap);
}
/**
 * Tests to see if the given edge is within the bounds of the given rectangle.
 *
 * @param {Rectangle} rect
 * @param {Rectangle} bounds
 * @param {RectangleEdge} edge
 * @returns {boolean}
 */
function _isEdgeInBounds(rect, bounds, edge) {
    var adjustedRectValue = _getRelativeRectEdgeValue(edge, rect);
    return adjustedRectValue > _getRelativeRectEdgeValue(edge, bounds);
}
/**
 * Attempts to move the rectangle through various sides of the target to find a place to fit.
 * If no fit is found, the original position should be returned.
 *
 * @param {Rectangle} rect
 * @param {Rectangle} target
 * @param {Rectangle} bounding
 * @param {IPositionDirectionalHintData} positionData
 * @param {number} [gap=0]
 * @returns {IElementPosition}
 */
function _flipToFit(rect, target, bounding, positionData, gap) {
    if (gap === void 0) { gap = 0; }
    var directions = [__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].left, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].right, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom, __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top];
    var currentEstimate = rect;
    var currentEdge = positionData.targetEdge;
    var currentAlignment = positionData.alignmentEdge;
    // Keep switching sides until one is found with enough space. If all sides don't fit then return the unmodified element.
    for (var i = 0; i < 4; i++) {
        if (!_isEdgeInBounds(currentEstimate, bounding, currentEdge)) {
            directions.splice(directions.indexOf(currentEdge), 1);
            if (directions.indexOf(currentEdge * -1) > -1) {
                currentEdge = currentEdge * -1;
            }
            else {
                currentAlignment = currentEdge;
                currentEdge = directions.slice(-1)[0];
            }
            currentEstimate = _estimatePosition(rect, target, { targetEdge: currentEdge, alignmentEdge: currentAlignment }, gap);
        }
        else {
            return {
                elementRectangle: currentEstimate,
                targetEdge: currentEdge,
                alignmentEdge: currentAlignment
            };
        }
    }
    return {
        elementRectangle: rect,
        targetEdge: positionData.targetEdge,
        alignmentEdge: currentAlignment
    };
}
/**
 * Flips only the alignment edge of an element rectangle. This is used instead of nudging the alignment edges into position,
 * when alignTargetEdge is specified.
 * @param elementEstimate
 * @param target
 * @param bounding
 * @param gap
 */
function _flipAlignmentEdge(elementEstimate, target, gap, coverTarget) {
    var alignmentEdge = elementEstimate.alignmentEdge, targetEdge = elementEstimate.targetEdge, elementRectangle = elementEstimate.elementRectangle;
    var oppositeEdge = alignmentEdge * -1;
    var newEstimate = _estimatePosition(elementRectangle, target, { targetEdge: targetEdge, alignmentEdge: oppositeEdge }, gap, coverTarget);
    return {
        elementRectangle: newEstimate,
        targetEdge: targetEdge,
        alignmentEdge: oppositeEdge
    };
}
/**
 * Adjusts a element rectangle to fit within the bounds given. If directionalHintFixed or covertarget is passed in
 * then the element will not flip sides on the target. They will, however, be nudged to fit within the bounds given.
 *
 * @param {Rectangle} element
 * @param {Rectangle} target
 * @param {Rectangle} bounding
 * @param {IPositionDirectionalHintData} positionData
 * @param {number} [gap=0]
 * @param {boolean} [directionalHintFixed]
 * @param {boolean} [coverTarget]
 * @returns {IElementPosition}
 */
function _adjustFitWithinBounds(element, target, bounding, positionData, gap, directionalHintFixed, coverTarget) {
    if (gap === void 0) { gap = 0; }
    var alignmentEdge = positionData.alignmentEdge, alignTargetEdge = positionData.alignTargetEdge;
    var elementEstimate = {
        elementRectangle: element,
        targetEdge: positionData.targetEdge,
        alignmentEdge: alignmentEdge
    };
    if (!directionalHintFixed && !coverTarget) {
        elementEstimate = _flipToFit(element, target, bounding, positionData, gap);
    }
    var outOfBounds = _getOutOfBoundsEdges(element, bounding);
    if (alignTargetEdge) {
        // The edge opposite to the alignment edge might be out of bounds. Flip alignment to see if we can get it within bounds.
        if (elementEstimate.alignmentEdge && outOfBounds.indexOf(elementEstimate.alignmentEdge * -1) > -1) {
            var flippedElementEstimate = _flipAlignmentEdge(elementEstimate, target, gap, coverTarget);
            if (_isRectangleWithinBounds(flippedElementEstimate.elementRectangle, bounding)) {
                return flippedElementEstimate;
            }
        }
    }
    else {
        for (var _i = 0, outOfBounds_1 = outOfBounds; _i < outOfBounds_1.length; _i++) {
            var direction = outOfBounds_1[_i];
            elementEstimate.elementRectangle = _alignEdges(elementEstimate.elementRectangle, bounding, direction);
        }
    }
    return elementEstimate;
}
/**
 * Moves the middle point on an edge to the point given.
 * Only moves in one direction. For instance if a bottom edge is passed in, then
 * the bottom edge will be moved in the x axis to match the point.
 *
 * @param {Rectangle} rect
 * @param {RectangleEdge} edge
 * @param {number} point
 * @returns {Rectangle}
 */
function _centerEdgeToPoint(rect, edge, point) {
    var positiveEdge = _getFlankingEdges(edge).positiveEdge;
    var elementMiddle = _getCenterValue(rect, edge);
    var distanceToMiddle = elementMiddle - _getEdgeValue(rect, positiveEdge);
    return _moveEdge(rect, positiveEdge, point - distanceToMiddle);
}
/**
 * Moves the element rectangle to be appropriately positioned relative to a given target.
 * Does not flip or adjust the element.
 *
 * @param {Rectangle} elementToPosition
 * @param {Rectangle} target
 * @param {IPositionDirectionalHintData} positionData
 * @param {number} [gap=0]
 * @param {boolean} [coverTarget]
 * @returns {Rectangle}
 */
function _estimatePosition(elementToPosition, target, positionData, gap, coverTarget) {
    if (gap === void 0) { gap = 0; }
    var estimatedElementPosition;
    var alignmentEdge = positionData.alignmentEdge, targetEdge = positionData.targetEdge;
    var elementEdge = coverTarget ? targetEdge : targetEdge * -1;
    estimatedElementPosition = coverTarget
        ? _alignEdges(elementToPosition, target, targetEdge, gap)
        : _alignOppositeEdges(elementToPosition, target, targetEdge, gap);
    // if no alignment edge is provided it's supposed to be centered.
    if (!alignmentEdge) {
        var targetMiddlePoint = _getCenterValue(target, targetEdge);
        estimatedElementPosition = _centerEdgeToPoint(estimatedElementPosition, elementEdge, targetMiddlePoint);
    }
    else {
        estimatedElementPosition = _alignEdges(estimatedElementPosition, target, alignmentEdge);
    }
    return estimatedElementPosition;
}
/**
 * Returns the non-opposite edges of the target edge.
 * For instance if bottom is passed in then left and right will be returned.
 *
 * @param {RectangleEdge} edge
 * @returns {{ firstEdge: RectangleEdge, secondEdge: RectangleEdge }}
 */
function _getFlankingEdges(edge) {
    if (edge === __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top || edge === __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom) {
        return {
            positiveEdge: __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].left,
            negativeEdge: __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].right
        };
    }
    else {
        return {
            positiveEdge: __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top,
            negativeEdge: __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom
        };
    }
}
/**
 * Finalizes the element positon based on the hostElement. Only returns the
 * rectangle values to position such that they are anchored to the target.
 * This helps prevent resizing from looking very strange.
 * For instance, if the target edge is top and aligned with the left side then
 * the bottom and left values are returned so as the callou shrinks it shrinks towards that corner.
 *
 * @param {Rectangle} elementRectangle
 * @param {HTMLElement} hostElement
 * @param {RectangleEdge} targetEdge
 * @param {RectangleEdge} bounds
 * @param {RectangleEdge} [alignmentEdge]
 * @param {boolean} coverTarget
 * @returns {IPartialIRectangle}
 */
function _finalizeElementPosition(elementRectangle, hostElement, targetEdge, bounds, alignmentEdge, coverTarget) {
    var returnValue = {};
    var hostRect = _getRectangleFromElement(hostElement);
    var elementEdge = coverTarget ? targetEdge : targetEdge * -1;
    var elementEdgeString = __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"][elementEdge];
    var returnEdge = alignmentEdge ? alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge;
    // if the element is closer to one side of the bounds than the other, flip the return edge to ensure it grows inwards
    if (bounds &&
        Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge)) >
            Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge * -1))) {
        returnEdge = returnEdge * -1;
    }
    returnValue[elementEdgeString] = _getRelativeEdgeDifference(elementRectangle, hostRect, elementEdge);
    returnValue[__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"][returnEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, returnEdge);
    return returnValue;
}
// Since the beak is rotated 45 degrees the actual height/width is the length of the diagonal.
// We still want to position the beak based on it's midpoint which does not change. It will
// be at (beakwidth / 2, beakwidth / 2)
function _calculateActualBeakWidthInPixels(beakWidth) {
    return Math.sqrt(beakWidth * beakWidth * 2);
}
/**
 * Returns the appropriate IPositionData based on the props altered for RTL.
 * If directionalHintForRTL is passed in that is used if the page is RTL.
 * If a directionalHint is specified and no directionalHintForRTL is available and the page is RTL the hint will be flipped.
 * For instance bottomLeftEdge would become bottomRightEdge.
 * If there is no directionalHint passed in bottomAutoEdge is chosen automatically.
 *
 * @param {IPositionProps} props
 * @returns {IPositionDirectionalHintData}
 */
function _getPositionData(directionalHint, directionalHintForRTL, previousPositions) {
    if (directionalHint === void 0) { directionalHint = __WEBPACK_IMPORTED_MODULE_1__common_DirectionalHint__["DirectionalHint"].bottomAutoEdge; }
    if (previousPositions) {
        return {
            alignmentEdge: previousPositions.alignmentEdge,
            isAuto: previousPositions.isAuto,
            targetEdge: previousPositions.targetEdge
        };
    }
    var positionInformation = __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, DirectionalDictionary[directionalHint]);
    if (Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getRTL"])()) {
        // If alignment edge exists and that alignment edge is -2 or 2, right or left, then flip it.
        if (positionInformation.alignmentEdge && positionInformation.alignmentEdge % 2 === 0) {
            positionInformation.alignmentEdge = positionInformation.alignmentEdge * -1;
        }
        return directionalHintForRTL !== undefined ? DirectionalDictionary[directionalHintForRTL] : positionInformation;
    }
    return positionInformation;
}
/**
 * Get's the alignment data for the given information. This only really matters if the positioning is Auto.
 * If it is auto then the alignmentEdge should be chosen based on the target edge's position relative to
 * the center of the page.
 *
 * @param {IPositionDirectionalHintData} positionData
 * @param {Rectangle} target
 * @param {Rectangle} boundingRect
 * @param {boolean} [coverTarget]
 * @returns {IPositionDirectionalHintData}
 */
function _getAlignmentData(positionData, target, boundingRect, coverTarget, alignTargetEdge) {
    if (positionData.isAuto) {
        positionData.alignmentEdge = getClosestEdge(positionData.targetEdge, target, boundingRect);
    }
    positionData.alignTargetEdge = alignTargetEdge;
    return positionData;
}
function getClosestEdge(targetEdge, target, boundingRect) {
    var targetCenter = _getCenterValue(target, targetEdge);
    var boundingCenter = _getCenterValue(boundingRect, targetEdge);
    var _a = _getFlankingEdges(targetEdge), positiveEdge = _a.positiveEdge, negativeEdge = _a.negativeEdge;
    if (targetCenter <= boundingCenter) {
        return positiveEdge;
    }
    else {
        return negativeEdge;
    }
}
function _positionElementWithinBounds(elementToPosition, target, bounding, positionData, gap, directionalHintFixed, coverTarget) {
    var estimatedElementPosition = _estimatePosition(elementToPosition, target, positionData, gap, coverTarget);
    if (_isRectangleWithinBounds(estimatedElementPosition, bounding)) {
        return {
            elementRectangle: estimatedElementPosition,
            targetEdge: positionData.targetEdge,
            alignmentEdge: positionData.alignmentEdge
        };
    }
    else {
        return _adjustFitWithinBounds(elementToPosition, target, bounding, positionData, gap, directionalHintFixed, coverTarget);
    }
}
function _finalizeBeakPosition(elementPosition, positionedBeak) {
    var targetEdge = elementPosition.targetEdge * -1;
    // The "host" element that we will use to help position the beak.
    var actualElement = new Rectangle(0, elementPosition.elementRectangle.width, 0, elementPosition.elementRectangle.height);
    var returnEdge = elementPosition.alignmentEdge ? elementPosition.alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge;
    var returnValue = {};
    returnValue[__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"][targetEdge]] = _getEdgeValue(positionedBeak, targetEdge);
    returnValue[__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"][returnEdge]] = _getRelativeEdgeDifference(positionedBeak, actualElement, returnEdge);
    return {
        elementPosition: __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, returnValue),
        closestEdge: getClosestEdge(elementPosition.targetEdge, positionedBeak, actualElement),
        targetEdge: targetEdge
    };
}
function _positionBeak(beakWidth, elementPosition) {
    var target = elementPosition.targetRectangle;
    /**
     * Note about beak positioning: The actual beak width only matters for getting the gap between the callout and
     * target, it does not impact the beak placement within the callout. For example example, if the beakWidth is 8,
     * then the actual beakWidth is sqrroot(8^2 + 8^2) = 11.31x11.31. So the callout will need to be an extra 3 pixels
     * away from its target. While the beak is being positioned in the callout it still acts as though it were 8x8.
     * */
    var _a = _getFlankingEdges(elementPosition.targetEdge), positiveEdge = _a.positiveEdge, negativeEdge = _a.negativeEdge;
    var beakTargetPoint = _getCenterValue(target, elementPosition.targetEdge);
    var elementBounds = new Rectangle(beakWidth / 2, elementPosition.elementRectangle.width - beakWidth / 2, beakWidth / 2, elementPosition.elementRectangle.height - beakWidth / 2);
    var beakPositon = new Rectangle(0, beakWidth, 0, beakWidth);
    beakPositon = _moveEdge(beakPositon, elementPosition.targetEdge * -1, -beakWidth / 2);
    beakPositon = _centerEdgeToPoint(beakPositon, elementPosition.targetEdge * -1, beakTargetPoint - _getRelativeRectEdgeValue(positiveEdge, elementPosition.elementRectangle));
    if (!_isEdgeInBounds(beakPositon, elementBounds, positiveEdge)) {
        beakPositon = _alignEdges(beakPositon, elementBounds, positiveEdge);
    }
    else if (!_isEdgeInBounds(beakPositon, elementBounds, negativeEdge)) {
        beakPositon = _alignEdges(beakPositon, elementBounds, negativeEdge);
    }
    return beakPositon;
}
function _getRectangleFromElement(element) {
    var clientRect = element.getBoundingClientRect();
    return new Rectangle(clientRect.left, clientRect.right, clientRect.top, clientRect.bottom);
}
function _getRectangleFromIRect(rect) {
    return new Rectangle(rect.left, rect.right, rect.top, rect.bottom);
}
function _getTargetRect(bounds, target) {
    var targetRectangle;
    if (target) {
        if (target.preventDefault) {
            var ev = target;
            targetRectangle = new Rectangle(ev.clientX, ev.clientX, ev.clientY, ev.clientY);
        }
        else if (target.getBoundingClientRect) {
            targetRectangle = _getRectangleFromElement(target);
            // HTMLImgElements can have x and y values. The check for it being a point must go last.
        }
        else {
            var point = target;
            targetRectangle = new Rectangle(point.x, point.x, point.y, point.y);
        }
        if (!_isRectangleWithinBounds(targetRectangle, bounds)) {
            var outOfBounds = _getOutOfBoundsEdges(targetRectangle, bounds);
            for (var _i = 0, outOfBounds_2 = outOfBounds; _i < outOfBounds_2.length; _i++) {
                var direction = outOfBounds_2[_i];
                targetRectangle[__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"][direction]] = bounds[__WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"][direction]];
            }
        }
    }
    else {
        targetRectangle = new Rectangle(0, 0, 0, 0);
    }
    return targetRectangle;
}
/**
 * If max height is less than zero it returns the bounds height instead.
 */
function _getMaxHeightFromTargetRectangle(targetRectangle, targetEdge, gapSpace, bounds, coverTarget) {
    var maxHeight = 0;
    var directionalHint = DirectionalDictionary[targetEdge];
    // If cover target is set, then the max height should be calculated using the opposite of the target edge since
    // that's the direction that the callout will expand in.
    // For instance, if the directionalhint is bottomLeftEdge then the callout will position so it's bottom edge
    // is aligned with the bottom of the target and expand up towards the top of the screen and the calculated max height
    // is (bottom of target) - (top of screen) - gapSpace.
    var target = coverTarget ? directionalHint.targetEdge * -1 : directionalHint.targetEdge;
    if (target === __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].top) {
        maxHeight = _getEdgeValue(targetRectangle, directionalHint.targetEdge) - bounds.top - gapSpace;
    }
    else if (target === __WEBPACK_IMPORTED_MODULE_3__positioning_types__["RectangleEdge"].bottom) {
        maxHeight = bounds.bottom - _getEdgeValue(targetRectangle, directionalHint.targetEdge) - gapSpace;
    }
    else {
        maxHeight = bounds.bottom - targetRectangle.top - gapSpace;
    }
    return maxHeight > 0 ? maxHeight : bounds.height;
}
function _positionElementRelative(props, elementToPosition, boundingRect, previousPositions) {
    var gap = props.gapSpace ? props.gapSpace : 0;
    var targetRect = _getTargetRect(boundingRect, props.target);
    var positionData = _getAlignmentData(_getPositionData(props.directionalHint, props.directionalHintForRTL, previousPositions), targetRect, boundingRect, props.coverTarget, props.alignTargetEdge);
    var positionedElement = _positionElementWithinBounds(_getRectangleFromElement(elementToPosition), targetRect, boundingRect, positionData, gap, props.directionalHintFixed, props.coverTarget);
    return __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, positionedElement, { targetRectangle: targetRect });
}
function _finalizePositionData(positionedElement, hostElement, bounds, coverTarget) {
    var finalizedElement = _finalizeElementPosition(positionedElement.elementRectangle, hostElement, positionedElement.targetEdge, bounds, positionedElement.alignmentEdge, coverTarget);
    return {
        elementPosition: finalizedElement,
        targetEdge: positionedElement.targetEdge,
        alignmentEdge: positionedElement.alignmentEdge
    };
}
function _positionElement(props, hostElement, elementToPosition, previousPositions) {
    var boundingRect = props.bounds
        ? _getRectangleFromIRect(props.bounds)
        : new Rectangle(0, window.innerWidth - Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getScrollbarWidth"])(), 0, window.innerHeight);
    var positionedElement = _positionElementRelative(props, elementToPosition, boundingRect, previousPositions);
    return _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget);
}
function _positionCallout(props, hostElement, callout, previousPositions) {
    var beakWidth = props.isBeakVisible ? props.beakWidth || 0 : 0;
    var gap = _calculateActualBeakWidthInPixels(beakWidth) / 2 + (props.gapSpace ? props.gapSpace : 0);
    var positionProps = props;
    positionProps.gapSpace = gap;
    var boundingRect = props.bounds
        ? _getRectangleFromIRect(props.bounds)
        : new Rectangle(0, window.innerWidth - Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getScrollbarWidth"])(), 0, window.innerHeight);
    var positionedElement = _positionElementRelative(positionProps, callout, boundingRect, previousPositions);
    var beakPositioned = _positionBeak(beakWidth, positionedElement);
    var finalizedBeakPosition = _finalizeBeakPosition(positionedElement, beakPositioned);
    return __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({}, _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget), { beakPosition: finalizedBeakPosition });
}
// END PRIVATE FUNCTIONS
/* tslint:disable:variable-name */
var __positioningTestPackage = {
    _finalizePositionData: _finalizePositionData,
    _calculateActualBeakWidthInPixels: _calculateActualBeakWidthInPixels,
    _positionElementWithinBounds: _positionElementWithinBounds,
    _positionBeak: _positionBeak,
    _getPositionData: _getPositionData,
    _getMaxHeightFromTargetRectangle: _getMaxHeightFromTargetRectangle
};
/* tslint:enable:variable-name */
/**
 * Used to position an element relative to the given positioning props.
 * If positioning has been completed before, previousPositioningData
 * can be passed to ensure that the positioning element repositions based on
 * its previous targets rather than starting with directionalhint.
 *
 * @export
 * @param {IPositionProps} props
 * @param {HTMLElement} hostElement
 * @param {HTMLElement} elementToPosition
 * @param {IPositionedData} previousPositions
 * @returns
 */
function positionElement(props, hostElement, elementToPosition, previousPositions) {
    return _positionElement(props, hostElement, elementToPosition, previousPositions);
}
function positionCallout(props, hostElement, elementToPosition, previousPositions) {
    return _positionCallout(props, hostElement, elementToPosition, previousPositions);
}
/**
 * Get's the maximum height that a rectangle can have in order to fit below or above a target.
 * If the directional hint specifies a left or right edge (i.e. leftCenter) it will limit the height to the topBorder
 * of the target given.
 * If no bounds are provided then the window is treated as the bounds.
 */
function getMaxHeight(target, targetEdge, gapSpace, bounds, coverTarget) {
    if (gapSpace === void 0) { gapSpace = 0; }
    var mouseTarget = target;
    var elementTarget = target;
    var pointTarget = target;
    var targetRect;
    var boundingRectangle = bounds
        ? _getRectangleFromIRect(bounds)
        : new Rectangle(0, window.innerWidth - Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getScrollbarWidth"])(), 0, window.innerHeight);
    if (mouseTarget.stopPropagation) {
        targetRect = new Rectangle(mouseTarget.clientX, mouseTarget.clientX, mouseTarget.clientY, mouseTarget.clientY);
    }
    else if (pointTarget.x !== undefined && pointTarget.y !== undefined) {
        targetRect = new Rectangle(pointTarget.x, pointTarget.x, pointTarget.y, pointTarget.y);
    }
    else {
        targetRect = _getRectangleFromElement(elementTarget);
    }
    return _getMaxHeightFromTargetRectangle(targetRect, targetEdge, gapSpace, boundingRectangle, coverTarget);
}
/**
 * Returns the opposite edge of the given RectangleEdge.
 */
function getOppositeEdge(edge) {
    return edge * -1;
}
var _a;


/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RectangleEdge", function() { return RectangleEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return Position; });
var RectangleEdge;
(function (RectangleEdge) {
    RectangleEdge[RectangleEdge["top"] = 1] = "top";
    RectangleEdge[RectangleEdge["bottom"] = -1] = "bottom";
    RectangleEdge[RectangleEdge["left"] = 2] = "left";
    RectangleEdge[RectangleEdge["right"] = -2] = "right";
})(RectangleEdge || (RectangleEdge = {}));
var Position;
(function (Position) {
    Position[Position["top"] = 0] = "top";
    Position[Position["bottom"] = 1] = "bottom";
    Position[Position["start"] = 2] = "start";
    Position[Position["end"] = 3] = "end";
})(Position || (Position = {}));


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/SpinButton/SpinButton.styles.js
module.exports = __webpack_require__(115);

/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getArrowButtonStyles", function() { return getArrowButtonStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Styling__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Utilities__);


var _getDisabledStyles = Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["memoizeFunction"])(function (theme) {
    var semanticColors = theme.semanticColors;
    var SpinButtonTextColorDisabled = semanticColors.disabledText;
    var SpinButtonBackgroundColorDisabled = semanticColors.disabledBackground;
    return {
        backgroundColor: SpinButtonBackgroundColorDisabled,
        borderColor: 'transparent',
        pointerEvents: 'none',
        cursor: 'default',
        color: SpinButtonTextColorDisabled,
        selectors: (_a = {},
            _a[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                color: 'GrayText'
            },
            _a)
    };
    var _a;
});
var getArrowButtonStyles = Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["memoizeFunction"])(function (theme, isUpArrow, customSpecificArrowStyles) {
    var semanticColors = theme.semanticColors;
    var ArrowButtonTextColor = semanticColors.buttonText;
    var ArrowButtonTextColorHovered = semanticColors.buttonTextHovered;
    var ArrowButtonTextColorPressed = semanticColors.buttonTextChecked;
    var ArrowButtonBackgroundHovered = semanticColors.buttonBackgroundHovered;
    var ArrowButtonBackgroundPressed = semanticColors.buttonBackgroundChecked;
    var defaultArrowButtonStyles = {
        root: {
            outline: 'none',
            display: 'block',
            height: '50%',
            width: '14px',
            padding: '0',
            backgroundColor: 'transparent',
            textAlign: 'center',
            cursor: 'default',
            color: ArrowButtonTextColor
        },
        rootHovered: {
            backgroundColor: ArrowButtonBackgroundHovered,
            color: ArrowButtonTextColorHovered
        },
        rootChecked: {
            backgroundColor: ArrowButtonBackgroundPressed,
            color: ArrowButtonTextColorPressed,
            selectors: (_a = {},
                _a[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    backgroundColor: 'Highlight',
                    color: 'HighlightText'
                },
                _a)
        },
        rootPressed: {
            backgroundColor: ArrowButtonBackgroundPressed,
            color: ArrowButtonTextColorPressed,
            selectors: (_b = {},
                _b[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    backgroundColor: 'Highlight',
                    color: 'HighlightText'
                },
                _b)
        },
        rootDisabled: {
            opacity: 0.5,
            selectors: (_c = {},
                _c[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    color: 'GrayText',
                    opacity: 1
                },
                _c)
        },
        icon: {
            fontSize: '6px',
            marginTop: '0',
            marginRight: '0',
            marginBottom: '0',
            marginLeft: '0'
        }
    };
    // No specific styles needed as of now.
    var defaultUpArrowButtonStyles = {};
    var defaultDownArrowButtonStyles = {};
    return Object(__WEBPACK_IMPORTED_MODULE_0__Styling__["concatStyleSets"])(defaultArrowButtonStyles, isUpArrow ? defaultUpArrowButtonStyles : defaultDownArrowButtonStyles, customSpecificArrowStyles);
    var _a, _b, _c;
});
var getStyles = Object(__WEBPACK_IMPORTED_MODULE_1__Utilities__["memoizeFunction"])(function (theme, customStyles) {
    var palette = theme.palette, semanticColors = theme.semanticColors;
    var SpinButtonRootBorderColor = semanticColors.inputBorder;
    var SpinButtonRootBorderColorHovered = semanticColors.inputBorderHovered;
    var SpinButtonRootBorderColorFocused = semanticColors.inputFocusBorderAlt;
    var SpinButtonTextColorDisabled = semanticColors.disabledText;
    var SpinButtonInputTextColor = semanticColors.bodyText;
    var SpinButtonInputTextColorSelected = palette.white;
    var SpinButtonInputBackgroundColorSelected = palette.themePrimary;
    var SpinButtonIconDisabledColor = semanticColors.disabledText;
    var defaultStyles = {
        root: {
            outline: 'none',
            fontSize: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontSizes"].medium,
            width: '100%',
            minWidth: '86px'
        },
        labelWrapper: {
            display: 'inline-flex'
        },
        labelWrapperStart: {
            float: 'left',
            marginRight: '10px'
        },
        labelWrapperEnd: {
            float: 'right',
            marginLeft: '10px'
        },
        labelWrapperTop: {
            marginBottom: '10px'
        },
        labelWrapperBottom: {
            marginTop: '10px'
        },
        icon: {
            padding: '2px 5px',
            fontSize: '20px'
        },
        iconDisabled: {
            color: SpinButtonIconDisabledColor
        },
        label: {
            pointerEvents: 'none',
            padding: '2px 0'
        },
        labelDisabled: {
            cursor: 'default',
            color: SpinButtonTextColorDisabled,
            selectors: (_a = {},
                _a[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    color: 'GrayText'
                },
                _a)
        },
        spinButtonWrapper: {
            display: 'flex',
            boxSizing: 'border-box',
            height: '32px',
            minWidth: '86px',
            borderWidth: '1px',
            borderStyle: 'solid',
            borderColor: SpinButtonRootBorderColor
        },
        spinButtonWrapperTopBottom: {
            width: '100%'
        },
        spinButtonWrapperHovered: {
            borderColor: SpinButtonRootBorderColorHovered,
            outline: '2px dashed transparent',
            selectors: (_b = {},
                _b[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    borderColor: 'Highlight',
                    outline: 'none'
                },
                _b)
        },
        spinButtonWrapperFocused: {
            borderColor: SpinButtonRootBorderColorFocused,
            outline: '2px dashed transparent',
            selectors: (_c = {},
                _c[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    borderColor: 'Highlight',
                    outline: 'none'
                },
                _c)
        },
        spinButtonWrapperDisabled: _getDisabledStyles(theme),
        input: {
            boxSizing: 'border-box',
            boxShadow: 'none',
            borderStyle: 'none',
            marginTop: '0',
            marginRight: '0',
            marginBottom: '0',
            marginLeft: '0',
            fontSize: __WEBPACK_IMPORTED_MODULE_0__Styling__["FontSizes"].medium,
            color: SpinButtonInputTextColor,
            height: '100%',
            padding: '0 12px',
            outline: '0',
            textOverflow: 'ellipsis',
            display: 'block',
            float: 'left',
            width: 'calc(100% - 14px)',
            minWidth: '72px',
            overflow: 'hidden',
            cursor: 'text',
            userSelect: 'text'
        },
        inputTextSelected: {
            backgroundColor: SpinButtonInputBackgroundColorSelected,
            color: SpinButtonInputTextColorSelected,
            selectors: (_d = {},
                _d[__WEBPACK_IMPORTED_MODULE_0__Styling__["HighContrastSelector"]] = {
                    backgroundColor: 'Highlight',
                    borderColor: 'Highlight',
                    color: 'HighlightText'
                },
                _d)
        },
        inputDisabled: _getDisabledStyles(theme),
        arrowButtonsContainer: {
            outline: 'none',
            fontSize: '12px',
            display: 'block',
            float: 'left',
            height: '100%',
            cursor: 'default',
            padding: '0',
            boxSizing: 'border-box'
        },
        arrowButtonsContainerDisabled: _getDisabledStyles(theme)
    };
    return Object(__WEBPACK_IMPORTED_MODULE_0__Styling__["concatStyleSets"])(defaultStyles, customStyles);
    var _a, _b, _c, _d;
});


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/SpinButton/SpinButton.classNames.js
module.exports = __webpack_require__(117);

/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getClassNames", function() { return getClassNames; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Styling__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Styling___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Styling__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_positioning__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_positioning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__utilities_positioning__);



var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["memoizeFunction"])(function (styles, disabled, isFocused, keyboardSpinDirection, labelPosition, className) {
    if (labelPosition === void 0) { labelPosition = __WEBPACK_IMPORTED_MODULE_2__utilities_positioning__["Position"].start; }
    if (className === void 0) { className = undefined; }
    return {
        root: Object(__WEBPACK_IMPORTED_MODULE_1__Styling__["mergeStyles"])(styles.root, className),
        labelWrapper: Object(__WEBPACK_IMPORTED_MODULE_1__Styling__["mergeStyles"])(styles.labelWrapper, _getStyleForLabelBasedOnPosition(labelPosition, styles)),
        icon: Object(__WEBPACK_IMPORTED_MODULE_1__Styling__["mergeStyles"])(styles.icon, disabled && styles.iconDisabled),
        label: Object(__WEBPACK_IMPORTED_MODULE_1__Styling__["mergeStyles"])(styles.label, disabled && styles.labelDisabled),
        spinButtonWrapper: Object(__WEBPACK_IMPORTED_MODULE_1__Styling__["mergeStyles"])(styles.spinButtonWrapper, _getStyleForRootBasedOnPosition(labelPosition, styles), !disabled && [
            {
                selectors: {
                    ':hover': styles.spinButtonWrapperHovered
                }
            },
            isFocused && {
                // This is to increase the specifity of the focus styles
                // and make it equal to that of the hover styles.
                selectors: {
                    '&&': styles.spinButtonWrapperFocused
                }
            }
        ], disabled && styles.spinButtonWrapperDisabled),
        input: Object(__WEBPACK_IMPORTED_MODULE_1__Styling__["mergeStyles"])('ms-spinButton-input', styles.input, !disabled && {
            selectors: {
                '::selection': styles.inputTextSelected
            }
        }, disabled && styles.inputDisabled),
        arrowBox: Object(__WEBPACK_IMPORTED_MODULE_1__Styling__["mergeStyles"])(styles.arrowButtonsContainer, disabled && styles.arrowButtonsContainerDisabled)
    };
});
/**
 * Returns the Style corresponding to the label position
 */
function _getStyleForLabelBasedOnPosition(labelPosition, styles) {
    switch (labelPosition) {
        case __WEBPACK_IMPORTED_MODULE_2__utilities_positioning__["Position"].start:
            return styles.labelWrapperStart;
        case __WEBPACK_IMPORTED_MODULE_2__utilities_positioning__["Position"].end:
            return styles.labelWrapperEnd;
        case __WEBPACK_IMPORTED_MODULE_2__utilities_positioning__["Position"].top:
            return styles.labelWrapperTop;
        case __WEBPACK_IMPORTED_MODULE_2__utilities_positioning__["Position"].bottom:
            return styles.labelWrapperBottom;
    }
}
/**
 * Returns the Style corresponding to the label position
 */
function _getStyleForRootBasedOnPosition(labelPosition, styles) {
    switch (labelPosition) {
        case __WEBPACK_IMPORTED_MODULE_2__utilities_positioning__["Position"].top:
        case __WEBPACK_IMPORTED_MODULE_2__utilities_positioning__["Position"].bottom:
            return styles.spinButtonWrapperTopBottom;
        default:
            return {};
    }
}


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/Slider.js
module.exports = __webpack_require__(119);

/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Slider_index__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Slider_index___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_Slider_index__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__components_Slider_index__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__components_Slider_index__[key]; }) }(__WEBPACK_IMPORT_KEY__));



/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Slider/index.js
module.exports = __webpack_require__(121);

/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Slider__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Slider___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Slider__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__Slider__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__Slider__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Slider_base__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Slider_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Slider_base__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__Slider_base__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_1__Slider_base__[key]; }) }(__WEBPACK_IMPORT_KEY__));




/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Slider/Slider.js
module.exports = __webpack_require__(123);

/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Slider", function() { return Slider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Slider_base__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Slider_base___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Slider_base__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Slider_styles__ = __webpack_require__(125);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Slider_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Slider_styles__);



var Slider = Object(__WEBPACK_IMPORTED_MODULE_0__Utilities__["styled"])(__WEBPACK_IMPORTED_MODULE_1__Slider_base__["SliderBase"], __WEBPACK_IMPORTED_MODULE_2__Slider_styles__["getStyles"], undefined, {
    scope: 'Slider'
});


/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValuePosition", function() { return ValuePosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SliderBase", function() { return SliderBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Utilities___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Utilities__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Label__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Label___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Label__);





/**
 * @deprecated Unused.
 */
var ValuePosition;
(function (ValuePosition) {
    ValuePosition[ValuePosition["Previous"] = 0] = "Previous";
    ValuePosition[ValuePosition["Next"] = 1] = "Next";
})(ValuePosition || (ValuePosition = {}));
var getClassNames = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["classNamesFunction"])();
var SliderBase = /** @class */ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */](SliderBase, _super);
    function SliderBase(props) {
        var _this = _super.call(this, props) || this;
        _this._sliderLine = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._thumb = __WEBPACK_IMPORTED_MODULE_1_react__["createRef"]();
        _this._getAriaValueText = function (value) {
            if (_this.props.ariaValueText && value !== undefined) {
                return _this.props.ariaValueText(value);
            }
        };
        _this._onMouseDownOrTouchStart = function (event) {
            if (event.type === 'mousedown') {
                _this._events.on(window, 'mousemove', _this._onMouseMoveOrTouchMove, true);
                _this._events.on(window, 'mouseup', _this._onMouseUpOrTouchEnd, true);
            }
            else if (event.type === 'touchstart') {
                _this._events.on(window, 'touchmove', _this._onMouseMoveOrTouchMove, true);
                _this._events.on(window, 'touchend', _this._onMouseUpOrTouchEnd, true);
            }
            _this._onMouseMoveOrTouchMove(event, true);
        };
        _this._onMouseMoveOrTouchMove = function (event, suppressEventCancelation) {
            if (!_this._sliderLine.current) {
                return;
            }
            var _a = _this.props, max = _a.max, min = _a.min, step = _a.step;
            var steps = (max - min) / step;
            var sliderPositionRect = _this._sliderLine.current.getBoundingClientRect();
            var sliderLength = !_this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;
            var stepLength = sliderLength / steps;
            var currentSteps;
            var distance;
            if (!_this.props.vertical) {
                var left = _this._getPosition(event, _this.props.vertical);
                distance = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getRTL"])() ? sliderPositionRect.right - left : left - sliderPositionRect.left;
                currentSteps = distance / stepLength;
            }
            else {
                var bottom = _this._getPosition(event, _this.props.vertical);
                distance = sliderPositionRect.bottom - bottom;
                currentSteps = distance / stepLength;
            }
            var currentValue;
            var renderedValue;
            // The value shouldn't be bigger than max or be smaller than min.
            if (currentSteps > Math.floor(steps)) {
                renderedValue = currentValue = max;
            }
            else if (currentSteps < 0) {
                renderedValue = currentValue = min;
            }
            else {
                renderedValue = min + step * currentSteps;
                currentValue = min + step * Math.round(currentSteps);
            }
            _this._updateValue(currentValue, renderedValue);
            if (!suppressEventCancelation) {
                event.preventDefault();
                event.stopPropagation();
            }
        };
        _this._onMouseUpOrTouchEnd = function (event) {
            // Synchronize the renderedValue to the actual value.
            _this.setState({
                renderedValue: _this.state.value
            });
            if (_this.props.onChanged) {
                _this.props.onChanged(event, _this.state.value);
            }
            _this._events.off();
        };
        _this._onKeyDown = function (event) {
            var value = _this.state.value;
            var _a = _this.props, max = _a.max, min = _a.min, step = _a.step;
            var diff = 0;
            switch (event.which) {
                case Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getRTLSafeKeyCode"])(__WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].left):
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].down:
                    diff = -step;
                    break;
                case Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getRTLSafeKeyCode"])(__WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].right):
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].up:
                    diff = step;
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].home:
                    value = min;
                    break;
                case __WEBPACK_IMPORTED_MODULE_2__Utilities__["KeyCodes"].end:
                    value = max;
                    break;
                default:
                    return;
            }
            var newValue = Math.min(max, Math.max(min, value + diff));
            _this._updateValue(newValue, newValue);
            event.preventDefault();
            event.stopPropagation();
        };
        _this._warnMutuallyExclusive({
            value: 'defaultValue'
        });
        _this._id = Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getId"])('Slider');
        var value = props.value !== undefined ? props.value : props.defaultValue !== undefined ? props.defaultValue : props.min;
        _this.state = {
            value: value,
            renderedValue: value
        };
        return _this;
    }
    /**
     * Invoked when a component is receiving new props. This method is not called for the initial render.
     */
    SliderBase.prototype.componentWillReceiveProps = function (newProps) {
        if (newProps.value !== undefined) {
            var value = Math.max(newProps.min, Math.min(newProps.max, newProps.value));
            this.setState({
                value: value,
                renderedValue: value
            });
        }
    };
    SliderBase.prototype.render = function () {
        var _a = this.props, ariaLabel = _a.ariaLabel, className = _a.className, disabled = _a.disabled, label = _a.label, max = _a.max, min = _a.min, showValue = _a.showValue, buttonProps = _a.buttonProps, vertical = _a.vertical, valueFormat = _a.valueFormat, styles = _a.styles, theme = _a.theme;
        var _b = this.state, value = _b.value, renderedValue = _b.renderedValue;
        var thumbOffsetPercent = min === max ? 0 : ((renderedValue - min) / (max - min)) * 100;
        var lengthString = vertical ? 'height' : 'width';
        var onMouseDownProp = disabled ? {} : { onMouseDown: this._onMouseDownOrTouchStart };
        var onTouchStartProp = disabled ? {} : { onTouchStart: this._onMouseDownOrTouchStart };
        var onKeyDownProp = disabled ? {} : { onKeyDown: this._onKeyDown };
        var classNames = getClassNames(styles, {
            className: className,
            disabled: disabled,
            vertical: vertical,
            showTransitions: renderedValue === value,
            showValue: showValue,
            theme: theme
        });
        var divButtonProps = buttonProps ? Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getNativeProps"])(buttonProps, __WEBPACK_IMPORTED_MODULE_2__Utilities__["divProperties"]) : undefined;
        return (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.root },
            label && (__WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Label__["Label"], __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ className: classNames.titleLabel }, (ariaLabel ? {} : { htmlFor: this._id })), label)),
            __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { className: classNames.container },
                __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */]({ "aria-valuenow": value, "aria-valuemin": min, "aria-valuemax": max, "aria-valuetext": this._getAriaValueText(value), "aria-label": ariaLabel || label, "aria-disabled": disabled }, onMouseDownProp, onTouchStartProp, onKeyDownProp, divButtonProps, { className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])(classNames.slideBox, buttonProps.className), id: this._id, role: "slider", tabIndex: disabled ? undefined : 0, "data-is-focusable": !disabled }),
                    __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("div", { ref: this._sliderLine, className: classNames.line },
                        __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { ref: this._thumb, className: classNames.thumb, style: this._getThumbStyle(vertical, thumbOffsetPercent) }),
                        __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])(classNames.lineContainer, classNames.activeSection), style: (_c = {}, _c[lengthString] = thumbOffsetPercent + '%', _c) }),
                        __WEBPACK_IMPORTED_MODULE_1_react__["createElement"]("span", { className: Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["css"])(classNames.lineContainer, classNames.inactiveSection), style: (_d = {}, _d[lengthString] = 100 - thumbOffsetPercent + '%', _d) }))),
                showValue && __WEBPACK_IMPORTED_MODULE_1_react__["createElement"](__WEBPACK_IMPORTED_MODULE_3__Label__["Label"], { className: classNames.valueLabel }, valueFormat ? valueFormat(value) : value))));
        var _c, _d;
    };
    SliderBase.prototype.focus = function () {
        if (this._thumb.current) {
            this._thumb.current.focus();
        }
    };
    Object.defineProperty(SliderBase.prototype, "value", {
        get: function () {
            return this.state.value;
        },
        enumerable: true,
        configurable: true
    });
    SliderBase.prototype._getThumbStyle = function (vertical, thumbOffsetPercent) {
        var direction = vertical ? 'bottom' : Object(__WEBPACK_IMPORTED_MODULE_2__Utilities__["getRTL"])() ? 'right' : 'left';
        return _a = {},
            _a[direction] = thumbOffsetPercent + '%',
            _a;
        var _a;
    };
    SliderBase.prototype._getPosition = function (event, vertical) {
        var currentPosition;
        switch (event.type) {
            case 'mousedown':
            case 'mousemove':
                currentPosition = !vertical ? event.clientX : event.clientY;
                break;
            case 'touchstart':
            case 'touchmove':
                currentPosition = !vertical ? event.touches[0].clientX : event.touches[0].clientY;
                break;
        }
        return currentPosition;
    };
    SliderBase.prototype._updateValue = function (value, renderedValue) {
        var _this = this;
        var step = this.props.step;
        var numDec = 0;
        if (isFinite(step)) {
            while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {
                numDec++;
            }
        }
        // Make sure value has correct number of decimal places based on number of decimals in step
        var roundedValue = parseFloat(value.toFixed(numDec));
        var valueChanged = roundedValue !== this.state.value;
        this.setState({
            value: roundedValue,
            renderedValue: renderedValue
        }, function () {
            if (valueChanged && _this.props.onChange) {
                _this.props.onChange(_this.state.value);
            }
        });
    };
    SliderBase.defaultProps = {
        step: 1,
        min: 0,
        max: 10,
        showValue: true,
        disabled: false,
        vertical: false,
        buttonProps: {}
    };
    return SliderBase;
}(__WEBPACK_IMPORTED_MODULE_2__Utilities__["BaseComponent"]));



/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

// Loading office-ui-fabric-react/components/Slider/Slider.styles.js
module.exports = __webpack_require__(126);

/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/Styling.js
var Styling = __webpack_require__(19);
var Styling_default = /*#__PURE__*/__webpack_require__.n(Styling);

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/Async.js
/**
 * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled.
 * This Async helper class solves these issues by tying async code to the lifetime of a disposable object.
 *
 * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a
 * new instance of the class and remember to call dispose() during your code's dispose handler.
 *
 * @public
 */
var Async_Async = /** @class */ (function () {
    // tslint:disable-next-line:no-any
    function Async(parent, onError) {
        this._timeoutIds = null;
        this._immediateIds = null;
        this._intervalIds = null;
        this._animationFrameIds = null;
        this._isDisposed = false;
        this._parent = parent || null;
        this._onErrorHandler = onError;
        this._noop = function () {
            /* do nothing */
        };
    }
    /**
     * Dispose function, clears all async operations.
     */
    Async.prototype.dispose = function () {
        var id;
        this._isDisposed = true;
        this._parent = null;
        // Clear timeouts.
        if (this._timeoutIds) {
            for (id in this._timeoutIds) {
                if (this._timeoutIds.hasOwnProperty(id)) {
                    this.clearTimeout(parseInt(id, 10));
                }
            }
            this._timeoutIds = null;
        }
        // Clear immediates.
        if (this._immediateIds) {
            for (id in this._immediateIds) {
                if (this._immediateIds.hasOwnProperty(id)) {
                    this.clearImmediate(parseInt(id, 10));
                }
            }
            this._immediateIds = null;
        }
        // Clear intervals.
        if (this._intervalIds) {
            for (id in this._intervalIds) {
                if (this._intervalIds.hasOwnProperty(id)) {
                    this.clearInterval(parseInt(id, 10));
                }
            }
            this._intervalIds = null;
        }
        // Clear animation frames.
        if (this._animationFrameIds) {
            for (id in this._animationFrameIds) {
                if (this._animationFrameIds.hasOwnProperty(id)) {
                    this.cancelAnimationFrame(parseInt(id, 10));
                }
            }
            this._animationFrameIds = null;
        }
    };
    /**
     * SetTimeout override, which will auto cancel the timeout during dispose.
     * @param callback - Callback to execute.
     * @param duration - Duration in milliseconds.
     * @returns The setTimeout id.
     */
    Async.prototype.setTimeout = function (callback, duration) {
        var _this = this;
        var timeoutId = 0;
        if (!this._isDisposed) {
            if (!this._timeoutIds) {
                this._timeoutIds = {};
            }
            /* tslint:disable:ban-native-functions */
            timeoutId = setTimeout(function () {
                // Time to execute the timeout, enqueue it as a foreground task to be executed.
                try {
                    // Now delete the record and call the callback.
                    if (_this._timeoutIds) {
                        delete _this._timeoutIds[timeoutId];
                    }
                    callback.apply(_this._parent);
                }
                catch (e) {
                    if (_this._onErrorHandler) {
                        _this._onErrorHandler(e);
                    }
                }
            }, duration);
            /* tslint:enable:ban-native-functions */
            this._timeoutIds[timeoutId] = true;
        }
        return timeoutId;
    };
    /**
     * Clears the timeout.
     * @param id - Id to cancel.
     */
    Async.prototype.clearTimeout = function (id) {
        if (this._timeoutIds && this._timeoutIds[id]) {
            /* tslint:disable:ban-native-functions */
            clearTimeout(id);
            delete this._timeoutIds[id];
            /* tslint:enable:ban-native-functions */
        }
    };
    /**
     * SetImmediate override, which will auto cancel the immediate during dispose.
     * @param callback - Callback to execute.
     * @returns The setTimeout id.
     */
    Async.prototype.setImmediate = function (callback) {
        var _this = this;
        var immediateId = 0;
        if (!this._isDisposed) {
            if (!this._immediateIds) {
                this._immediateIds = {};
            }
            /* tslint:disable:ban-native-functions */
            var setImmediateCallback = function () {
                // Time to execute the timeout, enqueue it as a foreground task to be executed.
                try {
                    // Now delete the record and call the callback.
                    if (_this._immediateIds) {
                        delete _this._immediateIds[immediateId];
                    }
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            };
            immediateId = window.setImmediate ? window.setImmediate(setImmediateCallback) : window.setTimeout(setImmediateCallback, 0);
            /* tslint:enable:ban-native-functions */
            this._immediateIds[immediateId] = true;
        }
        return immediateId;
    };
    /**
     * Clears the immediate.
     * @param id - Id to cancel.
     */
    Async.prototype.clearImmediate = function (id) {
        if (this._immediateIds && this._immediateIds[id]) {
            /* tslint:disable:ban-native-functions */
            window.clearImmediate ? window.clearImmediate(id) : window.clearTimeout(id);
            delete this._immediateIds[id];
            /* tslint:enable:ban-native-functions */
        }
    };
    /**
     * SetInterval override, which will auto cancel the timeout during dispose.
     * @param callback - Callback to execute.
     * @param duration - Duration in milliseconds.
     * @returns The setTimeout id.
     */
    Async.prototype.setInterval = function (callback, duration) {
        var _this = this;
        var intervalId = 0;
        if (!this._isDisposed) {
            if (!this._intervalIds) {
                this._intervalIds = {};
            }
            /* tslint:disable:ban-native-functions */
            intervalId = setInterval(function () {
                // Time to execute the interval callback, enqueue it as a foreground task to be executed.
                try {
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            }, duration);
            /* tslint:enable:ban-native-functions */
            this._intervalIds[intervalId] = true;
        }
        return intervalId;
    };
    /**
     * Clears the interval.
     * @param id - Id to cancel.
     */
    Async.prototype.clearInterval = function (id) {
        if (this._intervalIds && this._intervalIds[id]) {
            /* tslint:disable:ban-native-functions */
            clearInterval(id);
            delete this._intervalIds[id];
            /* tslint:enable:ban-native-functions */
        }
    };
    /**
     * Creates a function that, when executed, will only call the func function at most once per
     * every wait milliseconds. Provide an options object to indicate that func should be invoked
     * on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled
     * function will return the result of the last func call.
     *
     * Note: If leading and trailing options are true func will be called on the trailing edge of
     * the timeout only if the the throttled function is invoked more than once during the wait timeout.
     *
     * @param func - The function to throttle.
     * @param wait - The number of milliseconds to throttle executions to. Defaults to 0.
     * @param options - The options object.
     * @returns The new throttled function.
     */
    Async.prototype.throttle = function (func, wait, options) {
        var _this = this;
        if (this._isDisposed) {
            return this._noop;
        }
        var waitMS = wait || 0;
        var leading = true;
        var trailing = true;
        var lastExecuteTime = 0;
        var lastResult;
        // tslint:disable-next-line:no-any
        var lastArgs;
        var timeoutId = null;
        if (options && typeof options.leading === 'boolean') {
            leading = options.leading;
        }
        if (options && typeof options.trailing === 'boolean') {
            trailing = options.trailing;
        }
        var callback = function (userCall) {
            var now = new Date().getTime();
            var delta = now - lastExecuteTime;
            var waitLength = leading ? waitMS - delta : waitMS;
            if (delta >= waitMS && (!userCall || leading)) {
                lastExecuteTime = now;
                if (timeoutId) {
                    _this.clearTimeout(timeoutId);
                    timeoutId = null;
                }
                lastResult = func.apply(_this._parent, lastArgs);
            }
            else if (timeoutId === null && trailing) {
                timeoutId = _this.setTimeout(callback, waitLength);
            }
            return lastResult;
        };
        // tslint:disable-next-line:no-any
        var resultFunction = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            lastArgs = args;
            return callback(true);
        };
        return resultFunction;
    };
    /**
     * Creates a function that will delay the execution of func until after wait milliseconds have
     * elapsed since the last time it was invoked. Provide an options object to indicate that func
     * should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls
     * to the debounced function will return the result of the last func call.
     *
     * Note: If leading and trailing options are true func will be called on the trailing edge of
     * the timeout only if the the debounced function is invoked more than once during the wait
     * timeout.
     *
     * @param func - The function to debounce.
     * @param wait - The number of milliseconds to delay.
     * @param options - The options object.
     * @returns The new debounced function.
     */
    Async.prototype.debounce = function (func, wait, options) {
        var _this = this;
        if (this._isDisposed) {
            var noOpFunction = (function () {
                /** Do nothing */
            });
            noOpFunction.cancel = function () {
                return;
            };
            /* tslint:disable:no-any */
            noOpFunction.flush = (function () { return null; });
            /* tslint:enable:no-any */
            noOpFunction.pending = function () { return false; };
            return noOpFunction;
        }
        var waitMS = wait || 0;
        var leading = false;
        var trailing = true;
        var maxWait = null;
        var lastCallTime = 0;
        var lastExecuteTime = new Date().getTime();
        var lastResult;
        // tslint:disable-next-line:no-any
        var lastArgs;
        var timeoutId = null;
        if (options && typeof options.leading === 'boolean') {
            leading = options.leading;
        }
        if (options && typeof options.trailing === 'boolean') {
            trailing = options.trailing;
        }
        if (options && typeof options.maxWait === 'number' && !isNaN(options.maxWait)) {
            maxWait = options.maxWait;
        }
        var markExecuted = function (time) {
            if (timeoutId) {
                _this.clearTimeout(timeoutId);
                timeoutId = null;
            }
            lastExecuteTime = time;
        };
        var invokeFunction = function (time) {
            markExecuted(time);
            lastResult = func.apply(_this._parent, lastArgs);
        };
        var callback = function (userCall) {
            var now = new Date().getTime();
            var executeImmediately = false;
            if (userCall) {
                if (leading && now - lastCallTime >= waitMS) {
                    executeImmediately = true;
                }
                lastCallTime = now;
            }
            var delta = now - lastCallTime;
            var waitLength = waitMS - delta;
            var maxWaitDelta = now - lastExecuteTime;
            var maxWaitExpired = false;
            if (maxWait !== null) {
                // maxWait only matters when there is a pending callback
                if (maxWaitDelta >= maxWait && timeoutId) {
                    maxWaitExpired = true;
                }
                else {
                    waitLength = Math.min(waitLength, maxWait - maxWaitDelta);
                }
            }
            if (delta >= waitMS || maxWaitExpired || executeImmediately) {
                invokeFunction(now);
            }
            else if ((timeoutId === null || !userCall) && trailing) {
                timeoutId = _this.setTimeout(callback, waitLength);
            }
            return lastResult;
        };
        var pending = function () {
            return !!timeoutId;
        };
        var cancel = function () {
            if (pending()) {
                // Mark the debounced function as having executed
                markExecuted(new Date().getTime());
            }
        };
        var flush = function () {
            if (pending()) {
                invokeFunction(new Date().getTime());
            }
            return lastResult;
        };
        // tslint:disable-next-line:no-any
        var resultFunction = (function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            lastArgs = args;
            return callback(true);
        });
        resultFunction.cancel = cancel;
        resultFunction.flush = flush;
        resultFunction.pending = pending;
        return resultFunction;
    };
    Async.prototype.requestAnimationFrame = function (callback) {
        var _this = this;
        var animationFrameId = 0;
        if (!this._isDisposed) {
            if (!this._animationFrameIds) {
                this._animationFrameIds = {};
            }
            /* tslint:disable:ban-native-functions */
            var animationFrameCallback = function () {
                try {
                    // Now delete the record and call the callback.
                    if (_this._animationFrameIds) {
                        delete _this._animationFrameIds[animationFrameId];
                    }
                    callback.apply(_this._parent);
                }
                catch (e) {
                    _this._logError(e);
                }
            };
            animationFrameId = window.requestAnimationFrame
                ? window.requestAnimationFrame(animationFrameCallback)
                : window.setTimeout(animationFrameCallback, 0);
            /* tslint:enable:ban-native-functions */
            this._animationFrameIds[animationFrameId] = true;
        }
        return animationFrameId;
    };
    Async.prototype.cancelAnimationFrame = function (id) {
        if (this._animationFrameIds && this._animationFrameIds[id]) {
            /* tslint:disable:ban-native-functions */
            window.cancelAnimationFrame ? window.cancelAnimationFrame(id) : window.clearTimeout(id);
            /* tslint:enable:ban-native-functions */
            delete this._animationFrameIds[id];
        }
    };
    // tslint:disable-next-line:no-any
    Async.prototype._logError = function (e) {
        if (this._onErrorHandler) {
            this._onErrorHandler(e);
        }
    };
    return Async;
}());


// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/object.js
var object = __webpack_require__(28);

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/EventGroup.js
/* tslint:disable:no-string-literal */

/** An instance of EventGroup allows anything with a handle to it to trigger events on it.
 *  If the target is an HTMLElement, the event will be attached to the element and can be
 *  triggered as usual (like clicking for onclick).
 *  The event can be triggered by calling EventGroup.raise() here. If the target is an
 *  HTMLElement, the event gets raised and is handled by the browser. Otherwise, it gets
 *  handled here in EventGroup, and the handler is called in the context of the parent
 *  (which is passed in in the constructor).
 *
 * @public
 */
var EventGroup_EventGroup = /** @class */ (function () {
    /** parent: the context in which events attached to non-HTMLElements are called */
    // tslint:disable-next-line:no-any
    function EventGroup(parent) {
        this._id = EventGroup._uniqueId++;
        this._parent = parent;
        this._eventRecords = [];
    }
    /** For IE8, bubbleEvent is ignored here and must be dealt with by the handler.
     *  Events raised here by default have bubbling set to false and cancelable set to true.
     *  This applies also to built-in events being raised manually here on HTMLElements,
     *  which may lead to unexpected behavior if it differs from the defaults.
     *
     */
    EventGroup.raise = function (
    // tslint:disable-next-line:no-any
    target, eventName, 
    // tslint:disable-next-line:no-any
    eventArgs, bubbleEvent) {
        var retVal;
        if (EventGroup._isElement(target)) {
            if (document.createEvent) {
                var ev = document.createEvent('HTMLEvents');
                ev.initEvent(eventName, bubbleEvent || false, true);
                Object(object["a" /* assign */])(ev, eventArgs);
                retVal = target.dispatchEvent(ev);
                // tslint:disable-next-line:no-any
            }
            else if (document['createEventObject']) {
                // IE8
                // tslint:disable-next-line:no-any
                var evObj = document['createEventObject'](eventArgs);
                // cannot set cancelBubble on evObj, fireEvent will overwrite it
                target.fireEvent('on' + eventName, evObj);
            }
        }
        else {
            while (target && retVal !== false) {
                var events = target.__events__;
                var eventRecords = events ? events[eventName] : null;
                if (eventRecords) {
                    for (var id in eventRecords) {
                        if (eventRecords.hasOwnProperty(id)) {
                            var eventRecordList = eventRecords[id];
                            for (var listIndex = 0; retVal !== false && listIndex < eventRecordList.length; listIndex++) {
                                var record = eventRecordList[listIndex];
                                if (record.objectCallback) {
                                    retVal = record.objectCallback.call(record.parent, eventArgs);
                                }
                            }
                        }
                    }
                }
                // If the target has a parent, bubble the event up.
                target = bubbleEvent ? target.parent : null;
            }
        }
        return retVal;
    };
    // tslint:disable-next-line:no-any
    EventGroup.isObserved = function (target, eventName) {
        var events = target && target.__events__;
        return !!events && !!events[eventName];
    };
    /** Check to see if the target has declared support of the given event. */
    // tslint:disable-next-line:no-any
    EventGroup.isDeclared = function (target, eventName) {
        var declaredEvents = target && target.__declaredEvents;
        return !!declaredEvents && !!declaredEvents[eventName];
    };
    // tslint:disable-next-line:no-any
    EventGroup.stopPropagation = function (event) {
        if (event.stopPropagation) {
            event.stopPropagation();
        }
        else {
            // IE8
            event.cancelBubble = true;
        }
    };
    EventGroup._isElement = function (target) {
        return !!target && (!!target.addEventListener || (typeof HTMLElement !== 'undefined' && target instanceof HTMLElement));
    };
    EventGroup.prototype.dispose = function () {
        if (!this._isDisposed) {
            this._isDisposed = true;
            this.off();
            this._parent = null;
        }
    };
    /** On the target, attach a set of events, where the events object is a name to function mapping. */
    // tslint:disable-next-line:no-any
    EventGroup.prototype.onAll = function (target, events, useCapture) {
        for (var eventName in events) {
            if (events.hasOwnProperty(eventName)) {
                this.on(target, eventName, events[eventName], useCapture);
            }
        }
    };
    /** On the target, attach an event whose handler will be called in the context of the parent
     * of this instance of EventGroup.
     */
    // tslint:disable-next-line:no-any
    EventGroup.prototype.on = function (target, eventName, callback, options) {
        var _this = this;
        if (eventName.indexOf(',') > -1) {
            var events = eventName.split(/[ ,]+/);
            for (var i = 0; i < events.length; i++) {
                this.on(target, events[i], callback, options);
            }
        }
        else {
            var parent_1 = this._parent;
            var eventRecord = {
                target: target,
                eventName: eventName,
                parent: parent_1,
                callback: callback,
                options: options
            };
            // Initialize and wire up the record on the target, so that it can call the callback if the event fires.
            var events = (target.__events__ = target.__events__ || {});
            events[eventName] =
                events[eventName] ||
                    {
                        count: 0
                    };
            events[eventName][this._id] = events[eventName][this._id] || [];
            events[eventName][this._id].push(eventRecord);
            events[eventName].count++;
            if (EventGroup._isElement(target)) {
                // tslint:disable-next-line:no-any
                var processElementEvent = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (_this._isDisposed) {
                        return;
                    }
                    var result;
                    try {
                        result = callback.apply(parent_1, args);
                        if (result === false && args[0]) {
                            var e = args[0];
                            if (e.preventDefault) {
                                e.preventDefault();
                            }
                            if (e.stopPropagation) {
                                e.stopPropagation();
                            }
                            e.cancelBubble = true;
                        }
                    }
                    catch (e) {
                        /* ErrorHelper.log(e); */
                    }
                    return result;
                };
                eventRecord.elementCallback = processElementEvent;
                if (target.addEventListener) {
                    /* tslint:disable:ban-native-functions */
                    target.addEventListener(eventName, processElementEvent, options);
                    /* tslint:enable:ban-native-functions */
                }
                else if (target.attachEvent) {
                    // IE8
                    target.attachEvent('on' + eventName, processElementEvent);
                }
            }
            else {
                // tslint:disable-next-line:no-any
                var processObjectEvent = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (_this._isDisposed) {
                        return;
                    }
                    return callback.apply(parent_1, args);
                };
                eventRecord.objectCallback = processObjectEvent;
            }
            // Remember the record locally, so that it can be removed.
            this._eventRecords.push(eventRecord);
        }
    };
    // tslint:disable-next-line:no-any
    EventGroup.prototype.off = function (target, eventName, callback, options) {
        for (var i = 0; i < this._eventRecords.length; i++) {
            var eventRecord = this._eventRecords[i];
            if ((!target || target === eventRecord.target) &&
                (!eventName || eventName === eventRecord.eventName) &&
                (!callback || callback === eventRecord.callback) &&
                (typeof options !== 'boolean' || options === eventRecord.options)) {
                var events = eventRecord.target.__events__;
                var targetArrayLookup = events[eventRecord.eventName];
                var targetArray = targetArrayLookup ? targetArrayLookup[this._id] : null;
                // We may have already target's entries, so check for null.
                if (targetArray) {
                    if (targetArray.length === 1 || !callback) {
                        targetArrayLookup.count -= targetArray.length;
                        delete events[eventRecord.eventName][this._id];
                    }
                    else {
                        targetArrayLookup.count--;
                        targetArray.splice(targetArray.indexOf(eventRecord), 1);
                    }
                    if (!targetArrayLookup.count) {
                        delete events[eventRecord.eventName];
                    }
                }
                if (eventRecord.elementCallback) {
                    if (eventRecord.target.removeEventListener) {
                        eventRecord.target.removeEventListener(eventRecord.eventName, eventRecord.elementCallback, eventRecord.options);
                    }
                    else if (eventRecord.target.detachEvent) {
                        // IE8
                        eventRecord.target.detachEvent('on' + eventRecord.eventName, eventRecord.elementCallback);
                    }
                }
                this._eventRecords.splice(i--, 1);
            }
        }
    };
    /** Trigger the given event in the context of this instance of EventGroup. */
    // tslint:disable-next-line:no-any
    EventGroup.prototype.raise = function (eventName, eventArgs, bubbleEvent) {
        return EventGroup.raise(this._parent, eventName, eventArgs, bubbleEvent);
    };
    /** Declare an event as being supported by this instance of EventGroup. */
    EventGroup.prototype.declare = function (event) {
        var declaredEvents = (this._parent.__declaredEvents = this._parent.__declaredEvents || {});
        if (typeof event === 'string') {
            declaredEvents[event] = true;
        }
        else {
            for (var i = 0; i < event.length; i++) {
                declaredEvents[event[i]] = true;
            }
        }
    };
    // tslint:disable-next-line:no-inferrable-types
    EventGroup._uniqueId = 0;
    return EventGroup;
}());


// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/dom.js
var DATA_PORTAL_ATTRIBUTE = 'data-portal-element';
/**
 * Sets the virtual parent of an element.
 * Pass `undefined` as the `parent` to clear the virtual parent.
 *
 * @public
 */
function setVirtualParent(child, parent) {
    var virtualChild = child;
    var virtualParent = parent;
    if (!virtualChild._virtual) {
        virtualChild._virtual = {
            children: []
        };
    }
    var oldParent = virtualChild._virtual.parent;
    if (oldParent && oldParent !== parent) {
        // Remove the child from its old parent.
        var index = oldParent._virtual.children.indexOf(virtualChild);
        if (index > -1) {
            oldParent._virtual.children.splice(index, 1);
        }
    }
    virtualChild._virtual.parent = virtualParent || undefined;
    if (virtualParent) {
        if (!virtualParent._virtual) {
            virtualParent._virtual = {
                children: []
            };
        }
        virtualParent._virtual.children.push(virtualChild);
    }
}
/**
 * Gets the virtual parent given the child element, if it exists.
 *
 * @public
 */
function getVirtualParent(child) {
    var parent;
    if (child && isVirtualElement(child)) {
        parent = child._virtual.parent;
    }
    return parent;
}
/**
 * Gets the element which is the parent of a given element.
 * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over
 * real DOM parent when present.
 *
 * @public
 */
function getParent(child, allowVirtualParents) {
    if (allowVirtualParents === void 0) { allowVirtualParents = true; }
    return child && ((allowVirtualParents && getVirtualParent(child)) || (child.parentNode && child.parentNode));
}
/**
 * Gets the elements which are child elements of the given element.
 * If `allowVirtualChildren` is `true`, this method enumerates virtual child elements
 * after the original children.
 * @param parent - The element to get the children of.
 * @param allowVirtualChildren - true if the method should enumerate virtual child elements.
 */
function getChildren(parent, allowVirtualChildren) {
    if (allowVirtualChildren === void 0) { allowVirtualChildren = true; }
    var children = [];
    if (parent) {
        for (var i = 0; i < parent.children.length; i++) {
            children.push(parent.children.item(i));
        }
        if (allowVirtualChildren && isVirtualElement(parent)) {
            children.push.apply(children, parent._virtual.children);
        }
    }
    return children;
}
/**
 * Determines whether or not a parent element contains a given child element.
 * If `allowVirtualParents` is true, this method may return `true` if the child
 * has the parent in its virtual element hierarchy.
 *
 * @public
 */
function elementContains(parent, child, allowVirtualParents) {
    if (allowVirtualParents === void 0) { allowVirtualParents = true; }
    var isContained = false;
    if (parent && child) {
        if (allowVirtualParents) {
            isContained = false;
            while (child) {
                var nextParent = getParent(child);
                if (nextParent === parent) {
                    isContained = true;
                    break;
                }
                child = nextParent;
            }
        }
        else if (parent.contains) {
            isContained = parent.contains(child);
        }
    }
    return isContained;
}
var _isSSR = false;
/**
 * Helper to set ssr mode to simulate no window object returned from getWindow helper.
 *
 * @public
 */
function setSSR(isEnabled) {
    _isSSR = isEnabled;
}
/**
 * Helper to get the window object.
 *
 * @public
 */
function getWindow(rootElement) {
    if (_isSSR || typeof window === 'undefined') {
        return undefined;
    }
    else {
        return rootElement && rootElement.ownerDocument && rootElement.ownerDocument.defaultView
            ? rootElement.ownerDocument.defaultView
            : window;
    }
}
/**
 * Helper to get the document object.
 *
 * @public
 */
function getDocument(rootElement) {
    if (_isSSR || typeof document === 'undefined') {
        return undefined;
    }
    else {
        return rootElement && rootElement.ownerDocument ? rootElement.ownerDocument : document;
    }
}
/**
 * Helper to get bounding client rect, works with window.
 *
 * @public
 */
function getRect(element) {
    var rect;
    if (element) {
        if (element === window) {
            rect = {
                left: 0,
                top: 0,
                width: window.innerWidth,
                height: window.innerHeight,
                right: window.innerWidth,
                bottom: window.innerHeight
            };
        }
        else if (element.getBoundingClientRect) {
            rect = element.getBoundingClientRect();
        }
    }
    return rect;
}
/**
 * Identify element as a portal by setting an attribute.
 * @param element - Element to mark as a portal.
 */
function setPortalAttribute(element) {
    element.setAttribute(DATA_PORTAL_ATTRIBUTE, 'true');
}
/**
 * Determine whether a target is within a portal from perspective of root or optional parent.
 * This function only works against portal components that use the setPortalAttribute function.
 * If both parent and child are within the same portal this function will return false.
 * @param target - Element to query portal containment status of.
 * @param parent - Optional parent perspective. Search for containing portal stops at parent (or root if parent is undefined or invalid.)
 */
function portalContainsElement(target, parent) {
    var elementMatch = findElementRecursive(target, function (testElement) { return parent === testElement || testElement.hasAttribute(DATA_PORTAL_ATTRIBUTE); });
    return elementMatch !== null && elementMatch.hasAttribute(DATA_PORTAL_ATTRIBUTE);
}
/**
 * Finds the first parent element where the matchFunction returns true
 * @param element - element to start searching at
 * @param matchFunction - the function that determines if the element is a match
 * @returns the matched element or null no match was found
 */
function findElementRecursive(element, matchFunction) {
    if (!element || element === document.body) {
        return null;
    }
    return matchFunction(element) ? element : findElementRecursive(getParent(element), matchFunction);
}
/**
 * Determines if an element, or any of its ancestors, contain the given attribute
 * @param element - element to start searching at
 * @param attribute - the attribute to search for
 * @returns the value of the first instance found
 */
function elementContainsAttribute(element, attribute) {
    var elementMatch = findElementRecursive(element, function (testElement) { return testElement.hasAttribute(attribute); });
    return elementMatch && elementMatch.getAttribute(attribute);
}
/**
 * Determines whether or not an element has the virtual hierarchy extension.
 *
 * @public
 */
function isVirtualElement(element) {
    return element && !!element._virtual;
}

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/merge-styles/6.16.1/node_modules/@uifabric/merge-styles/lib/index.js + 14 modules
var lib = __webpack_require__(20);

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/scroll.js


var _scrollbarWidth;
var _bodyScrollDisabledCount = 0;
var DisabledScrollClassName = Object(lib["d" /* mergeStyles */])({
    overflow: 'hidden !important'
});
/**
 * Placing this attribute on scrollable divs optimizes detection to know
 * if the div is scrollable or not (given we can avoid expensive operations
 * like getComputedStyle.)
 *
 * @public
 */
var DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';
var _makeElementScrollAllower = function () {
    var _previousClientY = 0;
    var _element = null;
    // remember the clientY for future calls of _preventOverscrolling
    var _saveClientY = function (event) {
        if (event.targetTouches.length === 1) {
            _previousClientY = event.targetTouches[0].clientY;
        }
    };
    // prevent the body from scrolling when the user attempts
    // to scroll past the top or bottom of the element
    var _preventOverscrolling = function (event) {
        // only respond to a single-finger touch
        if (event.targetTouches.length !== 1) {
            return;
        }
        // prevent the body touchmove handler from firing
        // so that scrolling is allowed within the element
        event.stopPropagation();
        if (!_element) {
            return;
        }
        var clientY = event.targetTouches[0].clientY - _previousClientY;
        var scrollableParent = findScrollableParent(event.target);
        if (scrollableParent) {
            _element = scrollableParent;
        }
        // if the element is scrolled to the top,
        // prevent the user from scrolling up
        if (_element.scrollTop === 0 && clientY > 0) {
            event.preventDefault();
        }
        // if the element is scrolled to the bottom,
        // prevent the user from scrolling down
        if (_element.scrollHeight - _element.scrollTop <= _element.clientHeight && clientY < 0) {
            event.preventDefault();
        }
    };
    return function (element, events) {
        if (!element) {
            return;
        }
        events.on(element, 'touchstart', _saveClientY, { passive: false });
        events.on(element, 'touchmove', _preventOverscrolling, { passive: false });
        _element = element;
    };
};
/**
 * Allows the user to scroll within a element,
 * while preventing the user from scrolling the body
 */
var allowScrollOnElement = _makeElementScrollAllower();
var _disableIosBodyScroll = function (event) {
    event.preventDefault();
};
/**
 * Disables the body scrolling.
 *
 * @public
 */
function disableBodyScroll() {
    var doc = getDocument();
    if (doc && doc.body && !_bodyScrollDisabledCount) {
        doc.body.classList.add(DisabledScrollClassName);
        doc.body.addEventListener('touchmove', _disableIosBodyScroll, { passive: false, capture: false });
    }
    _bodyScrollDisabledCount++;
}
/**
 * Enables the body scrolling.
 *
 * @public
 */
function enableBodyScroll() {
    if (_bodyScrollDisabledCount > 0) {
        var doc = getDocument();
        if (doc && doc.body && _bodyScrollDisabledCount === 1) {
            doc.body.classList.remove(DisabledScrollClassName);
            doc.body.removeEventListener('touchmove', _disableIosBodyScroll);
        }
        _bodyScrollDisabledCount--;
    }
}
/**
 * Calculates the width of a scrollbar for the browser/os.
 *
 * @public
 */
function getScrollbarWidth() {
    if (_scrollbarWidth === undefined) {
        var scrollDiv = document.createElement('div');
        scrollDiv.style.setProperty('width', '100px');
        scrollDiv.style.setProperty('height', '100px');
        scrollDiv.style.setProperty('overflow', 'scroll');
        scrollDiv.style.setProperty('position', 'absolute');
        scrollDiv.style.setProperty('top', '-9999px');
        document.body.appendChild(scrollDiv);
        // Get the scrollbar width
        _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        // Delete the DIV
        document.body.removeChild(scrollDiv);
    }
    return _scrollbarWidth;
}
/**
 * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns
 * document.body.
 *
 * @public
 */
function findScrollableParent(startingElement) {
    var el = startingElement;
    // First do a quick scan for the scrollable attribute.
    while (el && el !== document.body) {
        if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {
            return el;
        }
        el = el.parentElement;
    }
    // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.
    el = startingElement;
    while (el && el !== document.body) {
        if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {
            var computedStyles = getComputedStyle(el);
            var overflowY = computedStyles ? computedStyles.getPropertyValue('overflow-y') : '';
            if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {
                return el;
            }
        }
        el = el.parentElement;
    }
    // Fall back to window scroll.
    if (!el || el === document.body) {
        // tslint:disable-next-line:no-any
        el = window;
    }
    return el;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/AutoScroll.js



var SCROLL_ITERATION_DELAY = 16;
var SCROLL_GUTTER_HEIGHT = 100;
var MAX_SCROLL_VELOCITY = 15;
/**
 * AutoScroll simply hooks up mouse events given a parent element, and scrolls the container
 * up/down depending on how close the mouse is to the top/bottom of the container.
 *
 * Once you don't want autoscroll any more, just dispose the helper and it will unhook events.
 *
 * @public
 */
var AutoScroll_AutoScroll = /** @class */ (function () {
    function AutoScroll(element) {
        this._events = new EventGroup_EventGroup(this);
        this._scrollableParent = findScrollableParent(element);
        this._incrementScroll = this._incrementScroll.bind(this);
        this._scrollRect = getRect(this._scrollableParent);
        // tslint:disable-next-line:no-any
        if (this._scrollableParent === window) {
            this._scrollableParent = document.body;
        }
        if (this._scrollableParent) {
            this._events.on(window, 'mousemove', this._onMouseMove, true);
            this._events.on(window, 'touchmove', this._onTouchMove, true);
        }
    }
    AutoScroll.prototype.dispose = function () {
        this._events.dispose();
        this._stopScroll();
    };
    AutoScroll.prototype._onMouseMove = function (ev) {
        this._computeScrollVelocity(ev.clientY);
    };
    AutoScroll.prototype._onTouchMove = function (ev) {
        if (ev.touches.length > 0) {
            this._computeScrollVelocity(ev.touches[0].clientY);
        }
    };
    AutoScroll.prototype._computeScrollVelocity = function (clientY) {
        if (!this._scrollRect) {
            return;
        }
        var scrollRectTop = this._scrollRect.top;
        var scrollClientBottom = scrollRectTop + this._scrollRect.height - SCROLL_GUTTER_HEIGHT;
        if (clientY < scrollRectTop + SCROLL_GUTTER_HEIGHT) {
            this._scrollVelocity = Math.max(-MAX_SCROLL_VELOCITY, -MAX_SCROLL_VELOCITY * ((SCROLL_GUTTER_HEIGHT - (clientY - scrollRectTop)) / SCROLL_GUTTER_HEIGHT));
        }
        else if (clientY > scrollClientBottom) {
            this._scrollVelocity = Math.min(MAX_SCROLL_VELOCITY, MAX_SCROLL_VELOCITY * ((clientY - scrollClientBottom) / SCROLL_GUTTER_HEIGHT));
        }
        else {
            this._scrollVelocity = 0;
        }
        if (this._scrollVelocity) {
            this._startScroll();
        }
        else {
            this._stopScroll();
        }
    };
    AutoScroll.prototype._startScroll = function () {
        if (!this._timeoutId) {
            this._incrementScroll();
        }
    };
    AutoScroll.prototype._incrementScroll = function () {
        if (this._scrollableParent) {
            this._scrollableParent.scrollTop += Math.round(this._scrollVelocity);
        }
        this._timeoutId = setTimeout(this._incrementScroll, SCROLL_ITERATION_DELAY);
    };
    AutoScroll.prototype._stopScroll = function () {
        if (this._timeoutId) {
            clearTimeout(this._timeoutId);
            delete this._timeoutId;
        }
    };
    return AutoScroll;
}());


// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.9.3/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(17);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(1);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/warn.js
var _warningCallback = undefined;
/**
 * Warns when a deprecated props are being used.
 *
 * @public
 * @param componentName - The name of the component being used.
 * @param props - The props passed into the component.
 * @param deprecationMap - The map of deprecations, where key is the prop name and the value is
 * either null or a replacement prop name.
 */
function warnDeprecations(componentName, props, deprecationMap) {
    for (var propName in deprecationMap) {
        if (props && propName in props) {
            var deprecationMessage = componentName + " property '" + propName + "' was used but has been deprecated.";
            var replacementPropName = deprecationMap[propName];
            if (replacementPropName) {
                deprecationMessage += " Use '" + replacementPropName + "' instead.";
            }
            warn(deprecationMessage);
        }
    }
}
/**
 * Warns when two props which are mutually exclusive are both being used.
 *
 * @public
 * @param componentName - The name of the component being used.
 * @param props - The props passed into the component.
 * @param exclusiveMap - A map where the key is a parameter, and the value is the other parameter.
 */
function warnMutuallyExclusive(componentName, props, exclusiveMap) {
    for (var propName in exclusiveMap) {
        if (props && propName in props) {
            var propInExclusiveMapValue = exclusiveMap[propName];
            if (propInExclusiveMapValue && propInExclusiveMapValue in props) {
                warn(componentName + " property '" + propName + "' is mutually exclusive with '" + exclusiveMap[propName] + "'. Use one or the other.");
            }
        }
    }
}
/**
 * Warns when props are required if a condition is met.
 *
 * @public
 * @param componentName - The name of the component being used.
 * @param props - The props passed into the component.
 * @param requiredProps - The name of the props that are required when the condition is met.
 * @param conditionalPropName - The name of the prop that the condition is based on.
 * @param condition - Whether the condition is met.
 */
function warnConditionallyRequiredProps(componentName, props, requiredProps, conditionalPropName, condition) {
    if (condition === true) {
        for (var _i = 0, requiredProps_1 = requiredProps; _i < requiredProps_1.length; _i++) {
            var requiredPropName = requiredProps_1[_i];
            if (!(requiredPropName in props)) {
                warn(componentName + " property '" + requiredPropName + "' is required when '" + conditionalPropName + "' is used.'");
            }
        }
    }
}
/**
 * Sends a warning to console, if the api is present.
 *
 * @public
 * @param message - Warning message.
 */
function warn(message) {
    if (_warningCallback) {
        _warningCallback(message);
    }
    else if (console && console.warn) {
        console.warn(message);
    }
}
/**
 * Configures the warning callback. Passing in undefined will reset it to use the default
 * console.warn function.
 *
 * @public
 * @param warningCallback - Callback to override the generated warnings.
 */
function setWarningCallback(warningCallback) {
    _warningCallback = warningCallback;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/KeyCodes.js
/**
 * Simulated enum for keycodes. These will get inlined by uglify when used much like an enum
 *
 * @public
 */
var KeyCodes = {
    backspace: 8,
    tab: 9,
    enter: 13,
    shift: 16,
    ctrl: 17,
    alt: 18,
    pauseBreak: 19,
    capslock: 20,
    escape: 27,
    space: 32,
    pageUp: 33,
    pageDown: 34,
    end: 35,
    home: 36,
    left: 37,
    up: 38,
    right: 39,
    down: 40,
    insert: 45,
    del: 46,
    zero: 48,
    one: 49,
    two: 50,
    three: 51,
    four: 52,
    five: 53,
    six: 54,
    seven: 55,
    eight: 56,
    nine: 57,
    a: 65,
    b: 66,
    c: 67,
    d: 68,
    e: 69,
    f: 70,
    g: 71,
    h: 72,
    i: 73,
    j: 74,
    k: 75,
    l: 76,
    m: 77,
    n: 78,
    o: 79,
    p: 80,
    q: 81,
    r: 82,
    s: 83,
    t: 84,
    u: 85,
    v: 86,
    w: 87,
    x: 88,
    y: 89,
    z: 90,
    leftWindow: 91,
    rightWindow: 92,
    select: 93,
    zero_numpad: 96,
    one_numpad: 97,
    two_numpad: 98,
    three_numpad: 99,
    four_numpad: 100,
    five_numpad: 101,
    six_numpad: 102,
    seven_numpad: 103,
    eight_numpad: 104,
    nine_numpad: 105,
    multiply: 106,
    add: 107,
    subtract: 109,
    decimalPoint: 110,
    divide: 111,
    f1: 112,
    f2: 113,
    f3: 114,
    f4: 115,
    f5: 116,
    f6: 117,
    f7: 118,
    f8: 119,
    f9: 120,
    f10: 121,
    f11: 122,
    f12: 123,
    numlock: 144,
    scrollLock: 145,
    semicolon: 186,
    equalSign: 187,
    comma: 188,
    dash: 189,
    period: 190,
    forwardSlash: 191,
    graveAccent: 192,
    openBracket: 219,
    backSlash: 220,
    closeBracket: 221,
    singleQuote: 222
};

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/keyboard.js

var DirectionalKeyCodes = (keyboard__a = {},
    keyboard__a[KeyCodes.up] = 1,
    keyboard__a[KeyCodes.down] = 1,
    keyboard__a[KeyCodes.left] = 1,
    keyboard__a[KeyCodes.right] = 1,
    keyboard__a[KeyCodes.home] = 1,
    keyboard__a[KeyCodes.end] = 1,
    keyboard__a[KeyCodes.tab] = 1,
    keyboard__a[KeyCodes.pageUp] = 1,
    keyboard__a[KeyCodes.pageDown] = 1,
    keyboard__a);
/**
 * Returns true if the keycode is a directional keyboard key.
 */
function isDirectionalKeyCode(which) {
    return !!DirectionalKeyCodes[which];
}
/**
 * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.
 * This can be used to add global shortcut keys that directionally move from section to section within
 * an app or between focus trap zones.
 */
function addDirectionalKeyCode(which) {
    DirectionalKeyCodes[which] = 1;
}
var keyboard__a;

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/initializeFocusRects.js


var IsFocusVisibleClassName = 'ms-Fabric--isFocusVisible';
/**
 * Initializes the logic which:
 *
 * 1. Subscribes keydown and mousedown events. (It will only do it once per window,
 *    so it's safe to call this method multiple times.)
 * 2. When the user presses directional keyboard keys, adds the 'ms-Fabric--isFocusVisible' classname
 *    to the document body.
 * 3. When the user clicks a mouse button, we remove the classname if it exists.
 *
 * This logic allows components on the page to conditionally render focus treatments only
 * if the global classname exists, which simplifies logic overall.
 *
 * @param window - the window used to add the event listeners
 */
function initializeFocusRects(window) {
    var win = (window || getWindow());
    if (win && !win.__hasInitializeFocusRects__) {
        win.__hasInitializeFocusRects__ = true;
        win.addEventListener('mousedown', _onMouseDown, true);
        win.addEventListener('keydown', _onKeyDown, true);
    }
}
function _onMouseDown(ev) {
    var win = getWindow(ev.target);
    if (win) {
        var classList = win.document.body.classList;
        if (classList.contains(IsFocusVisibleClassName)) {
            classList.remove(IsFocusVisibleClassName);
        }
    }
}
function _onKeyDown(ev) {
    var win = getWindow(ev.target);
    if (win) {
        var classList = win.document.body.classList;
        if (isDirectionalKeyCode(ev.which) && !classList.contains(IsFocusVisibleClassName)) {
            classList.add(IsFocusVisibleClassName);
        }
    }
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/initializeDir.js

function initializeDir(window) {
    var win = (window || getWindow());
    if (win && !win.__hasInitializedDir__) {
        win.__hasInitializedDir__ = true;
        // Ensure that the documentElement has a 'dir' attribute.
        var documentElement = win.document.documentElement;
        if (!documentElement.hasAttribute('dir')) {
            documentElement.setAttribute('dir', 'ltr');
        }
    }
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/BaseComponent.js







/**
 * BaseComponent class, which provides basic helpers for all components.
 *
 * @public
 */
var BaseComponent_BaseComponent = /** @class */ (function (_super) {
    tslib_es6["c" /* __extends */](BaseComponent, _super);
    // tslint:enable:variable-name
    /**
     * BaseComponent constructor
     * @param props - The props for the component.
     * @param context - The context for the component.
     */
    // tslint:disable-next-line:no-any
    function BaseComponent(props, context) {
        var _this = _super.call(this, props, context) || this;
        // Ensure basic assumptions about the environment.
        initializeFocusRects();
        initializeDir();
        _makeAllSafe(_this, BaseComponent.prototype, [
            'componentDidMount',
            'shouldComponentUpdate',
            'getSnapshotBeforeUpdate',
            'render',
            'componentDidUpdate',
            'componentWillUnmount'
        ]);
        return _this;
    }
    /**
     * When the component receives props, make sure the componentRef is updated.
     */
    BaseComponent.prototype.componentDidUpdate = function (prevProps, prevState) {
        this._updateComponentRef(prevProps, this.props);
    };
    /**
     * When the component has mounted, update the componentRef.
     */
    BaseComponent.prototype.componentDidMount = function () {
        this._setComponentRef(this.props.componentRef, this);
    };
    /**
     * If we have disposables, dispose them automatically on unmount.
     */
    BaseComponent.prototype.componentWillUnmount = function () {
        this._setComponentRef(this.props.componentRef, null);
        if (this.__disposables) {
            for (var i = 0, len = this._disposables.length; i < len; i++) {
                var disposable = this.__disposables[i];
                if (disposable.dispose) {
                    disposable.dispose();
                }
            }
            this.__disposables = null;
        }
    };
    Object.defineProperty(BaseComponent.prototype, "className", {
        /**
         * Gets the object's class name.
         */
        get: function () {
            if (!this.__className) {
                var funcNameRegex = /function (.{1,})\(/;
                var results = funcNameRegex.exec(this.constructor.toString());
                this.__className = results && results.length > 1 ? results[1] : '';
            }
            return this.__className;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseComponent.prototype, "_disposables", {
        /**
         * Allows subclasses to push things to this._disposables to be auto disposed.
         */
        get: function () {
            if (!this.__disposables) {
                this.__disposables = [];
            }
            return this.__disposables;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseComponent.prototype, "_async", {
        /**
         * Gets the async instance associated with the component, created on demand. The async instance gives
         * subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks
         * will be cleared/ignored automatically after unmounting. The helpers within the async object also
         * preserve the this pointer so that you don't need to "bind" the callbacks.
         */
        get: function () {
            if (!this.__async) {
                this.__async = new Async_Async(this);
                this._disposables.push(this.__async);
            }
            return this.__async;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseComponent.prototype, "_events", {
        /**
         * Gets the event group instance assocaited with the component, created on demand. The event instance
         * provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks
         * will be automatically disconnected after unmounting. The helpers within the events object also
         * preserve the this reference so that you don't need to "bind" the callbacks.
         */
        get: function () {
            if (!this.__events) {
                this.__events = new EventGroup_EventGroup(this);
                this._disposables.push(this.__events);
            }
            return this.__events;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Helper to return a memoized ref resolver function.
     * @param refName - Name of the member to assign the ref to.
     * @returns A function instance keyed from the given refname.
     * @deprecated Use `createRef` from React.createRef.
     */
    BaseComponent.prototype._resolveRef = function (refName) {
        var _this = this;
        if (!this.__resolves) {
            this.__resolves = {};
        }
        if (!this.__resolves[refName]) {
            // tslint:disable-next-line:no-any
            this.__resolves[refName] = function (ref) {
                // tslint:disable-next-line:no-any
                return (_this[refName] = ref);
            };
        }
        return this.__resolves[refName];
    };
    /**
     * Updates the componentRef (by calling it with "this" when necessary.)
     */
    BaseComponent.prototype._updateComponentRef = function (currentProps, newProps) {
        if (newProps === void 0) { newProps = {}; }
        // currentProps *should* always be defined, but verify that just in case a subclass is manually
        // calling a lifecycle method with no parameters (which has happened) or other odd usage.
        if (currentProps && newProps && currentProps.componentRef !== newProps.componentRef) {
            this._setComponentRef(currentProps.componentRef, null);
            this._setComponentRef(newProps.componentRef, this);
        }
    };
    /**
     * Warns when a deprecated props are being used.
     *
     * @param deprecationMap - The map of deprecations, where key is the prop name and the value is
     * either null or a replacement prop name.
     */
    BaseComponent.prototype._warnDeprecations = function (deprecationMap) {
        warnDeprecations(this.className, this.props, deprecationMap);
    };
    /**
     * Warns when props which are mutually exclusive with each other are both used.
     *
     * @param mutuallyExclusiveMap - The map of mutually exclusive props.
     */
    BaseComponent.prototype._warnMutuallyExclusive = function (mutuallyExclusiveMap) {
        warnMutuallyExclusive(this.className, this.props, mutuallyExclusiveMap);
    };
    /**
     * Warns when props are required if a condition is met.
     *
     * @param requiredProps - The name of the props that are required when the condition is met.
     * @param conditionalPropName - The name of the prop that the condition is based on.
     * @param condition - Whether the condition is met.
     */
    BaseComponent.prototype._warnConditionallyRequiredProps = function (requiredProps, conditionalPropName, condition) {
        warnConditionallyRequiredProps(this.className, this.props, requiredProps, conditionalPropName, condition);
    };
    BaseComponent.prototype._setComponentRef = function (ref, value) {
        if (!this._skipComponentRefResolution && ref) {
            if (typeof ref === 'function') {
                ref(value);
            }
            if (typeof ref === 'object') {
                // tslint:disable:no-any
                ref.current = value;
            }
        }
    };
    return BaseComponent;
}(external__react_["Component"]));

/**
 * Helper to override a given method with a wrapper method that can try/catch the original, but also
 * ensures that the BaseComponent's methods are called before the subclass's. This ensures that
 * componentWillUnmount in the base is called and that things in the _disposables array are disposed.
 */
function _makeAllSafe(obj, prototype, methodNames) {
    for (var i = 0, len = methodNames.length; i < len; i++) {
        _makeSafe(obj, prototype, methodNames[i]);
    }
}
function _makeSafe(obj, prototype, methodName) {
    // tslint:disable:no-any
    var classMethod = obj[methodName];
    var prototypeMethod = prototype[methodName];
    // tslint:enable:no-any
    if (classMethod || prototypeMethod) {
        // tslint:disable-next-line:no-any
        obj[methodName] = function () {
            var retVal;
            if (prototypeMethod) {
                retVal = prototypeMethod.apply(this, arguments);
            }
            if (classMethod !== prototypeMethod) {
                retVal = classMethod.apply(this, arguments);
            }
            return retVal;
        };
    }
}
/**
 * Simple constant function for returning null, used to render empty templates in JSX.
 *
 * @public
 */
function nullRender() {
    return null;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/Context.js


/**
 * @deprecated This function uses the legacy context API, which is deprecated and should not be
 * used in new code. Please migrate to the new context API. https://reactjs.org/docs/context.html
 */
function provideContext(contextTypes, mapPropsToContext) {
    var Provider = /** @class */ (function (_super) {
        tslib_es6["c" /* __extends */](Provider, _super);
        function Provider() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Provider.prototype.getChildContext = function () {
            return mapPropsToContext(this.props);
        };
        Provider.prototype.render = function () {
            return external__react_["Children"].only(this.props.children);
        };
        Provider.childContextTypes = contextTypes;
        return Provider;
    }(external__react_["Component"]));
    return Provider;
}

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/GlobalSettings.js
var GlobalSettings = __webpack_require__(40);

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/Customizations.js



var CustomizationsGlobalKey = 'customizations';
var NO_CUSTOMIZATIONS = { settings: {}, scopedSettings: {}, inCustomizerContext: false };
var _allSettings = GlobalSettings["a" /* GlobalSettings */].getValue(CustomizationsGlobalKey, {
    settings: {},
    scopedSettings: {},
    inCustomizerContext: false
});
var _events = new EventGroup_EventGroup(_allSettings);
var Customizations_Customizations = /** @class */ (function () {
    function Customizations() {
    }
    Customizations.reset = function () {
        _allSettings.settings = {};
        _allSettings.scopedSettings = {};
    };
    // tslint:disable-next-line:no-any
    Customizations.applySettings = function (settings) {
        _allSettings.settings = tslib_es6["a" /* __assign */]({}, _allSettings.settings, settings);
        Customizations._raiseChange();
    };
    // tslint:disable-next-line:no-any
    Customizations.applyScopedSettings = function (scopeName, settings) {
        _allSettings.scopedSettings[scopeName] = tslib_es6["a" /* __assign */]({}, _allSettings.scopedSettings[scopeName], settings);
        Customizations._raiseChange();
    };
    Customizations.getSettings = function (properties, scopeName, localSettings
    // tslint:disable-next-line:no-any
    ) {
        if (localSettings === void 0) { localSettings = NO_CUSTOMIZATIONS; }
        // tslint:disable-next-line:no-any
        var settings = {};
        var localScopedSettings = (scopeName && localSettings.scopedSettings[scopeName]) || {};
        var globalScopedSettings = (scopeName && _allSettings.scopedSettings[scopeName]) || {};
        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {
            var property = properties_1[_i];
            settings[property] =
                localScopedSettings[property] ||
                    localSettings.settings[property] ||
                    globalScopedSettings[property] ||
                    _allSettings.settings[property];
        }
        return settings;
    };
    Customizations.observe = function (onChange) {
        _events.on(_allSettings, 'change', onChange);
    };
    Customizations.unobserve = function (onChange) {
        _events.off(_allSettings, 'change', onChange);
    };
    Customizations._raiseChange = function () {
        _events.raise('change');
    };
    return Customizations;
}());


// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/Customizer.js




var CustomizerContext = external__react_["createContext"]({
    customizations: {
        inCustomizerContext: false,
        settings: {},
        scopedSettings: {}
    }
});
/**
 * The Customizer component allows for default props to be mixed into components which
 * are decorated with the customizable() decorator, or use the styled HOC. This enables
 * injection scenarios like:
 *
 * 1. render svg icons instead of the icon font within all buttons
 * 2. inject a custom theme object into a component
 *
 * Props are provided via the settings prop which should be one of the following:
 * - A json map which contains 1 or more name/value pairs representing injectable props.
 * - A function that receives the current settings and returns the new ones that apply to the scope
 *
 * @public
 */
var Customizer_Customizer = /** @class */ (function (_super) {
    tslib_es6["c" /* __extends */](Customizer, _super);
    function Customizer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._changeCount = 0;
        _this._onCustomizationChange = function () { return _this.forceUpdate(); };
        return _this;
    }
    Customizer.prototype.componentDidMount = function () {
        Customizations_Customizations.observe(this._onCustomizationChange);
    };
    Customizer.prototype.componentWillUnmount = function () {
        Customizations_Customizations.unobserve(this._onCustomizationChange);
    };
    Customizer.prototype.render = function () {
        var _this = this;
        var contextTransform = this.props.contextTransform;
        return (external__react_["createElement"](CustomizerContext.Consumer, null, function (parentContext) {
            var newContext = mergeCustomizations(_this.props, parentContext);
            if (contextTransform) {
                newContext = contextTransform(newContext);
            }
            return external__react_["createElement"](CustomizerContext.Provider, { value: newContext }, _this.props.children);
        }));
    };
    return Customizer;
}(BaseComponent_BaseComponent));

/**
 * Merge props and customizations giving priority to props over context.
 * NOTE: This function will always perform multiple merge operations. Use with caution.
 * @param props - New settings to merge in.
 * @param parentContext - Context containing current settings.
 * @returns Merged customizations.
 */
function mergeCustomizations(props, parentContext) {
    var _a = (parentContext || {}).customizations, customizations = _a === void 0 ? { settings: {}, scopedSettings: {} } : _a;
    return {
        customizations: {
            settings: mergeSettings(customizations.settings, props.settings),
            scopedSettings: mergeScopedSettings(customizations.scopedSettings, props.scopedSettings),
            inCustomizerContext: true
        }
    };
}
/**
 * Merge new and old settings, giving priority to new settings.
 * New settings is optional in which case oldSettings is returned as-is.
 * @param oldSettings - Old settings to fall back to.
 * @param newSettings - New settings that will be merged over oldSettings.
 * @returns Merged settings.
 */
function mergeSettings(oldSettings, newSettings) {
    if (oldSettings === void 0) { oldSettings = {}; }
    var mergeSettingsWith = isSettingsFunction(newSettings) ? newSettings : settingsMergeWith(newSettings);
    return mergeSettingsWith(oldSettings);
}
function mergeScopedSettings(oldSettings, newSettings) {
    if (oldSettings === void 0) { oldSettings = {}; }
    var mergeSettingsWith = isSettingsFunction(newSettings) ? newSettings : scopedSettingsMergeWith(newSettings);
    return mergeSettingsWith(oldSettings);
}
function isSettingsFunction(settings) {
    return typeof settings === 'function';
}
function settingsMergeWith(newSettings) {
    return function (settings) { return (newSettings ? tslib_es6["a" /* __assign */]({}, settings, newSettings) : settings); };
}
function scopedSettingsMergeWith(scopedSettingsFromProps) {
    if (scopedSettingsFromProps === void 0) { scopedSettingsFromProps = {}; }
    return function (oldScopedSettings) {
        var newScopedSettings = tslib_es6["a" /* __assign */]({}, oldScopedSettings);
        for (var scopeName in scopedSettingsFromProps) {
            if (scopedSettingsFromProps.hasOwnProperty(scopeName)) {
                newScopedSettings[scopeName] = tslib_es6["a" /* __assign */]({}, oldScopedSettings[scopeName], scopedSettingsFromProps[scopeName]);
            }
        }
        return newScopedSettings;
    };
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/DelayedRender.js


/**
 * Utility component for delaying the render of a child component after a given delay. This component
 * requires a single child component; don't pass in many components. Wrap multiple components in a DIV
 * if necessary.
 *
 * @public
 */
var DelayedRender_DelayedRender = /** @class */ (function (_super) {
    tslib_es6["c" /* __extends */](DelayedRender, _super);
    function DelayedRender(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isRendered: false
        };
        return _this;
    }
    DelayedRender.prototype.componentDidMount = function () {
        var _this = this;
        var delay = this.props.delay;
        this._timeoutId = setTimeout(function () {
            _this.setState({
                isRendered: true
            });
        }, delay);
    };
    DelayedRender.prototype.componentWillUnmount = function () {
        if (this._timeoutId) {
            clearTimeout(this._timeoutId);
        }
    };
    DelayedRender.prototype.render = function () {
        return this.state.isRendered ? external__react_["Children"].only(this.props.children) : null;
    };
    DelayedRender.defaultProps = {
        delay: 0
    };
    return DelayedRender;
}(external__react_["Component"]));


// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/FabricPerformance.js
var now = function () { return (typeof performance !== 'undefined' && !!performance.now ? performance.now() : Date.now()); };
var RESET_INTERVAL = 3 * 60 * 1000; // auto reset every 3 minutes
/**
 * Performance helper class for measuring things.
 *
 * @public
 */
var FabricPerformance = /** @class */ (function () {
    function FabricPerformance() {
    }
    /**
     * Measures execution time of the given syncronous function. If the same logic is executed multiple times,
     * each individual measurement will be collected as well the overall numbers.
     * @param name - The name of this measurement
     * @param func - The logic to be measured for execution time
     */
    FabricPerformance.measure = function (name, func) {
        if (FabricPerformance._timeoutId) {
            FabricPerformance.setPeriodicReset();
        }
        var start = now();
        func();
        var end = now();
        var measurement = FabricPerformance.summary[name] || {
            totalDuration: 0,
            count: 0,
            all: []
        };
        var duration = end - start;
        measurement.totalDuration += duration;
        measurement.count++;
        measurement.all.push({
            duration: duration,
            timeStamp: end
        });
        FabricPerformance.summary[name] = measurement;
    };
    FabricPerformance.reset = function () {
        FabricPerformance.summary = {};
        clearTimeout(FabricPerformance._timeoutId);
        FabricPerformance._timeoutId = NaN;
    };
    FabricPerformance.setPeriodicReset = function () {
        FabricPerformance._timeoutId = setTimeout(function () { return FabricPerformance.reset(); }, RESET_INTERVAL);
    };
    FabricPerformance.summary = {};
    return FabricPerformance;
}());


// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/Rectangle.js
/**
 * Rectangle helper class.
 *
 * @public
 */
var Rectangle = /** @class */ (function () {
    function Rectangle(left, right, top, bottom) {
        if (left === void 0) { left = 0; }
        if (right === void 0) { right = 0; }
        if (top === void 0) { top = 0; }
        if (bottom === void 0) { bottom = 0; }
        this.top = top;
        this.bottom = bottom;
        this.left = left;
        this.right = right;
    }
    Object.defineProperty(Rectangle.prototype, "width", {
        /**
         * Calculated automatically by subtracting the right from left
         */
        get: function () {
            return this.right - this.left;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Rectangle.prototype, "height", {
        /**
         * Calculated automatically by subtracting the bottom from top.
         */
        get: function () {
            return this.bottom - this.top;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Tests if another rect is approximately equal to this rect (within 4 decimal places.)
     */
    Rectangle.prototype.equals = function (rect) {
        // I'm fixing it to 4 decimal places because it allows enough precision and will handle cases when something should be rounded,
        // like .999999 should round to 1.
        return (parseFloat(this.top.toFixed(4)) === parseFloat(rect.top.toFixed(4)) &&
            parseFloat(this.bottom.toFixed(4)) === parseFloat(rect.bottom.toFixed(4)) &&
            parseFloat(this.left.toFixed(4)) === parseFloat(rect.left.toFixed(4)) &&
            parseFloat(this.right.toFixed(4)) === parseFloat(rect.right.toFixed(4)));
    };
    return Rectangle;
}());


// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/aria.js
/**
 * ARIA helper to concatenate attributes, returning undefined if all attributes
 * are undefined. (Empty strings are not a valid ARIA attribute value.)
 *
 * @param ariaAttributes - ARIA attributes to merge
 */
function mergeAriaAttributeValues() {
    var ariaAttributes = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        ariaAttributes[_i] = arguments[_i];
    }
    var mergedAttribute = ariaAttributes
        .filter(function (arg) { return arg !== undefined && arg !== null; })
        .join(' ')
        .trim();
    return mergedAttribute === '' ? undefined : mergedAttribute;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/array.js
/**
 * Helper to find the index of an item within an array, using a callback to
 * determine the match.
 *
 * @public
 * @param array - Array to search.
 * @param cb - Callback which returns true on matches.
 */
function findIndex(array, cb) {
    var index = -1;
    for (var i = 0; array && i < array.length; i++) {
        if (cb(array[i], i)) {
            index = i;
            break;
        }
    }
    return index;
}
/**
 * Helper to find the first item within an array that satisfies the callback.
 * @param array - Array to search
 * @param cb - Callback which returns true on matches
 */
function find(array, cb) {
    var index = findIndex(array, cb);
    if (index < 0) {
        return undefined;
    }
    return array[index];
}
/**
 * Creates an array of a given size and helper method to populate.
 *
 * @public
 * @param size - Size of array.
 * @param getItem - Callback to populate given cell index.
 */
function createArray(size, getItem) {
    var array = [];
    for (var i = 0; i < size; i++) {
        array.push(getItem(i));
    }
    return array;
}
/**
 * Convert the given array to a matrix with columnCount number
 * of columns.
 *
 * @public
 * @param items - The array to convert
 * @param columnCount - The number of columns for the resulting matrix
 * @returns A matrix of items
 */
function toMatrix(items, columnCount) {
    return items.reduce(function (rows, currentValue, index) {
        if (index % columnCount === 0) {
            rows.push([currentValue]);
        }
        else {
            rows[rows.length - 1].push(currentValue);
        }
        return rows;
    }, []);
}
/**
 * Given an array, it returns a new array that does not contain the item at the given index.
 * @param array - The array to operate on
 * @param index - The index of the element to remove
 */
function removeIndex(array, index) {
    return array.filter(function (_, i) { return index !== i; });
}
/**
 * Given an array, this function returns a new array where the element at a given index has been replaced.
 * @param array - The array to operate on
 * @param newElement - The element that will be placed in the new array
 * @param index - The index of the element that should be replaced
 */
function replaceElement(array, newElement, index) {
    var copy = array.slice();
    copy[index] = newElement;
    return copy;
}
/**
 * Given an array, this function returns a new array where an element has been inserted at the given index.
 * @param array - The array to operate on
 * @param index - The index where an element should be inserted
 * @param itemToAdd - The element to insert
 */
function addElementAtIndex(array, index, itemToAdd) {
    var copy = array.slice();
    copy.splice(index, 0, itemToAdd);
    return copy;
}
/**
 * Given an array where each element is of type T or T[], flatten it into an array of T
 * @param array - The array where each element can optionally also be an array
 */
function flatten(array) {
    var result = [];
    array.forEach(function (item) { return (result = result.concat(item)); });
    return result;
}
/**
 * Returns a boolean indicating if the two given arrays are equal in length and values.
 *
 * @param array1 - First array to compare
 * @param array2 - Second array to compare
 * @returns True if the arrays are the same length and have the same values in the same positions, false otherwise.
 */
function arraysEqual(array1, array2) {
    if (array1.length !== array2.length) {
        return false;
    }
    for (var i = 0; i < array1.length; i++) {
        if (array1[i] !== array2[i]) {
            return false;
        }
    }
    return true;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/asAsync.js
/**
 * asAsync - a HOC for async loading components.
 *
 * Usage:
 *
 * const AsyncDialog = asAsync({
 *   load: () => import('Dialog').then(result => result.default),
 * });
 *
 * React.render(domElement, <AsyncDialog asyncPlaceholder={ () => <Spinner/> } { ...dialogProps } />);
 *
 * Note the `asyncPlaceholder` prop will be respected when rendering the async component and it hasn't
 * been loaded yet.
 */


/**
 * If possible, use a WeakMap to maintain a cache of loaded components.
 * This can be used to synchronously render components that have already been loaded,
 * rather than having to wait for at least one async tick.
 */
var _syncModuleCache = typeof WeakMap !== 'undefined'
    ? // tslint:disable-next-line:no-any
        new WeakMap()
    : undefined;
/**
 * Produces a component which internally loads the target component before first mount.
 * The component passes all props through to the loaded component.
 *
 * This overload accepts a module with a default export for the component.
 */
function asAsync(options) {
    var Async = /** @class */ (function (_super) {
        tslib_es6["c" /* __extends */](Async, _super);
        function Async() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.state = {
                Component: _syncModuleCache ? _syncModuleCache.get(options.load) : undefined
            };
            return _this;
        }
        Async.prototype.render = function () {
            // Typescript issue: the rest can't be pulled without the any cast, as TypeScript fails with rest on generics.
            // tslint:disable-next-line:no-any
            var _a = this.props, forwardedRef = _a.forwardedRef, Placeholder = _a.asyncPlaceholder, rest = tslib_es6["d" /* __rest */](_a, ["forwardedRef", "asyncPlaceholder"]);
            var Component = this.state.Component;
            return Component ? external__react_["createElement"](Component, tslib_es6["a" /* __assign */]({ ref: forwardedRef }, rest)) : Placeholder ? external__react_["createElement"](Placeholder, null) : null;
        };
        Async.prototype.componentDidMount = function () {
            var _this = this;
            var Component = this.state.Component;
            if (!Component) {
                options
                    .load()
                    .then(function (LoadedComponent) {
                    if (LoadedComponent) {
                        // Cache component for future reference.
                        _syncModuleCache && _syncModuleCache.set(options.load, LoadedComponent);
                        // Set state.
                        _this.setState({
                            Component: LoadedComponent
                        }, options.onLoad);
                    }
                })
                    .catch(options.onError);
            }
        };
        return Async;
    }(external__react_["Component"]));
    return external__react_["forwardRef"](function (props, ref) { return (external__react_["createElement"](Async, tslib_es6["a" /* __assign */]({}, props, { forwardedRef: ref }))); });
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/assertNever.js
/**
 * AssertNever is a utility function that can be used for exhaustiveness checks in switch statements.
 *
 * @public
 */
function assertNever(x) {
    throw new Error('Unexpected object: ' + x);
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/autobind.js
/**
 * Autobind is a utility for binding methods in a class. This simplifies tagging methods as being "bound" to the this pointer
 * so that they can be used in scenarios that simply require a function callback.
 * @deprecated This has been deprecated in favor of using arrow function properties
 */
function autobind(
// tslint:disable-next-line:no-any
target, key, descriptor) {
    var fn = descriptor.value;
    var defining = false;
    return {
        configurable: true,
        get: function () {
            if (defining || (fn && this === fn.prototype) || this.hasOwnProperty(key)) {
                return fn;
            }
            // Bind method only once, and update the property to return the bound value from now on
            var fnBound = fn && fn.bind(this);
            defining = true;
            Object.defineProperty(this, key, {
                configurable: true,
                writable: true,
                enumerable: true,
                value: fnBound
            });
            defining = false;
            return fnBound;
        },
        // tslint:disable-next-line:no-any
        set: function (newValue) {
            Object.defineProperty(this, key, {
                configurable: true,
                writable: true,
                enumerable: true,
                value: newValue
            });
        }
    };
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/classNamesFunction.js

/**
 * Creates a getClassNames function which calls getStyles given the props, and injects them
 * into mergeStyleSets.
 */
function classNamesFunction() {
    // TODO: memoize.
    var getClassNames = function (styleFunctionOrObject, styleProps) {
        if (styleProps === void 0) { styleProps = {}; }
        // styleSet might be undefined if styleFunctionOrObject is undefined, but getStyles should never
        // ordinarily be undefined (it would hardly make any sense).
        // However, because we usually use `props.styles` as the argument to an invocation of this method, and
        // `props.styles` itself is defined as optional, this avoids the need to use `!` at all invocation points.
        if (styleFunctionOrObject === undefined) {
            return {};
        }
        var styleSet = styleFunctionOrObject && (typeof styleFunctionOrObject === 'function' ? styleFunctionOrObject(styleProps) : styleFunctionOrObject);
        return Object(lib["c" /* mergeStyleSets */])(styleSet);
    };
    return getClassNames;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/createRef.js
/**
 * @deprecated Use React.createRef.
 * May be removed in 6 months (Jan '19).
 */
function createRef() {
    var refObject = (function (element) {
        refObject.current = element;
    });
    // This getter is here to support the deprecated value prop on the refObject.
    Object.defineProperty(refObject, 'value', {
        get: function () {
            return refObject.current;
        }
    });
    refObject.current = null;
    return refObject;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/css.js
/**
 * Concatination helper, which can merge class names together. Skips over falsey values.
 *
 * @public
 */
function css() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var classes = [];
    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
        var arg = args_1[_a];
        if (arg) {
            if (typeof arg === 'string') {
                classes.push(arg);
            }
            else if (arg.hasOwnProperty('toString') && typeof arg.toString === 'function') {
                classes.push(arg.toString());
            }
            else {
                // tslint:disable-next-line:no-any
                for (var key in arg) {
                    // tslint:disable-next-line:no-any
                    if (arg[key]) {
                        classes.push(key);
                    }
                }
            }
        }
    }
    return classes.join(' ');
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/hoistStatics.js
/**
 * Allows you to hoist static functions in components.
 * Created for the purpose of fixing broken static functions in classes
 * that utilize decorators.
 *
 * @public
 * @param source - The object where the methods are hoisted from.
 * @param dest - The object to hoist the methods onto.
 * @returns The dest object with methods added
 */
function hoistStatics(source, dest) {
    for (var name_1 in source) {
        if (source.hasOwnProperty(name_1)) {
            // tslint:disable-next-line:no-any
            dest[name_1] = source[name_1];
        }
    }
    return dest;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/customizable.js






function customizable_customizable(scope, fields, concatStyles
// tslint:disable-next-line:no-any
) {
    // tslint:disable-next-line:no-shadowed-variable
    return function customizableFactory(
    // tslint:disable-next-line:no-any
    ComposedComponent
    // tslint:disable-next-line:no-any
    ) {
        var resultClass = (_a = /** @class */ (function (_super) {
                tslib_es6["c" /* __extends */](ComponentWithInjectedProps, _super);
                // tslint:disable-next-line:no-any
                function ComponentWithInjectedProps(props) {
                    var _this = _super.call(this, props) || this;
                    _this._onSettingChanged = _this._onSettingChanged.bind(_this);
                    return _this;
                }
                ComponentWithInjectedProps.prototype.componentDidMount = function () {
                    Customizations_Customizations.observe(this._onSettingChanged);
                };
                ComponentWithInjectedProps.prototype.componentWillUnmount = function () {
                    Customizations_Customizations.unobserve(this._onSettingChanged);
                };
                ComponentWithInjectedProps.prototype.render = function () {
                    var _this = this;
                    return (external__react_["createElement"](CustomizerContext.Consumer, null, function (context) {
                        var defaultProps = Customizations_Customizations.getSettings(fields, scope, context.customizations);
                        // tslint:disable-next-line:no-any
                        var componentProps = _this.props;
                        // If defaultProps.styles is a function, evaluate it before calling concatStyleSets
                        if (defaultProps.styles && typeof defaultProps.styles === 'function') {
                            defaultProps.styles = defaultProps.styles(tslib_es6["a" /* __assign */]({}, defaultProps, componentProps));
                        }
                        if (concatStyles) {
                            var mergedStyles = Object(lib["b" /* concatStyleSets */])(defaultProps.styles, componentProps.styles);
                            return external__react_["createElement"](ComposedComponent, tslib_es6["a" /* __assign */]({}, defaultProps, componentProps, { styles: mergedStyles }));
                        }
                        return external__react_["createElement"](ComposedComponent, tslib_es6["a" /* __assign */]({}, defaultProps, componentProps));
                    }));
                };
                ComponentWithInjectedProps.prototype._onSettingChanged = function () {
                    this.forceUpdate();
                };
                return ComponentWithInjectedProps;
            }(external__react_["Component"])),
            _a.displayName = 'Customized' + scope,
            _a);
        return hoistStatics(ComposedComponent, resultClass);
        var _a;
    };
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/focus.js
/* tslint:disable:no-string-literal */

var IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';
var IS_VISIBLE_ATTRIBUTE = 'data-is-visible';
var FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';
var FOCUSZONE_SUB_ATTRIBUTE = 'data-is-sub-focuszone';
/**
 * Gets the first focusable element.
 *
 * @public
 */
function getFirstFocusable(rootElement, currentElement, includeElementsInFocusZones) {
    return getNextElement(rootElement, currentElement, true /*checkNode*/, false /*suppressParentTraversal*/, false /*suppressChildTraversal*/, includeElementsInFocusZones);
}
/**
 * Gets the last focusable element.
 *
 * @public
 */
function getLastFocusable(rootElement, currentElement, includeElementsInFocusZones) {
    return getPreviousElement(rootElement, currentElement, true /*checkNode*/, false /*suppressParentTraversal*/, true /*traverseChildren*/, includeElementsInFocusZones);
}
/**
 * Gets the first tabbable element.
 * The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.
 * @param rootElement - The parent element to search beneath.
 * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,
 * and iteration continues forward.  Typical use passes rootElement.firstChild.
 * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.
 * @public
 */
function getFirstTabbable(rootElement, currentElement, includeElementsInFocusZones) {
    return getNextElement(rootElement, currentElement, true /*checkNode*/, false /*suppressParentTraversal*/, false /*suppressChildTraversal*/, includeElementsInFocusZones, false /*allowFocusRoot*/, true /*tabbable*/);
}
/**
 * Gets the last tabbable element.
 * The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.
 * @param rootElement - The parent element to search beneath.
 * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,
 * and iteration continues in reverse.  Typical use passes rootElement.lastChild.
 * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.
 * @public
 */
function getLastTabbable(rootElement, currentElement, includeElementsInFocusZones) {
    return getPreviousElement(rootElement, currentElement, true /*checkNode*/, false /*suppressParentTraversal*/, true /*traverseChildren*/, includeElementsInFocusZones, false /*allowFocusRoot*/, true /*tabbable*/);
}
/**
 * Attempts to focus the first focusable element that is a child or child's child of the rootElement.
 *
 * @public
 * @param rootElement - Element to start the search for a focusable child.
 * @returns True if focus was set, false if it was not.
 */
function focusFirstChild(rootElement) {
    var element = getNextElement(rootElement, rootElement, true, false, false, true);
    if (element) {
        focusAsync(element);
        return true;
    }
    return false;
}
/**
 * Traverse to find the previous element.
 * If tabbable is true, the element must have tabIndex != -1.
 *
 * @public
 */
function getPreviousElement(rootElement, currentElement, checkNode, suppressParentTraversal, traverseChildren, includeElementsInFocusZones, allowFocusRoot, tabbable) {
    if (!currentElement || (!allowFocusRoot && currentElement === rootElement)) {
        return null;
    }
    var isCurrentElementVisible = isElementVisible(currentElement);
    // Check its children.
    if (traverseChildren &&
        isCurrentElementVisible &&
        (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))) {
        var childMatch = getPreviousElement(rootElement, currentElement.lastElementChild, true, true, true, includeElementsInFocusZones, allowFocusRoot, tabbable);
        if (childMatch) {
            if ((tabbable && isElementTabbable(childMatch, true)) || !tabbable) {
                return childMatch;
            }
            var childMatchSiblingMatch = getPreviousElement(rootElement, childMatch.previousElementSibling, true, true, true, includeElementsInFocusZones, allowFocusRoot, tabbable);
            if (childMatchSiblingMatch) {
                return childMatchSiblingMatch;
            }
            var childMatchParent = childMatch.parentElement;
            // At this point if we have not found any potential matches
            // start looking at the rest of the subtree under the currentParent.
            // NOTE: We do not want to recurse here because doing so could
            // cause elements to get skipped.
            while (childMatchParent && childMatchParent !== currentElement) {
                var childMatchParentMatch = getPreviousElement(rootElement, childMatchParent.previousElementSibling, true, true, true, includeElementsInFocusZones, allowFocusRoot, tabbable);
                if (childMatchParentMatch) {
                    return childMatchParentMatch;
                }
                childMatchParent = childMatchParent.parentElement;
            }
        }
    }
    // Check the current node, if it's not the first traversal.
    if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement)) {
        return currentElement;
    }
    // Check its previous sibling.
    var siblingMatch = getPreviousElement(rootElement, currentElement.previousElementSibling, true, true, true, includeElementsInFocusZones, allowFocusRoot, tabbable);
    if (siblingMatch) {
        return siblingMatch;
    }
    // Check its parent.
    if (!suppressParentTraversal) {
        return getPreviousElement(rootElement, currentElement.parentElement, true, false, false, includeElementsInFocusZones, allowFocusRoot, tabbable);
    }
    return null;
}
/**
 * Traverse to find the next focusable element.
 * If tabbable is true, the element must have tabIndex != -1.
 *
 * @public
 */
function getNextElement(rootElement, currentElement, checkNode, suppressParentTraversal, suppressChildTraversal, includeElementsInFocusZones, allowFocusRoot, tabbable) {
    if (!currentElement || (currentElement === rootElement && suppressChildTraversal && !allowFocusRoot)) {
        return null;
    }
    var isCurrentElementVisible = isElementVisible(currentElement);
    // Check the current node, if it's not the first traversal.
    if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {
        return currentElement;
    }
    // Check its children.
    if (!suppressChildTraversal &&
        isCurrentElementVisible &&
        (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))) {
        var childMatch = getNextElement(rootElement, currentElement.firstElementChild, true, true, false, includeElementsInFocusZones, allowFocusRoot, tabbable);
        if (childMatch) {
            return childMatch;
        }
    }
    if (currentElement === rootElement) {
        return null;
    }
    // Check its sibling.
    var siblingMatch = getNextElement(rootElement, currentElement.nextElementSibling, true, true, false, includeElementsInFocusZones, allowFocusRoot, tabbable);
    if (siblingMatch) {
        return siblingMatch;
    }
    if (!suppressParentTraversal) {
        return getNextElement(rootElement, currentElement.parentElement, false, false, true, includeElementsInFocusZones, allowFocusRoot, tabbable);
    }
    return null;
}
/**
 * Determines if an element is visible.
 *
 * @public
 */
function isElementVisible(element) {
    // If the element is not valid, return false.
    if (!element || !element.getAttribute) {
        return false;
    }
    var visibilityAttribute = element.getAttribute(IS_VISIBLE_ATTRIBUTE);
    // If the element is explicitly marked with the visibility attribute, return that value as boolean.
    if (visibilityAttribute !== null && visibilityAttribute !== undefined) {
        return visibilityAttribute === 'true';
    }
    // Fallback to other methods of determining actual visibility.
    return (element.offsetHeight !== 0 ||
        element.offsetParent !== null ||
        // tslint:disable-next-line:no-any
        element.isVisible === true); // used as a workaround for testing.
}
/**
 * Determines if an element can receive focus programmatically or via a mouse click.
 * If checkTabIndex is true, additionally checks to ensure the element can be focused with the tab key, meaning tabIndex != -1.
 *
 * @public
 */
function isElementTabbable(element, checkTabIndex) {
    // If this element is null or is disabled, it is not considered tabbable.
    if (!element || element.disabled) {
        return false;
    }
    var tabIndex = 0;
    var tabIndexAttributeValue = null;
    if (element && element.getAttribute) {
        tabIndexAttributeValue = element.getAttribute('tabIndex');
        if (tabIndexAttributeValue) {
            tabIndex = parseInt(tabIndexAttributeValue, 10);
        }
    }
    var isFocusableAttribute = element.getAttribute ? element.getAttribute(IS_FOCUSABLE_ATTRIBUTE) : null;
    var isTabIndexSet = tabIndexAttributeValue !== null && tabIndex >= 0;
    var result = !!element &&
        isFocusableAttribute !== 'false' &&
        (element.tagName === 'A' ||
            element.tagName === 'BUTTON' ||
            element.tagName === 'INPUT' ||
            element.tagName === 'TEXTAREA' ||
            isFocusableAttribute === 'true' ||
            isTabIndexSet);
    return checkTabIndex ? tabIndex !== -1 && result : result;
}
/**
 * Determines if a given element is a focus zone.
 *
 * @public
 */
function isElementFocusZone(element) {
    return !!(element && element.getAttribute && !!element.getAttribute(FOCUSZONE_ID_ATTRIBUTE));
}
/**
 * Determines if a given element is a focus sub zone.
 *
 * @public
 */
function isElementFocusSubZone(element) {
    return !!(element && element.getAttribute && element.getAttribute(FOCUSZONE_SUB_ATTRIBUTE) === 'true');
}
/**
 * Determines if an element, or any of its children, contain focus.
 *
 * @public
 */
function doesElementContainFocus(element) {
    var document = getDocument(element);
    var currentActiveElement = document && document.activeElement;
    if (currentActiveElement && elementContains(element, currentActiveElement)) {
        return true;
    }
    return false;
}
/**
 * Determines if an, or any of its ancestors, sepcificies that it doesn't want focus to wrap
 * @param element - element to start searching from
 * @param noWrapDataAttribute - the no wrap data attribute to match (either)
 * @returns true if focus should wrap, false otherwise
 */
function shouldWrapFocus(element, noWrapDataAttribute) {
    return elementContainsAttribute(element, noWrapDataAttribute) === 'true' ? false : true;
}
var targetToFocusOnNextRepaint = undefined;
/**
 * Sets focus to an element asynchronously. The focus will be set at the next browser repaint,
 * meaning it won't cause any extra recalculations. If more than one focusAsync is called during one frame,
 * only the latest called focusAsync element will actually be focused
 * @param element - The element to focus
 */
function focusAsync(element) {
    if (element) {
        // An element was already queued to be focused, so replace that one with the new element
        if (targetToFocusOnNextRepaint) {
            targetToFocusOnNextRepaint = element;
            return;
        }
        targetToFocusOnNextRepaint = element;
        var win = getWindow(element);
        if (win) {
            // element.focus() is a no-op if the element is no longer in the DOM, meaning this is always safe
            win.requestAnimationFrame(function () {
                targetToFocusOnNextRepaint && targetToFocusOnNextRepaint.focus();
                // We are done focusing for this frame, so reset the queued focus element
                targetToFocusOnNextRepaint = undefined;
            });
        }
    }
}
/**
 * Finds the closest focusable element via an index path from a parent. See
 * `getElementIndexPath` for getting an index path from an element to a child.
 */
function getFocusableByIndexPath(parent, path) {
    var element = parent;
    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {
        var index = path_1[_i];
        var nextChild = element.children[Math.min(index, element.children.length - 1)];
        if (!nextChild) {
            break;
        }
        element = nextChild;
    }
    element =
        isElementTabbable(element) && isElementVisible(element)
            ? element
            : getNextElement(parent, element, true) || getPreviousElement(parent, element);
    return element;
}
/**
 * Finds the element index path from a parent element to a child element.
 *
 * If you had this node structure: "A has children [B, C] and C has child D",
 * the index path from A to D would be [1, 0], or `parent.chidren[1].children[0]`.
 */
function getElementIndexPath(fromElement, toElement) {
    var path = [];
    while (toElement && fromElement && toElement !== fromElement) {
        var parent_1 = getParent(toElement, true);
        if (parent_1 === null) {
            return [];
        }
        path.unshift(Array.prototype.indexOf.call(parent_1.children, toElement));
        toElement = parent_1;
    }
    return path;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/hoist.js
var REACT_LIFECYCLE_EXCLUSIONS = [
    'setState',
    'render',
    'componentWillMount',
    'UNSAFE_componentWillMount',
    'componentDidMount',
    'componentWillReceiveProps',
    'UNSAFE_componentWillReceiveProps',
    'shouldComponentUpdate',
    'componentWillUpdate',
    'getSnapshotBeforeUpdate',
    'UNSAFE_componentWillUpdate',
    'componentDidUpdate',
    'componentWillUnmount'
];
/**
 * Allows you to hoist methods, except those in an exclusion set from a source object into a destination object.
 *
 * @public
 * @param destination - The instance of the object to hoist the methods onto.
 * @param source - The instance of the object where the methods are hoisted from.
 * @param exclusions - (Optional) What methods to exclude from being hoisted.
 * @returns An array of names of methods that were hoisted.
 */
function hoistMethods(
// tslint:disable-next-line:no-any
destination, 
// tslint:disable-next-line:no-any
source, exclusions) {
    if (exclusions === void 0) { exclusions = REACT_LIFECYCLE_EXCLUSIONS; }
    var hoisted = [];
    var _loop_1 = function (methodName) {
        if (typeof source[methodName] === 'function' &&
            destination[methodName] === undefined &&
            (!exclusions || exclusions.indexOf(methodName) === -1)) {
            hoisted.push(methodName);
            /* tslint:disable:no-function-expression */
            destination[methodName] = function () {
                source[methodName].apply(source, arguments);
            };
            /* tslint:enable */
        }
    };
    for (var methodName in source) {
        _loop_1(methodName);
    }
    return hoisted;
}
/**
 * Provides a method for convenience to unhoist hoisted methods.
 *
 * @public
 * @param source - The source object upon which methods were hoisted.
 * @param methodNames - An array of method names to unhoist.
 */
// tslint:disable-next-line:no-any
function unhoistMethods(source, methodNames) {
    methodNames.forEach(function (methodName) { return delete source[methodName]; });
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/initials.js
/**
 * Regular expression matching characters to ignore when calculating the initials.
 * The first part matches characters within parenthesis, including the parenthesis.
 * The second part matches special ASCII characters except space, plus some unicode special characters.
 */
var UNWANTED_CHARS_REGEX = /\([^)]*\)|[\0-\u001F\!-/:-@\[-`\{-\u00BF\u0250-\u036F\uD800-\uFFFF]/g;
/**
 * Regular expression matching phone numbers. Applied after chars matching UNWANTED_CHARS_REGEX have been removed
 * and number has been trimmed for whitespaces
 */
var PHONENUMBER_REGEX = /^\d+[\d\s]*(:?ext|x|)\s*\d+$/i;
/** Regular expression matching one or more spaces. */
var MULTIPLE_WHITESPACES_REGEX = /\s+/g;
/**
 * Regular expression matching languages for which we currently don't support initials.
 * Arabic:   Arabic, Arabic Supplement, Arabic Extended-A.
 * Korean:   Hangul Jamo, Hangul Compatibility Jamo, Hangul Jamo Extended-A, Hangul Syllables, Hangul Jamo Extended-B.
 * Japanese: Hiragana, Katakana.
 * CJK:      CJK Unified Ideographs Extension A, CJK Unified Ideographs, CJK Compatibility Ideographs, CJK Unified Ideographs Extension B
 */
/* tslint:disable:max-line-length */
var UNSUPPORTED_TEXT_REGEX = /[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\u1100-\u11FF\u3130-\u318F\uA960-\uA97F\uAC00-\uD7AF\uD7B0-\uD7FF\u3040-\u309F\u30A0-\u30FF\u3400-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF]|[\uD840-\uD869][\uDC00-\uDED6]/;
/* tslint:enable:max-line-length */
function getInitialsLatin(displayName, isRtl) {
    var initials = '';
    var splits = displayName.split(' ');
    if (splits.length === 2) {
        initials += splits[0].charAt(0).toUpperCase();
        initials += splits[1].charAt(0).toUpperCase();
    }
    else if (splits.length === 3) {
        initials += splits[0].charAt(0).toUpperCase();
        initials += splits[2].charAt(0).toUpperCase();
    }
    else if (splits.length !== 0) {
        initials += splits[0].charAt(0).toUpperCase();
    }
    if (isRtl && initials.length > 1) {
        return initials.charAt(1) + initials.charAt(0);
    }
    return initials;
}
function cleanupDisplayName(displayName) {
    displayName = displayName.replace(UNWANTED_CHARS_REGEX, '');
    displayName = displayName.replace(MULTIPLE_WHITESPACES_REGEX, ' ');
    displayName = displayName.trim();
    return displayName;
}
/**
 * Get (up to 2 characters) initials based on display name of the persona.
 *
 * @public
 */
function getInitials(displayName, isRtl, allowPhoneInitials) {
    if (!displayName) {
        return '';
    }
    displayName = cleanupDisplayName(displayName);
    // For names containing CJK characters, and phone numbers, we don't display initials
    if (UNSUPPORTED_TEXT_REGEX.test(displayName) || (!allowPhoneInitials && PHONENUMBER_REGEX.test(displayName))) {
        return '';
    }
    return getInitialsLatin(displayName, isRtl);
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/localStorage.js
/**
 * Fetches an item from local storage without throwing an exception
 * @param key The key of the item to fetch from local storage
 */
function getItem(key) {
    var result = null;
    try {
        result = window.localStorage.getItem(key);
    }
    catch (e) {
        /* Eat the exception */
    }
    return result;
}
/**
 * Inserts an item into local storage without throwing an exception
 * @param key The key of the item to add to local storage
 * @param data The data to put into local storage
 */
function setItem(key, data) {
    try {
        window.localStorage.setItem(key, data);
    }
    catch (e) {
        /* Eat the exception */
    }
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/language.js


// Default to undefined so that we initialize on first read.
var _language;
/**
 * Gets the rtl state of the page (returns true if in rtl.)
 *
 * @public
 */
function getLanguage() {
    if (_language === undefined) {
        var doc = getDocument();
        var savedLanguage = getItem('language');
        if (savedLanguage !== null) {
            _language = savedLanguage;
        }
        if (_language === undefined && doc) {
            _language = doc.documentElement.getAttribute('lang');
        }
        if (_language === undefined) {
            _language = 'en';
        }
    }
    return _language;
}
/**
 * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)
 *
 * @public
 */
function setLanguage(language, avoidPersisting) {
    if (avoidPersisting === void 0) { avoidPersisting = false; }
    var doc = getDocument();
    if (doc) {
        doc.documentElement.setAttribute('lang', language);
    }
    if (!avoidPersisting) {
        setItem('language', language);
    }
    _language = language;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/math.js
/**
 * Determines the distance between two points.
 *
 * @public
 */
function getDistanceBetweenPoints(point1, point2) {
    var distance = Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));
    return distance;
}
/**
 * Produces a proportionally-scaled version of an input content size when fit to a bounding size.
 * Given a `contentSize` and a `boundsSize`, this function scales `contentSize` proportionally
 * using either `contain` or `cover` fit behaviors.
 * Use this function to pre-calculate the layout for the CSS `object-fit` and `background-fit` behaviors.
 * With `contain`, the output size must be the largest it can be while completely within the `boundsSize`.
 * With `cover`, the output size must be the smallest it can be while completely around the `boundsSize`.
 * By default, there is a `maxScale` value of 1, which prevents the `contentSize` from being scaled larger.
 *
 * @param options - the options for the bounds fit operation
 */
function fitContentToBounds(options) {
    var contentSize = options.contentSize, boundsSize = options.boundsSize, _a = options.mode, mode = _a === void 0 ? 'contain' : _a, _b = options.maxScale, maxScale = _b === void 0 ? 1 : _b;
    var contentAspectRatio = contentSize.width / contentSize.height;
    var boundsAspectRatio = boundsSize.width / boundsSize.height;
    var scale;
    if (mode === 'contain' ? contentAspectRatio > boundsAspectRatio : contentAspectRatio < boundsAspectRatio) {
        scale = boundsSize.width / contentSize.width;
    }
    else {
        scale = boundsSize.height / contentSize.height;
    }
    var finalScale = Math.min(maxScale, scale);
    return {
        width: contentSize.width * finalScale,
        height: contentSize.height * finalScale
    };
}
/**
 * Calculates a number's precision based on the number of trailing
 * zeros if the number does not have a decimal indicated by a negative
 * precision. Otherwise, it calculates the number of digits after
 * the decimal point indicated by a positive precision.
 * @param value - the value to determine the precision of
 */
function calculatePrecision(value) {
    /**
     * Group 1:
     * [1-9]([0]+$) matches trailing zeros
     * Group 2:
     * \.([0-9]*) matches all digits after a decimal point.
     */
    var groups = /[1-9]([0]+$)|\.([0-9]*)/.exec(String(value));
    if (!groups) {
        return 0;
    }
    if (groups[1]) {
        return -groups[1].length;
    }
    if (groups[2]) {
        return groups[2].length;
    }
    return 0;
}
/**
 * Rounds a number to a certain level of precision. Accepts negative precision.
 * @param value - The value that is being rounded.
 * @param precision - The number of decimal places to round the number to
 */
function precisionRound(value, precision, base) {
    if (base === void 0) { base = 10; }
    var exp = Math.pow(base, precision);
    return Math.round(value * exp) / exp;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/memoize.js

var stylesheet = lib["a" /* Stylesheet */].getInstance();
if (stylesheet && stylesheet.onReset) {
    lib["a" /* Stylesheet */].getInstance().onReset(resetMemoizations);
}
var _resetCounter = 0;
var _emptyObject = { empty: true };
var _dictionary = {};
var _weakMap = typeof WeakMap === 'undefined' ? null : WeakMap;
/**
 *  Test utility for providing a custom weakmap.
 *
 * @internal
 * */
function setMemoizeWeakMap(weakMap) {
    _weakMap = weakMap;
}
/**
 * Reset memoizations.
 */
function resetMemoizations() {
    _resetCounter++;
}
/**
 * Memoize decorator to be used on class methods. WARNING: the `this` reference
 * will be inaccessible within a memoized method, given that a cached method's `this`
 * would not be instance-specific.
 *
 * @public
 */
function memoize(target, key, descriptor) {
    // We bind to "null" to prevent people from inadvertently pulling values from "this",
    // rather than passing them in as input values which can be memoized.
    var fn = memoizeFunction(descriptor.value && descriptor.value.bind(null));
    return {
        configurable: true,
        get: function () {
            return fn;
        }
    };
}
/**
 * Memoizes a function; when you pass in the same parameters multiple times, it returns a cached result.
 * Be careful when passing in objects, you need to pass in the same INSTANCE for caching to work. Otherwise
 * it will grow the cache unnecessarily. Also avoid using default values that evaluate functions; passing in
 * undefined for a value and relying on a default function will execute it the first time, but will not
 * re-evaluate subsequent times which may have been unexpected.
 *
 * By default, the cache will reset after 100 permutations, to avoid abuse cases where the function is
 * unintendedly called with unique objects. Without a reset, the cache could grow infinitely, so we safeguard
 * by resetting. To override this behavior, pass a value of 0 to the maxCacheSize parameter.
 *
 * @public
 * @param cb - The function to memoize.
 * @param maxCacheSize - Max results to cache. If the cache exceeds this value, it will reset on the next call.
 * @returns A memoized version of the function.
 */
function memoizeFunction(cb, maxCacheSize) {
    if (maxCacheSize === void 0) { maxCacheSize = 100; }
    // Avoid breaking scenarios which don't have weak map.
    if (!_weakMap) {
        return cb;
    }
    var rootNode;
    var cacheSize = 0;
    var localResetCounter = _resetCounter;
    // tslint:disable-next-line:no-function-expression
    return function memoizedFunction() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var currentNode = rootNode;
        if (rootNode === undefined || localResetCounter !== _resetCounter || (maxCacheSize > 0 && cacheSize > maxCacheSize)) {
            rootNode = _createNode();
            cacheSize = 0;
            localResetCounter = _resetCounter;
        }
        currentNode = rootNode;
        // Traverse the tree until we find the match.
        for (var i = 0; i < args.length; i++) {
            var arg = _normalizeArg(args[i]);
            if (!currentNode.map.has(arg)) {
                currentNode.map.set(arg, _createNode());
            }
            currentNode = currentNode.map.get(arg);
        }
        if (!currentNode.hasOwnProperty('value')) {
            currentNode.value = cb.apply(void 0, args);
            cacheSize++;
        }
        return currentNode.value;
    };
}
function _normalizeArg(val) {
    if (!val) {
        return _emptyObject;
    }
    else if (typeof val === 'object' || typeof val === 'function') {
        return val;
    }
    else if (!_dictionary[val]) {
        _dictionary[val] = { val: val };
    }
    return _dictionary[val];
}
function _createNode() {
    return {
        map: _weakMap ? new _weakMap() : null
    };
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/merge.js
/**
 * Simple deep merge function. Takes all arguments and returns a deep copy of the objects merged
 * together in the order provided. If an object creates a circular reference, it will assign the
 * original reference.
 */
function merge(target) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
        var arg = args_1[_a];
        _merge(target || {}, arg);
    }
    return target;
}
/**
 * The _merge helper iterates through all props on source and assigns them to target.
 * When the value is an object, we will create a deep clone of the object. However if
 * there is a circular reference, the value will not be deep cloned and will persist
 * the reference.
 */
// tslint:disable-next-line:no-any
function _merge(target, source, circularReferences) {
    if (circularReferences === void 0) { circularReferences = []; }
    circularReferences.push(source);
    for (var name_1 in source) {
        if (source.hasOwnProperty(name_1)) {
            var value = source[name_1];
            if (typeof value === 'object') {
                var isCircularReference = circularReferences.indexOf(value) > -1;
                target[name_1] = isCircularReference ? value : _merge(target[name_1] || {}, value, circularReferences);
            }
            else {
                target[name_1] = value;
            }
        }
    }
    circularReferences.pop();
    return target;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/mobileDetector.js
/**
 * Returns true if and only if the user is on a iOS device.
 * Used to determine whether iOS-specific behavior should be applied.
 */
var isIOS = function () {
    if (!window || !window.navigator || !window.navigator.userAgent) {
        return false;
    }
    return /iPad|iPhone|iPod/i.test(window.navigator.userAgent);
};

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/osDetector.js
var isMacResult;
/**
 * Returns true if the user is on a Mac. Caches the result value.
 * @param reset - Reset the cached result value (mainly for testing).
 */
function isMac(reset) {
    if (typeof isMacResult === 'undefined' || reset) {
        var userAgent = typeof window !== 'undefined' && window.navigator.userAgent;
        isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;
    }
    return !!isMacResult;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/overflow.js
/**
 * Detects whether an element's content has horizontal overflow
 *
 * @public
 * @param element - Element to check for overflow
 * @returns True if element's content overflows
 */
function hasHorizontalOverflow(element) {
    return element.clientWidth < element.scrollWidth;
}
/**
 * Detects whether an element's content has vertical overflow
 *
 * @public
 * @param element - Element to check for overflow
 * @returns True if element's content overflows
 */
function hasVerticalOverflow(element) {
    return element.clientHeight < element.scrollHeight;
}
/**
 * Detects whether an element's content has overflow in any direction
 *
 * @public
 * @param element - Element to check for overflow
 * @returns True if element's content overflows
 */
function hasOverflow(element) {
    return hasHorizontalOverflow(element) || hasVerticalOverflow(element);
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/properties.js

/**
 * An array of events that are allowed on every html element type.
 *
 * @public
 */
var baseElementEvents = [
    'onCopy',
    'onCut',
    'onPaste',
    'onCompositionEnd',
    'onCompositionStart',
    'onCompositionUpdate',
    'onFocus',
    'onFocusCapture',
    'onBlur',
    'onBlurCapture',
    'onChange',
    'onInput',
    'onSubmit',
    'onLoad',
    'onError',
    'onKeyDown',
    'onKeyDownCapture',
    'onKeyPress',
    'onKeyUp',
    'onAbort',
    'onCanPlay',
    'onCanPlayThrough',
    'onDurationChange',
    'onEmptied',
    'onEncrypted',
    'onEnded',
    'onLoadedData',
    'onLoadedMetadata',
    'onLoadStart',
    'onPause',
    'onPlay',
    'onPlaying',
    'onProgress',
    'onRateChange',
    'onSeeked',
    'onSeeking',
    'onStalled',
    'onSuspend',
    'onTimeUpdate',
    'onVolumeChange',
    'onWaiting',
    'onClick',
    'onClickCapture',
    'onContextMenu',
    'onDoubleClick',
    'onDrag',
    'onDragEnd',
    'onDragEnter',
    'onDragExit',
    'onDragLeave',
    'onDragOver',
    'onDragStart',
    'onDrop',
    'onMouseDown',
    'onMouseDownCapture',
    'onMouseEnter',
    'onMouseLeave',
    'onMouseMove',
    'onMouseOut',
    'onMouseOver',
    'onMouseUp',
    'onMouseUpCapture',
    'onSelect',
    'onTouchCancel',
    'onTouchEnd',
    'onTouchMove',
    'onTouchStart',
    'onScroll',
    'onWheel'
];
/**
 * An array of element attributes which are allowed on every html element type.
 *
 * @public
 */
var baseElementProperties = [
    'defaultChecked',
    'defaultValue',
    'accept',
    'acceptCharset',
    'accessKey',
    'action',
    'allowFullScreen',
    'allowTransparency',
    'alt',
    'async',
    'autoComplete',
    'autoFocus',
    'autoPlay',
    'capture',
    'cellPadding',
    'cellSpacing',
    'charSet',
    'challenge',
    'checked',
    'children',
    'classID',
    'className',
    'cols',
    'colSpan',
    'content',
    'contentEditable',
    'contextMenu',
    'controls',
    'coords',
    'crossOrigin',
    'data',
    'dateTime',
    'default',
    'defer',
    'dir',
    'download',
    'draggable',
    'encType',
    'form',
    'formAction',
    'formEncType',
    'formMethod',
    'formNoValidate',
    'formTarget',
    'frameBorder',
    'headers',
    'height',
    'hidden',
    'high',
    'hrefLang',
    'htmlFor',
    'httpEquiv',
    'icon',
    'id',
    'inputMode',
    'integrity',
    'is',
    'keyParams',
    'keyType',
    'kind',
    'lang',
    'list',
    'loop',
    'low',
    'manifest',
    'marginHeight',
    'marginWidth',
    'max',
    'maxLength',
    'media',
    'mediaGroup',
    'method',
    'min',
    'minLength',
    'multiple',
    'muted',
    'name',
    'noValidate',
    'open',
    'optimum',
    'pattern',
    'placeholder',
    'poster',
    'preload',
    'radioGroup',
    'readOnly',
    'rel',
    'required',
    'role',
    'rows',
    'rowSpan',
    'sandbox',
    'scope',
    'scoped',
    'scrolling',
    'seamless',
    'selected',
    'shape',
    'size',
    'sizes',
    'span',
    'spellCheck',
    'src',
    'srcDoc',
    'srcLang',
    'srcSet',
    'start',
    'step',
    'style',
    'summary',
    'tabIndex',
    'title',
    'type',
    'useMap',
    'value',
    'width',
    'wmode',
    'wrap'
];
/**
 * An array of HTML element properties and events.
 *
 * @public
 */
var htmlElementProperties = baseElementProperties.concat(baseElementEvents);
/**
 * An array of A tag properties and events.
 *
 * @public
 */
var anchorProperties = htmlElementProperties.concat(['href', 'target']);
/**
 * An array of BUTTON tag properties and events.
 *
 * @public
 */
var buttonProperties = htmlElementProperties.concat(['disabled']);
/**
 * An array of DIV tag properties and events.
 *
 * @public
 */
var divProperties = htmlElementProperties.concat(['align', 'noWrap']);
/**
 * An array of INPUT tag properties and events.
 *
 * @public
 */
var inputProperties = buttonProperties;
/**
 * An array of TEXTAREA tag properties and events.
 *
 * @public
 */
var textAreaProperties = buttonProperties;
/**
 * An array of IMAGE tag properties and events.
 *
 * @public
 */
var imageProperties = divProperties;
/**
 * Gets native supported props for an html element provided the allowance set. Use one of the property
 * sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given
 * props set. Note that all data- and aria- prefixed attributes will be allowed.
 * NOTE: getNativeProps should always be applied first when adding props to a react component. The
 * non-native props should be applied second. This will prevent getNativeProps from overriding your custom props.
 * For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to
 * the component after an onClick function is added, then the getNativeProps onClick will override it.
 *
 * @public
 * @param props - The unfiltered input props
 * @param allowedPropsNames-  The array of allowed propnames.
 * @returns The filtered props
 */
function getNativeProps(props, allowedPropNames, excludedPropNames) {
    return Object(object["b" /* filteredAssign */])(function (propName) {
        return ((!excludedPropNames || excludedPropNames.indexOf(propName) < 0) &&
            (propName.indexOf('data-') === 0 || propName.indexOf('aria-') === 0 || allowedPropNames.indexOf(propName) >= 0));
    }, {}, props);
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/resources.js
var _baseUrl = '';
/** Sets the current base url used for fetching images. */
function getResourceUrl(url) {
    return _baseUrl + url;
}
/** Gets the current base url used for fetching images. */
function setBaseUrl(baseUrl) {
    _baseUrl = baseUrl;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/sessionStorage.js
/**
 * Fetches an item from session storage without throwing an exception
 * @param key The key of the item to fetch from session storage
 */
function sessionStorage_getItem(key) {
    var result = null;
    try {
        result = window.sessionStorage.getItem(key);
    }
    catch (e) {
        /* Eat the exception */
    }
    return result;
}
/**
 * Inserts an item into session storage without throwing an exception
 * @param key The key of the item to add to session storage
 * @param data The data to put into session storage
 */
function sessionStorage_setItem(key, data) {
    try {
        window.sessionStorage.setItem(key, data);
    }
    catch (e) {
        /* Eat the exception */
    }
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/rtl.js




var RTL_LOCAL_STORAGE_KEY = 'isRTL';
// Default to undefined so that we initialize on first read.
var _isRTL;
/**
 * Gets the rtl state of the page (returns true if in rtl.)
 */
function getRTL() {
    if (_isRTL === undefined) {
        // Fabric supports persisting the RTL setting between page refreshes via session storage
        var savedRTL = sessionStorage_getItem(RTL_LOCAL_STORAGE_KEY);
        if (savedRTL !== null) {
            _isRTL = savedRTL === '1';
            setRTL(_isRTL);
        }
        var doc = getDocument();
        if (_isRTL === undefined && doc) {
            _isRTL = ((doc.body && doc.body.getAttribute('dir')) || doc.documentElement.getAttribute('dir')) === 'rtl';
            Object(lib["e" /* setRTL */])(_isRTL);
        }
    }
    return !!_isRTL;
}
/**
 * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)
 */
function setRTL(isRTL, persistSetting) {
    if (persistSetting === void 0) { persistSetting = false; }
    var doc = getDocument();
    if (doc) {
        doc.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');
    }
    if (persistSetting) {
        sessionStorage_setItem(RTL_LOCAL_STORAGE_KEY, isRTL ? '1' : '0');
    }
    _isRTL = isRTL;
    Object(lib["e" /* setRTL */])(_isRTL);
}
/**
 * Returns the given key, but flips right/left arrows if necessary.
 */
function getRTLSafeKeyCode(key) {
    if (getRTL()) {
        if (key === KeyCodes.left) {
            key = KeyCodes.right;
        }
        else if (key === KeyCodes.right) {
            key = KeyCodes.left;
        }
    }
    return key;
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/string.js
// Regex that finds { and } so they can be removed on a lookup for string format
var FORMAT_ARGS_REGEX = /[\{\}]/g;
// Regex that finds {#} so it can be replaced by the arguments in string format
var FORMAT_REGEX = /\{\d+\}/g;
/**
 * String format method, used for scenarios where at runtime you
 * need to evaluate a formatted string given a tokenized string. This
 * usually only is needed in localization scenarios.

 * @example
 * ```tsx
 * "I love {0} every {1}".format("CXP")
 * ```
 * will result in a Debug Exception.
 *
 * @public
 */
// tslint:disable-next-line:no-any
function format(s) {
    'use strict';
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    var args = values;
    // Callback match function
    function replace_func(match) {
        // looks up in the args
        // tslint:disable-next-line:no-any
        var replacement = args[match.replace(FORMAT_ARGS_REGEX, '')];
        // catches undefined in nondebug and null in debug and nondebug
        if (replacement === null || replacement === undefined) {
            replacement = '';
        }
        return replacement;
    }
    return s.replace(FORMAT_REGEX, replace_func);
}

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/styled.js





var DefaultFields = ['theme', 'styles'];
/**
 * The styled HOC wrapper allows you to create a functional wrapper around a given component which will resolve
 * getStyles functional props, and mix customized props passed in using concatStyleSets.
 *
 * @example
 * ```tsx
 * export const Toggle = styled(
 *   ToggleBase,
 *   props => ({ root: { background: 'red' }})
 * );
 * ```
 * @param Component - The unstyled base component to render, which receives styles.
 * @param baseStyles - The styles which should be curried with the component.
 * @param getProps - A helper which provides default props.
 * @param customizable - An object which defines which props can be customized using the Customizer.
 */
function styled(Component, baseStyles, getProps, customizable) {
    customizable = customizable || { scope: '', fields: undefined };
    var scope = customizable.scope, _a = customizable.fields, fields = _a === void 0 ? DefaultFields : _a;
    var Wrapped = /** @class */ (function (_super) {
        tslib_es6["c" /* __extends */](Wrapped, _super);
        function Wrapped() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._inCustomizerContext = false;
            _this._onSettingsChanged = function () { return _this.forceUpdate(); };
            return _this;
        }
        Wrapped.prototype.render = function () {
            var _this = this;
            return (external__react_["createElement"](CustomizerContext.Consumer, null, function (context) {
                _this._inCustomizerContext = !!context.customizations.inCustomizerContext;
                var settings = Customizations_Customizations.getSettings(fields, scope, context.customizations);
                var customizedStyles = settings.styles, rest = tslib_es6["d" /* __rest */](settings, ["styles"]);
                var styles = function (styleProps) { return _resolve(styleProps, baseStyles, customizedStyles, _this.props.styles); };
                var additionalProps = getProps ? getProps(_this.props) : undefined;
                return external__react_["createElement"](Component, tslib_es6["a" /* __assign */]({}, rest, additionalProps, _this.props, { styles: styles }));
            }));
        };
        Wrapped.prototype.componentDidMount = function () {
            if (!this._inCustomizerContext) {
                Customizations_Customizations.observe(this._onSettingsChanged);
            }
        };
        Wrapped.prototype.componentWillUnmount = function () {
            if (!this._inCustomizerContext) {
                Customizations_Customizations.unobserve(this._onSettingsChanged);
            }
        };
        Wrapped.displayName = "Styled" + (Component.displayName || Component.name);
        return Wrapped;
    }(external__react_["Component"]));
    // This preserves backwards compatibility.
    // tslint:disable-next-line:no-any
    return Wrapped;
}
function _resolve(styleProps) {
    var allStyles = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        allStyles[_i - 1] = arguments[_i];
    }
    var result = [];
    for (var _a = 0, allStyles_1 = allStyles; _a < allStyles_1.length; _a++) {
        var styles = allStyles_1[_a];
        if (styles) {
            result.push(typeof styles === 'function' ? styles(styleProps) : styles);
        }
    }
    if (result.length) {
        // cliffkoh: I cannot figure out how to avoid the cast to any here.
        // It is something to do with the use of Omit in IStyleSet.
        // It might not be necessary once  Omit becomes part of lib.d.ts (when we remove our own Omit and rely on
        // the official version).
        // tslint:disable-next-line:no-any
        return lib["b" /* concatStyleSets */].apply(void 0, result);
    }
    return undefined;
}

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/set-version/1.1.3/node_modules/@uifabric/set-version/lib/index.js + 1 modules
var set_version_lib = __webpack_require__(39);

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/version.js
// @uifabric/utilities@6.29.4
// Do not modify this file, the file is generated as part of publish. The checked in version is a placeholder only.

Object(set_version_lib["a" /* setVersion */])('@uifabric/utilities', '6.29.4');

// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/@uifabric/utilities/6.29.4/react-dom@16.7.0+react@16.7.0/node_modules/@uifabric/utilities/lib/index.js













































// CONCATENATED MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/source-map-loader/0.2.4/node_modules/source-map-loader!C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/Slider/Slider.styles.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });


var GlobalClassNames = {
    root: 'ms-Slider',
    enabled: 'ms-Slider-enabled',
    disabled: 'ms-Slider-disabled',
    row: 'ms-Slider-row',
    column: 'ms-Slider-column',
    container: 'ms-Slider-container',
    slideBox: 'ms-Slider-slideBox',
    line: 'ms-Slider-line',
    thumb: 'ms-Slider-thumb',
    activeSection: 'ms-Slider-active',
    inactiveSection: 'ms-Slider-inactive',
    valueLabel: 'ms-Slider-value',
    showValue: 'ms-Slider-showValue',
    showTransitions: 'ms-Slider-showTransitions'
};
var getStyles = function (props) {
    var className = props.className, titleLabelClassName = props.titleLabelClassName, theme = props.theme;
    var classNames = Object(Styling["getGlobalClassNames"])(GlobalClassNames, theme);
    var slideBoxActiveSectionStyles = !props.disabled && {
        backgroundColor: theme.palette.themePrimary,
        selectors: (_a = {},
            _a[Styling["HighContrastSelector"]] = {
                backgroundColor: 'Highlight'
            },
            _a)
    };
    var slideBoxInactiveSectionStyles = !props.disabled && {
        backgroundColor: theme.palette.themeLight,
        selectors: (_b = {},
            _b[Styling["HighContrastSelector"]] = {
                borderColor: 'Highlight'
            },
            _b)
    };
    var slideBoxActiveThumbStyles = !props.disabled && {
        border: "2px solid " + theme.palette.themePrimary,
        selectors: (_c = {},
            _c[Styling["HighContrastSelector"]] = {
                borderColor: 'Highlight'
            },
            _c)
    };
    return {
        root: [
            classNames.root,
            theme.fonts.medium,
            {
                userSelect: 'none'
            },
            props.vertical && {
                marginRight: 8
            }
        ].concat([!props.disabled ? classNames.enabled : undefined], [props.disabled ? classNames.disabled : undefined], [!props.vertical ? classNames.row : undefined], [props.vertical ? classNames.column : undefined], [
            className
        ]),
        titleLabel: [
            {
                padding: 0
            },
            titleLabelClassName
        ],
        container: [
            classNames.container,
            {
                display: 'flex',
                flexWrap: 'nowrap',
                alignItems: 'center'
            },
            props.vertical && {
                flexDirection: 'column',
                height: '100%',
                textAlign: 'center',
                margin: '8px 0'
            }
        ],
        slideBox: [
            classNames.slideBox,
            Object(Styling["getFocusStyle"])(theme),
            {
                background: 'transparent',
                border: 'none',
                flexGrow: 1,
                lineHeight: 28,
                display: 'flex',
                alignItems: 'center',
                selectors: {
                    ':active $activeSection': slideBoxActiveSectionStyles,
                    ':hover $activeSection': slideBoxActiveSectionStyles,
                    ':active $inactiveSection': slideBoxInactiveSectionStyles,
                    ':hover $inactiveSection': slideBoxInactiveSectionStyles,
                    ':active $thumb': slideBoxActiveThumbStyles,
                    ':hover $thumb': slideBoxActiveThumbStyles,
                    $thumb: [
                        {
                            borderWidth: 2,
                            borderStyle: 'solid',
                            borderColor: theme.palette.neutralSecondary,
                            borderRadius: 10,
                            boxSizing: 'border-box',
                            background: theme.palette.white,
                            display: 'block',
                            width: 16,
                            height: 16,
                            position: 'absolute'
                        },
                        props.vertical
                            ? {
                                left: -6,
                                margin: '0 auto',
                                transform: 'translateY(8px)'
                            }
                            : {
                                top: -6,
                                transform: getRTL() ? 'translateX(50%)' : 'translateX(-50%)'
                            },
                        props.showTransitions && {
                            transition: "left " + Styling["AnimationVariables"].durationValue3 + " " + Styling["AnimationVariables"].easeFunction1
                        },
                        props.disabled && {
                            borderColor: theme.palette.neutralTertiaryAlt,
                            selectors: (_d = {},
                                _d[Styling["HighContrastSelector"]] = {
                                    borderColor: 'GrayText'
                                },
                                _d)
                        }
                    ]
                }
            },
            props.vertical
                ? {
                    height: '100%',
                    width: 28,
                    padding: '8px 0' // Make room for thumb at bottom of line
                }
                : {
                    height: 28,
                    width: 'auto',
                    padding: '0 8px' // Make room for thumb at ends of line
                }
        ].concat([props.showValue ? classNames.showValue : undefined], [props.showTransitions ? classNames.showTransitions : undefined]),
        thumb: [classNames.thumb],
        line: [
            classNames.line,
            {
                display: 'flex',
                position: 'relative',
                selectors: {
                    $lineContainer: [
                        {
                            borderRadius: 4,
                            boxSizing: 'border-box'
                        },
                        props.vertical
                            ? {
                                width: 4,
                                height: '100%'
                            }
                            : {
                                height: 4,
                                width: '100%'
                            }
                    ]
                }
            },
            props.vertical
                ? {
                    height: '100%',
                    width: 4,
                    margin: '0 auto',
                    flexDirection: 'column-reverse'
                }
                : {
                    width: '100%'
                }
        ],
        lineContainer: [{}],
        activeSection: [
            classNames.activeSection,
            {
                background: theme.palette.neutralSecondary,
                selectors: (_e = {},
                    _e[Styling["HighContrastSelector"]] = {
                        backgroundColor: 'WindowText'
                    },
                    _e)
            },
            props.showTransitions && {
                transition: "width " + Styling["AnimationVariables"].durationValue3 + " " + Styling["AnimationVariables"].easeFunction1
            },
            props.disabled && {
                background: theme.palette.neutralTertiaryAlt,
                selectors: (_f = {},
                    _f[Styling["HighContrastSelector"]] = {
                        backgroundColor: 'GrayText',
                        borderColor: 'GrayText'
                    },
                    _f)
            }
        ],
        inactiveSection: [
            classNames.inactiveSection,
            {
                background: theme.palette.neutralTertiaryAlt,
                selectors: (_g = {},
                    _g[Styling["HighContrastSelector"]] = {
                        border: '1px solid WindowText'
                    },
                    _g)
            },
            props.showTransitions && {
                transition: "width " + Styling["AnimationVariables"].durationValue3 + " " + Styling["AnimationVariables"].easeFunction1
            },
            props.disabled && {
                background: theme.palette.neutralLight,
                selectors: (_h = {},
                    _h[Styling["HighContrastSelector"]] = {
                        backgroundColor: 'GrayText',
                        borderColor: 'GrayText'
                    },
                    _h)
            }
        ],
        valueLabel: [
            classNames.valueLabel,
            {
                flexShrink: 1,
                width: 30,
                lineHeight: '1' // using a string here meaning it's relative to the size of the font
            },
            props.vertical
                ? {
                    margin: '0 auto',
                    whiteSpace: 'nowrap',
                    width: 40
                }
                : {
                    margin: '0 8px',
                    whiteSpace: 'nowrap',
                    width: 40
                }
        ]
    };
    var _a, _b, _c, _d, _e, _f, _g, _h;
};


/***/ }),
/* 127 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 128 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(130);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".propertyPaneGroupHeader_618d8195{background:0 0;border-top:1px solid;border-top-color:\"[theme:neutralLight, default: #eaeaea]\";border-bottom:1px solid;border-bottom-color:\"[theme:neutralLight, default: #eaeaea]\";cursor:pointer;line-height:40px;height:40px;width:100%;padding:0 8px}[dir=ltr] .propertyPaneGroupHeader_618d8195{border-right-width:1px}[dir=rtl] .propertyPaneGroupHeader_618d8195{border-left-width:1px}[dir=ltr] .propertyPaneGroupHeader_618d8195{border-right-style:solid}[dir=rtl] .propertyPaneGroupHeader_618d8195{border-left-style:solid}[dir=ltr] .propertyPaneGroupHeader_618d8195{border-right-color:\"[theme:neutralLight, default: #eaeaea]\"}[dir=rtl] .propertyPaneGroupHeader_618d8195{border-left-color:\"[theme:neutralLight, default: #eaeaea]\"}.propertyPaneGroup_618d8195:last-child .propertyPaneGroupHeader_618d8195{border-bottom:1px solid;border-bottom-color:\"[theme:neutralLight, default: #eaeaea]\"}.propertyPaneGroup_618d8195.isExpanded_618d8195 .propertyPaneGroupContent_618d8195{display:block}.propertyPaneGroupHeaderText_618d8195{vertical-align:top;line-height:38px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}[dir=ltr] .propertyPaneGroupHeaderText_618d8195{margin-right:20}[dir=rtl] .propertyPaneGroupHeaderText_618d8195{margin-left:20}.propertyPaneGroupHeaderIcon_618d8195{color:\"[theme:neutralSecondaryAlt, default: #767676]\";font-size:14px;line-height:38px;position:relative}[dir=ltr] .propertyPaneGroupHeaderIcon_618d8195{float:left}[dir=rtl] .propertyPaneGroupHeaderIcon_618d8195{float:right}[dir=ltr] .propertyPaneGroupHeaderIcon_618d8195{padding-right:4px}[dir=rtl] .propertyPaneGroupHeaderIcon_618d8195{padding-left:4px}.propertyPaneGroupHeaderWithAccordion_618d8195{padding:4px 0}.propertyPaneGroupHeaderNoAccordion_618d8195{height:40px;line-height:40px;padding-top:4px;width:300px;text-overflow:ellipsis;overflow:hidden}[dir=ltr] .propertyPaneGroupHeaderNoAccordion_618d8195{padding-right:0}[dir=rtl] .propertyPaneGroupHeaderNoAccordion_618d8195{padding-left:0}[dir=ltr] .propertyPaneGroupHeaderNoAccordion_618d8195{padding-left:20px}[dir=rtl] .propertyPaneGroupHeaderNoAccordion_618d8195{padding-right:20px}.propertyPaneGroupHeader_618d8195,.propertyPaneGroupHeaderNoAccordion_618d8195{font-size:14px;font-weight:400;font-weight:600;color:\"[theme:neutralPrimary, default: #333333]\"}[dir=ltr] .propertyPaneGroupHeader_618d8195,[dir=ltr] .propertyPaneGroupHeaderNoAccordion_618d8195{text-align:left}[dir=rtl] .propertyPaneGroupHeader_618d8195,[dir=rtl] .propertyPaneGroupHeaderNoAccordion_618d8195{text-align:right}.propertyPaneGroupContent_618d8195{padding:0 20px 16px}.propertyPaneGroupContent_618d8195 h2{font-size:15px;color:\"[theme:neutralPrimary, default: #333333]\";font-weight:600;font-weight:400}.propertyPaneGroupContent_618d8195 .ms-TextField.ms-TextField--multiline .ms-TextField-field{resize:vertical}.propertyPaneChoiceGroup_618d8195 .ms-Label{width:100%;-webkit-box-sizing:border-box;box-sizing:border-box}.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--icon,.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--image{height:auto;width:calc(33.33% - 4px)}.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--icon .ms-ChoiceField-field,.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--image .ms-ChoiceField-field{min-width:100%}.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--icon .ms-ChoiceField-innerField,.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--image .ms-ChoiceField-innerField{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;height:52px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--icon .ms-ChoiceField-labelWrapper,.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--image .ms-ChoiceField-labelWrapper{margin-bottom:8px}.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField-wrapper{width:100%}.propertyPaneChoiceGroup_618d8195 .themeableSvgPath{fill:\"[theme:neutralPrimary, default: #333333]\"}.propertyPaneChoiceGroup_618d8195 .ms-ChoiceFieldGroup-flexContainer{width:100%}.propertyPaneChoiceGroup_618d8195 .ms-ChoiceField--title .ms-Label{color:\"[theme:neutralPrimary, default: #333333]\"}.choiceGroupContainsIconOrImage_618d8195 .ms-ChoiceFieldGroup{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}.propertyPaneGroupField_618d8195{padding-top:4px;color:\"[theme:neutralPrimary, default: #333333]\";word-wrap:break-word}.propertyPaneGroupField_618d8195 a.ms-Link{font-size:14px;margin-bottom:16px}.propertyPaneGroupField_618d8195 button.ms-Checkbox{max-width:100%}.propertyPaneGroupField_618d8195 button.ms-Toggle-background{min-width:0}@media screen and (-ms-high-contrast:active){.propertyPaneGroupField_618d8195 a.ms-Link:hover{text-decoration:underline}}@media screen and (-ms-high-contrast:white-on-black){.propertyPaneGroupField_618d8195 a.ms-Link{color:#ff0}}", ""]);

// exports


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(132);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".root_11a02c31{display:block}.imageRoot_11a02c31{overflow:hidden}.image_11a02c31{display:block;opacity:0}.image_11a02c31.imageIsLoaded_11a02c31{opacity:1}.field_11a02c31:before{display:inline-block;background-color:\"[theme:white, default: #ffffff]\";border:1px solid;width:20px;height:20px;font-weight:400;top:-1px;-webkit-transition-property:border-color;transition-property:border-color;-webkit-transition-duration:.2s;transition-duration:.2s;-webkit-transition-timing-function:cubic-bezier(.4,0,.23,1);transition-timing-function:cubic-bezier(.4,0,.23,1);border-radius:50%}.field_11a02c31:after,.field_11a02c31:before{content:\"\";position:absolute;-webkit-box-sizing:border-box;box-sizing:border-box}.field_11a02c31:after{width:0;height:0;border-radius:50%;-webkit-transition-property:border-width;transition-property:border-width;-webkit-transition-duration:.15s;transition-duration:.15s;-webkit-transition-timing-function:cubic-bezier(.4,0,.23,1);transition-timing-function:cubic-bezier(.4,0,.23,1)}[dir=ltr] .field_11a02c31:after{left:10px}[dir=rtl] .field_11a02c31:after{right:10px}[dir=ltr] .field_11a02c31:after{right:0}[dir=rtl] .field_11a02c31:after{left:0}.field_11a02c31{display:inline-block;cursor:pointer;margin-top:0;position:relative;vertical-align:top;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.field_11a02c31:focus:before,.field_11a02c31:hover:before{border-color:\"[theme:neutralPrimary, default: #333333]\"}.field_11a02c31.fieldIsChecked_11a02c31:before{border:2px solid;border-color:\"[theme:themePrimary, default: #0078d4]\"}@media screen and (-ms-high-contrast:active){.field_11a02c31.fieldIsChecked_11a02c31:before{border-color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.field_11a02c31.fieldIsChecked_11a02c31:before{border-color:#37006e}}.field_11a02c31.fieldIsChecked_11a02c31:after{border:5px solid;border-color:\"[theme:themePrimary, default: #0078d4]\";top:4px;width:10px;height:10px}[dir=ltr] .field_11a02c31.fieldIsChecked_11a02c31:after{left:5px}[dir=rtl] .field_11a02c31.fieldIsChecked_11a02c31:after{right:5px}@media screen and (-ms-high-contrast:active){.field_11a02c31.fieldIsChecked_11a02c31:after{border-color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.field_11a02c31.fieldIsChecked_11a02c31:after{border-color:#37006e}}.field_11a02c31.fieldIsChecked_11a02c31:focus:before,.field_11a02c31.fieldIsChecked_11a02c31:hover:before{border-color:\"[theme:themeDarkAlt, default: #106ebe]\"}.field_11a02c31.fieldIsDisabled_11a02c31{cursor:default}.field_11a02c31.fieldIsDisabled_11a02c31:before{background-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\";border-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}@media screen and (-ms-high-contrast:active){.field_11a02c31.fieldIsDisabled_11a02c31:before{border-color:#0f0}}@media screen and (-ms-high-contrast:black-on-white){.field_11a02c31.fieldIsDisabled_11a02c31:before{border-color:#600000}}.field_11a02c31.fieldIsDisabled_11a02c31 .ms-Label{color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}@media screen and (-ms-high-contrast:active){.field_11a02c31.fieldIsDisabled_11a02c31 .ms-Label{color:#0f0}}@media screen and (-ms-high-contrast:black-on-white){.field_11a02c31.fieldIsDisabled_11a02c31 .ms-Label{color:#600000}}.field_11a02c31.fieldIsChecked_11a02c31.fieldIsDisabled_11a02c31:before{background-color:\"[theme:white, default: #ffffff]\";border-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}.field_11a02c31.fieldIsChecked_11a02c31.fieldIsDisabled_11a02c31:after{background-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}.fieldIsIcon_11a02c31,.fieldIsImage_11a02c31{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:0;margin:0 4px 4px 0;background-color:\"[theme:neutralLighter, default: #f4f4f4]\";display:inline-block;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;cursor:pointer;padding-top:22px;margin:0;text-align:center;-webkit-transition:all .2s ease;transition:all .2s ease;border:2px solid transparent}[dir=rtl] .fieldIsIcon_11a02c31,[dir=rtl] .fieldIsImage_11a02c31{margin:0 0 4px 4px}[dir=ltr] .fieldIsIcon_11a02c31,[dir=ltr] .fieldIsImage_11a02c31{padding-left:0}[dir=rtl] .fieldIsIcon_11a02c31,[dir=rtl] .fieldIsImage_11a02c31{padding-right:0}.fieldIsIcon_11a02c31.fieldIsDisabled_11a02c31,.fieldIsImage_11a02c31.fieldIsDisabled_11a02c31{cursor:default}.fieldIsIcon_11a02c31.fieldIsDisabled_11a02c31 .innerField_11a02c31,.fieldIsImage_11a02c31.fieldIsDisabled_11a02c31 .innerField_11a02c31{opacity:.25}.fieldIsIcon_11a02c31 .innerField_11a02c31,.fieldIsImage_11a02c31 .innerField_11a02c31{position:relative;padding:0 28px}.fieldIsIcon_11a02c31 .innerField_11a02c31 .imageWrapper_11a02c31,.fieldIsImage_11a02c31 .innerField_11a02c31 .imageWrapper_11a02c31{padding-bottom:2px}.fieldIsIcon_11a02c31 .innerField_11a02c31 .imageWrapper_11a02c31.imageWrapperIsHidden_11a02c31,.fieldIsImage_11a02c31 .innerField_11a02c31 .imageWrapper_11a02c31.imageWrapperIsHidden_11a02c31{position:absolute;left:0;top:0;width:100%;height:100%;overflow:hidden;opacity:0}.fieldIsIcon_11a02c31 .innerField_11a02c31 .imageWrapper_11a02c31 .ms-Image,.fieldIsImage_11a02c31 .innerField_11a02c31 .imageWrapper_11a02c31 .ms-Image{display:inline-block}.fieldIsIcon_11a02c31 .labelWrapper_11a02c31,.fieldIsImage_11a02c31 .labelWrapper_11a02c31{display:block;position:relative;margin:4px 0 0;height:32px;line-height:16px;overflow:hidden;white-space:pre-wrap;text-overflow:ellipsis;font-size:14px;font-weight:400}.fieldIsIcon_11a02c31 .labelWrapper_11a02c31 .ms-Label,.fieldIsImage_11a02c31 .labelWrapper_11a02c31 .ms-Label{padding:0}.fieldIsIcon_11a02c31:before,.fieldIsImage_11a02c31:before{top:3px;left:auto!important;opacity:0}[dir=ltr] .fieldIsIcon_11a02c31:before,[dir=ltr] .fieldIsImage_11a02c31:before{right:3px}[dir=rtl] .fieldIsIcon_11a02c31:before,[dir=rtl] .fieldIsImage_11a02c31:before{left:3px}.fieldIsIcon_11a02c31:after,.fieldIsImage_11a02c31:after{top:13px;left:auto!important}[dir=ltr] .fieldIsIcon_11a02c31:after,[dir=ltr] .fieldIsImage_11a02c31:after{right:13px}[dir=rtl] .fieldIsIcon_11a02c31:after,[dir=rtl] .fieldIsImage_11a02c31:after{left:13px}.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31):focus,.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31):hover,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31):focus,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31):hover{border-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31):focus:before,.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31):hover:before,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31):focus:before,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31):hover:before{opacity:1}.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31{border-color:\"[theme:themePrimary, default: #0078d4]\"}.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:before,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:before{opacity:1}.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:after,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:after{top:8px}[dir=ltr] .fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:after,[dir=ltr] .fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:after{right:8px}[dir=rtl] .fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:after,[dir=rtl] .fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:after{left:8px}.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:focus,.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:focus:before,.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:hover,.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:hover:before,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:focus,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:focus:before,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:hover,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:hover:before{border-color:\"[theme:themeDark, default: #005a9e]\"}.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:focus:after,.fieldIsIcon_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:hover:after,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:focus:after,.fieldIsImage_11a02c31:not(.fieldIsDisabled_11a02c31).fieldIsChecked_11a02c31:hover:after{background-color:\"[theme:themeDark, default: #005a9e]\"}.choiceFieldIsIcon_11a02c31{height:96px;width:96px}.choiceFieldIsIcon_11a02c31 .iconWrapper_11a02c31{font-size:32px;line-height:32px;height:32px}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31::-moz-focus-inner{border:0}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31{outline:transparent;position:relative}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31:after{content:\"\";position:absolute;top:1px;right:1px;bottom:1px;left:1px;pointer-events:none;border:1px solid}@media screen and (-ms-high-contrast:active){.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31::-moz-focus-inner{border:0}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31{outline:transparent;position:relative}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31:after{content:\"\";position:absolute;top:1px;right:1px;bottom:1px;left:1px;pointer-events:none;border:2px solid}}@media screen and (-ms-high-contrast:black-on-white){.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31::-moz-focus-inner{border:0}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31{outline:transparent;position:relative}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31:after{content:\"\";position:absolute;top:1px;right:1px;bottom:1px;left:1px;pointer-events:none;border:2px solid}}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31::-moz-focus-inner,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31::-moz-focus-inner{border:0}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31{outline:transparent;position:relative}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31:after,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31:after{content:\"\";position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none;border:1px solid}@media screen and (-ms-high-contrast:active){.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31::-moz-focus-inner,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31::-moz-focus-inner{border:0}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31{outline:transparent;position:relative}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31:after,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31:after{content:\"\";position:absolute;top:1px;right:1px;bottom:1px;left:1px;pointer-events:none;border:2px solid}}@media screen and (-ms-high-contrast:black-on-white){.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31::-moz-focus-inner,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31::-moz-focus-inner{border:0}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31{outline:transparent;position:relative}.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsIcon_11a02c31:after,.ms-Fabric.is-focusVisible .choiceFieldIsInFocus_11a02c31.choiceFieldIsImage_11a02c31:after{content:\"\";position:absolute;top:1px;right:1px;bottom:1px;left:1px;pointer-events:none;border:3px solid}}", ""]);

// exports


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(134);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".dynamicDataWidget_301a69e1{margin-bottom:12px}.entryLabel_301a69e1{margin-top:12px;padding:0}", ""]);

// exports


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(136);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".propertyPaneTitleBarBox_5f259751{width:100%;top:0;padding-bottom:20px;overflow-x:hidden}.propertyPaneTitleBar_5f259751{background:#3c3c3c;padding:10px 20px 12px;height:25px;display:-webkit-box;display:-ms-flexbox;display:flex}.propertyPanePageTitle_5f259751{font-size:21px;font-weight:100;color:#fff;line-height:1.2;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;height:26px}.propertyPaneClose_5f259751{background-color:transparent;border:none;color:#fff;cursor:pointer;font-size:20px;padding:0;min-width:0}[dir=ltr] .propertyPaneClose_5f259751{margin-left:auto}[dir=rtl] .propertyPaneClose_5f259751{margin-right:auto}.propertyPanePageContent_5f259751{position:absolute;width:100%;top:67px;bottom:0;overflow-x:hidden;overflow-y:auto}.propertyPanePageDescription_5f259751{font-size:15px;font-weight:400;padding:0 20px 16px;color:\"[theme:neutralPrimary, default: #333333]\";font-size:14px}", ""]);

// exports


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(138);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".alternateFieldsConnector_c69eeebc{font-size:21px;font-weight:700;cursor:pointer;margin-top:-20px;margin-bottom:-12px}[dir=ltr] .alternateFieldsConnector_c69eeebc{float:right}[dir=rtl] .alternateFieldsConnector_c69eeebc{float:left}[dir=ltr] .alternateFieldsConnector_c69eeebc{margin-right:20px}[dir=rtl] .alternateFieldsConnector_c69eeebc{margin-left:20px}[dir=ltr] .alternateFieldsConnector_c69eeebc{margin-left:0}[dir=rtl] .alternateFieldsConnector_c69eeebc{margin-right:0}.callout_c69eeebc{border-width:0}.removeConnectionButton_c69eeebc{position:relative;bottom:0}[dir=ltr] .removeConnectionButton_c69eeebc{margin-left:20px}[dir=rtl] .removeConnectionButton_c69eeebc{margin-right:20px}.clear_c69eeebc{clear:both}", ""]);

// exports


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(140);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".propertyPaneTitleBarBox_59cbcccc{width:100%;top:0;padding-bottom:20px;overflow-x:hidden}.propertyPaneTitleBar_59cbcccc{background:#3c3c3c;padding:10px 20px 12px;height:25px;display:-webkit-box;display:-ms-flexbox;display:flex}.propertyPanePageTitle_59cbcccc{font-size:21px;font-weight:100;color:#fff;line-height:1.2;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;height:26px}.propertyPaneClose_59cbcccc{background-color:transparent;border:none;color:#fff;cursor:pointer;font-size:20px;padding:0;min-width:0}[dir=ltr] .propertyPaneClose_59cbcccc{margin-left:auto}[dir=rtl] .propertyPaneClose_59cbcccc{margin-right:auto}", ""]);

// exports


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(142);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".propertyPaneFooter_de0728db{background-color:\"[theme:primaryBackground, default: #ffffff]\";position:absolute;bottom:0;left:0;padding:20px;right:0}.propertyPaneCommandButtonsBox_de0728db{padding-bottom:20px}.propertyPanePageNav_de0728db{-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.propertyPaneBackNavLink_de0728db,.propertyPaneNextNavLink_de0728db{background-color:transparent;border:0;color:\"[theme:neutralPrimary, default: #333333]\";font-size:14px;font-weight:400;height:32px;outline:0;padding:0}.propertyPaneBackNavLink_de0728db .propertyPaneBackArrow_de0728db,.propertyPaneBackNavLink_de0728db .propertyPaneNextArrow_de0728db,.propertyPaneNextNavLink_de0728db .propertyPaneBackArrow_de0728db,.propertyPaneNextNavLink_de0728db .propertyPaneNextArrow_de0728db{color:\"[theme:themePrimary, default: #0078d4]\";position:relative;top:2px}[dir=ltr] .propertyPaneBackNavLink_de0728db .propertyPaneBackArrow_de0728db,[dir=ltr] .propertyPaneNextNavLink_de0728db .propertyPaneBackArrow_de0728db{margin-right:4px}[dir=ltr] .propertyPaneBackNavLink_de0728db .propertyPaneNextArrow_de0728db,[dir=ltr] .propertyPaneNextNavLink_de0728db .propertyPaneNextArrow_de0728db,[dir=rtl] .propertyPaneBackNavLink_de0728db .propertyPaneBackArrow_de0728db,[dir=rtl] .propertyPaneNextNavLink_de0728db .propertyPaneBackArrow_de0728db{margin-left:4px}[dir=rtl] .propertyPaneBackNavLink_de0728db .propertyPaneNextArrow_de0728db,[dir=rtl] .propertyPaneNextNavLink_de0728db .propertyPaneNextArrow_de0728db{margin-right:4px}.propertyPaneBackNavLink_de0728db:disabled,.propertyPaneBackNavLink_de0728db:disabled .propertyPaneBackArrow_de0728db,.propertyPaneBackNavLink_de0728db:disabled .propertyPaneNextArrow_de0728db,.propertyPaneNextNavLink_de0728db:disabled,.propertyPaneNextNavLink_de0728db:disabled .propertyPaneBackArrow_de0728db,.propertyPaneNextNavLink_de0728db:disabled .propertyPaneNextArrow_de0728db{color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.propertyPaneBackNavLink_de0728db:not(:disabled):active,.propertyPaneBackNavLink_de0728db:not(:disabled):focus,.propertyPaneBackNavLink_de0728db:not(:disabled):hover,.propertyPaneNextNavLink_de0728db:not(:disabled):active,.propertyPaneNextNavLink_de0728db:not(:disabled):focus,.propertyPaneNextNavLink_de0728db:not(:disabled):hover{background-color:\"[theme:themeLight, default: #c7e0f4]\";color:\"[theme:themePrimary, default: #0078d4]\";cursor:pointer}.propertyPaneBackNavLink_de0728db:not(:disabled):active .propertyPaneBackArrow_de0728db,.propertyPaneBackNavLink_de0728db:not(:disabled):active .propertyPaneNextArrow_de0728db,.propertyPaneBackNavLink_de0728db:not(:disabled):focus .propertyPaneBackArrow_de0728db,.propertyPaneBackNavLink_de0728db:not(:disabled):focus .propertyPaneNextArrow_de0728db,.propertyPaneBackNavLink_de0728db:not(:disabled):hover .propertyPaneBackArrow_de0728db,.propertyPaneBackNavLink_de0728db:not(:disabled):hover .propertyPaneNextArrow_de0728db,.propertyPaneNextNavLink_de0728db:not(:disabled):active .propertyPaneBackArrow_de0728db,.propertyPaneNextNavLink_de0728db:not(:disabled):active .propertyPaneNextArrow_de0728db,.propertyPaneNextNavLink_de0728db:not(:disabled):focus .propertyPaneBackArrow_de0728db,.propertyPaneNextNavLink_de0728db:not(:disabled):focus .propertyPaneNextArrow_de0728db,.propertyPaneNextNavLink_de0728db:not(:disabled):hover .propertyPaneBackArrow_de0728db,.propertyPaneNextNavLink_de0728db:not(:disabled):hover .propertyPaneNextArrow_de0728db{color:\"[theme:themeDark, default: #005a9e]\"}.propertyPanePageOfPages_de0728db{margin-top:6px}", ""]);

// exports


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(144);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".propertyPane_74d58281{font-size:14px;font-weight:400;top:0;bottom:0;position:absolute;background-color:\"[theme:bodyBackground, default: #ffffff]\";width:340px;-webkit-font-smoothing:antialiased;max-width:100%}[dir=ltr] .propertyPane_74d58281{border-left-width:1px}[dir=rtl] .propertyPane_74d58281{border-right-width:1px}[dir=ltr] .propertyPane_74d58281{border-left-style:solid}[dir=rtl] .propertyPane_74d58281{border-right-style:solid}[dir=ltr] .propertyPane_74d58281{border-left-color:\"[theme:neutralLight, default: #eaeaea]\"}[dir=rtl] .propertyPane_74d58281{border-right-color:\"[theme:neutralLight, default: #eaeaea]\"}[dir=ltr] .propertyPane_74d58281{right:0}[dir=rtl] .propertyPane_74d58281{left:0}.propertyPaneDescription_74d58281{padding:0 20px;color:\"[theme:neutralPrimary, default: #333333]\";font-size:14px}.propertyPaneScreenReaderOnly_74d58281{position:absolute;text-indent:-9999px;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0}.twoRowFooter_74d58281{bottom:125px}.oneRowFooter_74d58281{bottom:72px}.overlay_74d58281{height:100%;width:340px;z-index:1}.spinner_74d58281{top:50%;position:relative}", ""]);

// exports


/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/tslib/1.9.3/node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(17);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(1);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: external "react-dom"
var external__react_dom_ = __webpack_require__(7);
var external__react_dom__default = /*#__PURE__*/__webpack_require__.n(external__react_dom_);

// EXTERNAL MODULE: external "@microsoft/decorators"
var decorators_ = __webpack_require__(14);
var decorators__default = /*#__PURE__*/__webpack_require__.n(decorators_);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// CONCATENATED MODULE: ./lib/utils/Compare.js
var Compare =  (function () {
    function Compare() {
    }
    Compare.shallowCompare = function (objA, objB) {
        if (objA === objB) {
            return true;
        }
        if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {
            return false;
        }
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        var keyLength = keysA.length;
        if (keyLength !== keysB.length) {
            return false;
        }
        var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
        for (var i = 0; i < keyLength; i++) {
            var key = keysA[i];
            if (!bHasOwnProperty(key)) {
                return false;
            }
            var valueA = objA[key];
            var valueB = objB[key];
            if (valueA !== valueB) {
                return false;
            }
        }
        return true;
    };
    return Compare;
}());
/* harmony default export */ var utils_Compare = (Compare);

// EXTERNAL MODULE: external "@microsoft/sp-lodash-subset"
var sp_lodash_subset_ = __webpack_require__(16);
var sp_lodash_subset__default = /*#__PURE__*/__webpack_require__.n(sp_lodash_subset_);

// EXTERNAL MODULE: external "@microsoft/office-ui-fabric-react-bundle"
var office_ui_fabric_react_bundle_ = __webpack_require__(13);
var office_ui_fabric_react_bundle__default = /*#__PURE__*/__webpack_require__.n(office_ui_fabric_react_bundle_);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/Toggle/Toggle.js
var Toggle = __webpack_require__(41);
var Toggle_default = /*#__PURE__*/__webpack_require__.n(Toggle);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.js
var TooltipHost = __webpack_require__(57);
var TooltipHost_default = /*#__PURE__*/__webpack_require__.n(TooltipHost);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.types.js
var TooltipHost_types = __webpack_require__(30);
var TooltipHost_types_default = /*#__PURE__*/__webpack_require__.n(TooltipHost_types);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/Checkbox/index.js
var Checkbox = __webpack_require__(32);
var Checkbox_default = /*#__PURE__*/__webpack_require__.n(Checkbox);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/ChoiceGroup/ChoiceGroup.js
var ChoiceGroup = __webpack_require__(77);
var ChoiceGroup_default = /*#__PURE__*/__webpack_require__.n(ChoiceGroup);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.js
var Dropdown = __webpack_require__(24);
var Dropdown_default = /*#__PURE__*/__webpack_require__.n(Dropdown);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.types.js
var Dropdown_types = __webpack_require__(27);
var Dropdown_types_default = /*#__PURE__*/__webpack_require__.n(Dropdown_types);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/components/SpinButton/SpinButton.js
var SpinButton = __webpack_require__(106);
var SpinButton_default = /*#__PURE__*/__webpack_require__.n(SpinButton);

// EXTERNAL MODULE: C:/agent/1/_work/7/s/common/temp/node_modules/.onedrive.pkgs.visualstudio.com/office-ui-fabric-react/6.143.0/react-dom@16.7.0+react@16.7.0/node_modules/office-ui-fabric-react/lib/Slider.js
var Slider = __webpack_require__(118);
var Slider_default = /*#__PURE__*/__webpack_require__.n(Slider);

// EXTERNAL MODULE: external "@microsoft/sp-component-base"
var sp_component_base_ = __webpack_require__(15);
var sp_component_base__default = /*#__PURE__*/__webpack_require__.n(sp_component_base_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(6);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: ./lib/propertyPaneFields/propertyPaneButton/IPropertyPaneButton.js
var IPropertyPaneButton = __webpack_require__(8);

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneCustomField/PropertyPaneCustomFieldHost.js




var CUSTOMFIELD_TARGETPROPERTY_PREFIX = '__CustomField_';
var PropertyPaneCustomFieldHost_PropertyPaneCustomFieldHost =  (function (_super) {
    tslib_es6["c" /* __extends */](PropertyPaneCustomFieldHost, _super);
    function PropertyPaneCustomFieldHost() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PropertyPaneCustomFieldHost.prototype.componentDidMount = function () {
        this._domElement = external__react_dom_["findDOMNode"](this);
        this.props.onRender(this._domElement, this.props.context, this._onChangedCallback.bind(this));
    };
    PropertyPaneCustomFieldHost.prototype.componentDidUpdate = function () {
        if (this._domElement) {
            this.props.onRender(this._domElement, this.props.context, this._onChangedCallback.bind(this));
        }
    };
    PropertyPaneCustomFieldHost.prototype.componentWillUnmount = function () {
        if (this.props.onDispose && this._domElement) {
            this.props.onDispose(this._domElement, this.props.context);
            var didUnmount = external__react_dom_["unmountComponentAtNode"](this._domElement);
            this._domElement = undefined;
            var logEntry = new sp_diagnostics_["_LogEntry"](PropertyPaneCustomFieldHost._logSource.id, 'TryUnmountReactComponent', sp_diagnostics_["_LogType"].Event, {
                didUnmount: didUnmount.toString()
            });
            sp_diagnostics_["_EngagementLogger"].logEventWithLogEntry(logEntry);
        }
    };
    PropertyPaneCustomFieldHost.prototype.render = function () {
        return (external__react_["createElement"]("div", { className: 'ms-CustomFieldHost' }));
    };
    PropertyPaneCustomFieldHost.prototype._onChangedCallback = function (targetProperty, value) {
        if (!targetProperty) {
            targetProperty = CUSTOMFIELD_TARGETPROPERTY_PREFIX + this.props.key;
            value = undefined;
        }
        this.props.onChanged(targetProperty, value);
    };
    PropertyPaneCustomFieldHost._logSource = sp_diagnostics_["_LogSource"].create('PropertyPaneCustomFieldHost');
    return PropertyPaneCustomFieldHost;
}(external__react_["Component"]));
/* harmony default export */ var propertyPaneCustomField_PropertyPaneCustomFieldHost = (PropertyPaneCustomFieldHost_PropertyPaneCustomFieldHost);

// EXTERNAL MODULE: ./lib/propertyPaneFields/propertyPaneField/IPropertyPaneField.js
var IPropertyPaneField = __webpack_require__(0);

// CONCATENATED MODULE: ./lib/propertyPaneGroup/PropertyPaneGroup.module.scss.js
__webpack_require__(129);
var styles = {
    propertyPaneGroupHeader: 'propertyPaneGroupHeader_618d8195',
    propertyPaneGroup: 'propertyPaneGroup_618d8195',
    isExpanded: 'isExpanded_618d8195',
    propertyPaneGroupContent: 'propertyPaneGroupContent_618d8195',
    propertyPaneGroupHeaderText: 'propertyPaneGroupHeaderText_618d8195',
    propertyPaneGroupHeaderIcon: 'propertyPaneGroupHeaderIcon_618d8195',
    propertyPaneGroupHeaderWithAccordion: 'propertyPaneGroupHeaderWithAccordion_618d8195',
    propertyPaneGroupHeaderNoAccordion: 'propertyPaneGroupHeaderNoAccordion_618d8195',
    propertyPaneChoiceGroup: 'propertyPaneChoiceGroup_618d8195',
    choiceGroupContainsIconOrImage: 'choiceGroupContainsIconOrImage_618d8195',
    propertyPaneGroupField: 'propertyPaneGroupField_618d8195',
};
/* harmony default export */ var PropertyPaneGroup_module_scss = (styles);

// EXTERNAL MODULE: ./lib/loc/Strings.resx.js
var Strings_resx = __webpack_require__(2);

// CONCATENATED MODULE: ./lib/propertyPaneGroup/PropertyPaneChoiceGroup.module.scss.js
__webpack_require__(131);
var PropertyPaneChoiceGroup_module_scss_styles = {
    root: 'root_11a02c31',
    imageRoot: 'imageRoot_11a02c31',
    image: 'image_11a02c31',
    imageIsLoaded: 'imageIsLoaded_11a02c31',
    field: 'field_11a02c31',
    fieldIsChecked: 'fieldIsChecked_11a02c31',
    fieldIsDisabled: 'fieldIsDisabled_11a02c31',
    fieldIsImage: 'fieldIsImage_11a02c31',
    fieldIsIcon: 'fieldIsIcon_11a02c31',
    innerField: 'innerField_11a02c31',
    imageWrapper: 'imageWrapper_11a02c31',
    imageWrapperIsHidden: 'imageWrapperIsHidden_11a02c31',
    labelWrapper: 'labelWrapper_11a02c31',
    choiceFieldIsIcon: 'choiceFieldIsIcon_11a02c31',
    iconWrapper: 'iconWrapper_11a02c31',
    choiceFieldIsInFocus: 'choiceFieldIsInFocus_11a02c31',
    choiceFieldIsImage: 'choiceFieldIsImage_11a02c31',
};
/* harmony default export */ var PropertyPaneChoiceGroup_module_scss = (PropertyPaneChoiceGroup_module_scss_styles);

// CONCATENATED MODULE: ./lib/propertyPaneGroup/PropertyPaneGroupHelper.js




function generateGroupFieldKey(keys, groupField) {
    var key = '';
    if (groupField.type === IPropertyPaneField["a" /* PropertyPaneFieldType */].Custom) {
        sp_core_library_["Validate"].isNonemptyString(groupField.properties.key, 'Custom field key');
        var customField = groupField;
        key = customField.type + "-" + customField.properties.key;
    }
    else { 
        key = groupField.type + "-" + (groupField.targetProperty || '');
    }
    var keyIndex = keys[key] || 0;
    keys[key] = keyIndex + 1;
    key += "-" + keyIndex;
    return key;
}
function getFixedUpPropValue(propertyPaneField, properties, dynamicConfiguration) {
    var fixedUpPropValue = sp_lodash_subset_["get"](properties, propertyPaneField.targetProperty);
    if (propertyPaneField.type === IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicFieldSet) { 
        var entries_1 = [];
        propertyPaneField.properties.fields.forEach(function (field) {
            var propValue = sp_lodash_subset_["get"](properties, field.targetProperty); 
            entries_1.push({
                targetProperty: field.targetProperty,
                value: getFixedUpDynamicProperty(dynamicConfiguration, propValue),
                properties: field.properties
            });
        });
        fixedUpPropValue = entries_1;
    }
    else if (propertyPaneField.type === IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField) { 
        var entry = {
            targetProperty: propertyPaneField.targetProperty,
            value: getFixedUpDynamicProperty(dynamicConfiguration, fixedUpPropValue),
            properties: propertyPaneField.properties
        };
        fixedUpPropValue = entry;
    }
    else { 
        if (fixedUpPropValue instanceof sp_component_base_["DynamicProperty"]) {
            fixedUpPropValue = fixedUpPropValue.tryGetValue(); 
        }
    }
    return fixedUpPropValue;
}
function getFixedUpDynamicProperty(dynamicConfiguration, propValue 
) {
    var isDynamicProperty = (propValue instanceof sp_component_base_["DynamicProperty"]);
    if (!isDynamicProperty) {
        var tempPropValue = propValue; 
        propValue = new sp_component_base_["DynamicProperty"](dynamicConfiguration.dynamicDataProvider, dynamicConfiguration.defaultCallback);
        propValue.setValue(tempPropValue); 
    }
    return propValue;
}

// CONCATENATED MODULE: ./lib/propertyPaneDynamicData/DynamicDataWidget.module.scss.js
__webpack_require__(133);
var DynamicDataWidget_module_scss_styles = {
    dynamicDataWidget: 'dynamicDataWidget_301a69e1',
    entryLabel: 'entryLabel_301a69e1',
};
/* harmony default export */ var DynamicDataWidget_module_scss = (DynamicDataWidget_module_scss_styles);

// CONCATENATED MODULE: ./lib/propertyPaneDynamicData/dynamicDataWidgetEntry/DynamicDataWidgetEntry.js







var MAX_PROPERTY_VALUE_DEPTH = 2;
var DynamicDataWidgetEntry_DynamicDataWidgetEntry =  (function (_super) {
    tslib_es6["c" /* __extends */](DynamicDataWidgetEntry, _super);
    function DynamicDataWidgetEntry(props) {
        var _this = _super.call(this, props) || this;
        _this._selectedSubPropertyText = '';
        _this.state = {
            selectedSubPropertyPath: _this.props.value._getPropertyPath(),
            selectedSubPropertyText: undefined
        };
        _this._updateReference();
        return _this;
    }
    DynamicDataWidgetEntry.prototype.componentWillReceiveProps = function (newProps) {
        var _this = this;
        if (this.props.selectedSource.id !== newProps.selectedSource.id ||
            this.props.selectedPropertyId !== newProps.selectedPropertyId) {
            this.setState({
                selectedSubPropertyText: '',
                selectedSubPropertyPath: ''
            }, function () {
                _this._updateReference();
            });
        }
    };
    DynamicDataWidgetEntry.prototype.render = function () {
        var selectedPropertyId = this.props.selectedPropertyId;
        var selectedSubPropertyPath = this.state.selectedSubPropertyPath;
        var dropDowns = [];
        if (selectedPropertyId) {
            var level = 0;
            var currentPropertyPath = selectedPropertyId;
            var subProperties = selectedSubPropertyPath ? selectedSubPropertyPath.split('.') : [];
            var maxDepth = this._getMaxSubPropertyDepth();
            while (level < maxDepth && currentPropertyPath && subProperties) {
                dropDowns.push(this._getDropdownForSubProperty(level, currentPropertyPath, subProperties[level]));
                currentPropertyPath = subProperties[level] ? currentPropertyPath + '.' + subProperties[level] : '';
                level++;
            }
        }
        return (external__react_["createElement"]("div", null, dropDowns));
    };
    DynamicDataWidgetEntry.prototype._getDropdownForSubProperty = function (level, propertyPath, selectedKey) {
        var key = this.props.parentKey + 'sub-property' + level;
        selectedKey = selectedKey && selectedKey.split(sp_component_base_["DynamicDataProvider"]._jsonPathArrayRegex)[0];
        var options = this._getDropdownOptions(this._getSubPropertyValueObject(propertyPath), propertyPath, false, selectedKey);
        var selectedText = (level === 0) ?
            this.props.selectedPropertyText :
            (this.state.selectedSubPropertyText || this._selectedSubPropertyText);
        return (external__react_["createElement"]("div", { key: key }, (options.length > 0) &&
            external__react_["createElement"](Dropdown["Dropdown"], { label: sp_core_library_["Text"].format(Strings_resx["a" /* default */].DynamicDataPropertiesDropdownLabel, selectedText), onChanged: this._onSubPropertySelectionChange.bind(this, level), options: options, selectedKey: selectedKey || '' })));
    };
    DynamicDataWidgetEntry.prototype._onSubPropertySelectionChange = function (level, option) {
        var _this = this;
        var _a = this.state, selectedSubPropertyPath = _a.selectedSubPropertyPath, selectedSubPropertyText = _a.selectedSubPropertyText;
        var selectedKey = option.key;
        var paths = selectedSubPropertyPath ? selectedSubPropertyPath.split('.') : [];
        selectedSubPropertyPath = '';
        for (var i = 0; i < level; i++) {
            selectedSubPropertyPath += paths[i] + '.';
        }
        selectedSubPropertyPath = selectedKey ?
            selectedSubPropertyPath + selectedKey : selectedSubPropertyPath.slice(0, -1); 
        selectedSubPropertyText = level === 0 ?
            option.text : selectedSubPropertyText;
        this.setState({
            selectedSubPropertyText: selectedSubPropertyText,
            selectedSubPropertyPath: selectedSubPropertyPath
        }, function () {
            _this._updateReference();
        });
    };
    DynamicDataWidgetEntry.prototype._getDropdownOptions = function (propValue, 
    propertyPath, recursiveCall, selectedKey) {
        var _this = this;
        var options = [];
        if (typeof propValue === 'object') {
            if (Array.isArray(propValue)) { 
                options = this._getDropdownOptions(propValue[0], propertyPath, true, selectedKey);
            }
            else if (propValue instanceof Set) {
            }
            else if (propValue instanceof Map) {
                propValue.forEach(function (value, key) {
                    options.push(_this._getDropdownOption(propertyPath, key, selectedKey));
                });
            }
            else { 
                Object.keys(propValue).forEach(function (key) {
                    options.push(_this._getDropdownOption(propertyPath, key, selectedKey));
                });
            }
            if (!recursiveCall && options.length > 1) {
                options.unshift({ key: '', text: '' });
            }
        }
        return options;
    };
    DynamicDataWidgetEntry.prototype._getDropdownOption = function (propertyPath, key, selectedKey) {
        if (key === selectedKey) {
            this._selectedSubPropertyText = key;
        }
        return {
            key: key,
            text: this._getOptionText(propertyPath, key) || key
        };
    };
    DynamicDataWidgetEntry.prototype._getOptionText = function (propertyPath, key) {
        if (this._currentAnnotatedPropertyValue && this._currentAnnotatedPropertyValue.metadata) {
            var subPaths = propertyPath.split('.').slice(1);
            var metadata = this._currentAnnotatedPropertyValue.metadata;
            for (var _i = 0, subPaths_1 = subPaths; _i < subPaths_1.length; _i++) {
                var subPath = subPaths_1[_i];
                if (metadata && metadata.hasOwnProperty(subPath)) {
                    if (key === subPath) {
                        return metadata[subPath].title;
                    }
                    metadata = metadata[subPath].metadata;
                }
                else {
                    return undefined;
                }
            }
            if (metadata && metadata.hasOwnProperty(key)) {
                return metadata[key].title;
            }
        }
        else {
            return undefined;
        }
    };
    DynamicDataWidgetEntry.prototype._updateReference = function () {
        if (this.props.selectedPropertyId) {
            var reference = this.props.selectedSource.id + ':' + this.props.selectedPropertyId;
            if (this._isSelectedPropertyValueAnArray()) {
                reference += '[*]';
            }
            if (this.state.selectedSubPropertyPath) {
                var subPropertyPath = this._getSubPropertyPath();
                if (subPropertyPath) {
                    reference += ':' + subPropertyPath;
                }
            }
            this.props.value.setReference(reference);
            this.props.onChange(this.props.targetProperty, this.props.value);
        }
    };
    DynamicDataWidgetEntry.prototype._getMaxSubPropertyDepth = function () {
        var propertyValueDepth = this.props.propertyValueDepth;
        var maxDepth = MAX_PROPERTY_VALUE_DEPTH;
        if (propertyValueDepth !== undefined) {
            if (propertyValueDepth >= 0 && propertyValueDepth < 2) {
                maxDepth = propertyValueDepth;
            }
            else {
                sp_core_library_["Log"].warn('propertyValueDepth', sp_core_library_["Text"].format(Strings_resx["a" /* default */].InvalidPropertyValueDepthWarning, 'propertyValueDepth', 0, 2));
            }
        }
        return maxDepth;
    };
    DynamicDataWidgetEntry.prototype._getSubPropertyValueObject = function (propertyPath) {
        var subPropertyValueObject; 
        var subPaths = propertyPath.split('.');
        var property = subPaths.shift();
        this._currentAnnotatedPropertyValue =
            this.props.selectedSource.getAnnotatedPropertyValue(property); 
        subPropertyValueObject = this._currentAnnotatedPropertyValue.sampleValue;
        if (typeof subPropertyValueObject === 'object') {
            for (var _i = 0, subPaths_2 = subPaths; _i < subPaths_2.length; _i++) {
                var subPath = subPaths_2[_i];
                subPath = subPath.split(sp_component_base_["DynamicDataProvider"]._jsonPathArrayRegex)[0];
                while (Array.isArray(subPropertyValueObject)) {
                    subPropertyValueObject = subPropertyValueObject[0];
                }
                if (typeof subPropertyValueObject === 'object') {
                    if (subPropertyValueObject.hasOwnProperty(subPath)) {
                        subPropertyValueObject = subPropertyValueObject[subPath];
                    }
                }
            }
        }
        return subPropertyValueObject;
    };
    DynamicDataWidgetEntry.prototype._isSelectedPropertyValueAnArray = function () {
        var _a = this.props, selectedSource = _a.selectedSource, selectedPropertyId = _a.selectedPropertyId;
        var sampleValue = selectedSource.getAnnotatedPropertyValue(selectedPropertyId).sampleValue;
        return Array.isArray(sampleValue);
    };
    DynamicDataWidgetEntry.prototype._getSubPropertyPath = function () {
        var _a = this.props, selectedSource = _a.selectedSource, selectedPropertyId = _a.selectedPropertyId;
        var subPropertyReferencePath = '';
        var subPropertyPaths = this.state.selectedSubPropertyPath.split('.');
        var propertyValueObject = selectedSource.getAnnotatedPropertyValue(selectedPropertyId).sampleValue;
        subPropertyPaths.forEach(function (subPropertyPath) {
            subPropertyPath = subPropertyPath.split(sp_component_base_["DynamicDataProvider"]._jsonPathArrayRegex)[0];
            if (propertyValueObject) {
                while (Array.isArray(propertyValueObject) && propertyValueObject.length) {
                    propertyValueObject = propertyValueObject[0];
                }
                if (propertyValueObject.hasOwnProperty(subPropertyPath)) { 
                    subPropertyReferencePath += subPropertyPath;
                    var subPropertyValueObject = propertyValueObject[subPropertyPath]; 
                    if (Array.isArray(subPropertyValueObject)) {
                        subPropertyReferencePath += '[*]';
                    }
                    subPropertyReferencePath += '.';
                    propertyValueObject = subPropertyValueObject;
                }
                else {
                    propertyValueObject = undefined;
                }
            }
        });
        return subPropertyReferencePath.replace(/\.$/, '');
    };
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], DynamicDataWidgetEntry.prototype, "_onSubPropertySelectionChange", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], DynamicDataWidgetEntry.prototype, "_getDropdownOption", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], DynamicDataWidgetEntry.prototype, "_getOptionText", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], DynamicDataWidgetEntry.prototype, "_updateReference", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], DynamicDataWidgetEntry.prototype, "_getMaxSubPropertyDepth", null);
    return DynamicDataWidgetEntry;
}(external__react_["Component"]));
/* harmony default export */ var dynamicDataWidgetEntry_DynamicDataWidgetEntry = (DynamicDataWidgetEntry_DynamicDataWidgetEntry);

// CONCATENATED MODULE: ./lib/propertyPaneDynamicData/dynamicDataWidgetProperty/DynamicDataWidgetProperty.js









var DynamicDataWidgetProperty_DynamicDataWidgetProperty =  (function (_super) {
    tslib_es6["c" /* __extends */](DynamicDataWidgetProperty, _super);
    function DynamicDataWidgetProperty(props) {
        var _this = _super.call(this, props) || this;
        _this._selectedPropertyText = '';
        _this.state = {
            selectedPropertyId: _this._getSelectedPropertyId()
        };
        return _this;
    }
    DynamicDataWidgetProperty.prototype.componentWillReceiveProps = function (newProps) {
        if (this.props.selectedSource.id !== newProps.selectedSource.id) {
            this.setState({
                selectedPropertyId: this._getPropertyIdFilter(newProps.selectedSource) || ''
            });
        }
    };
    DynamicDataWidgetProperty.prototype.render = function () {
        var propertyIdFilter = this._getPropertyIdFilter();
        return (external__react_["createElement"]("div", null,
            !propertyIdFilter && this._renderPropertyDropdown(),
            this._renderWidgetEntries()));
    };
    DynamicDataWidgetProperty.prototype._renderPropertyDropdown = function () {
        var _this = this;
        var selectedPropertyId = this.state.selectedPropertyId;
        return (external__react_["createElement"](Dropdown["Dropdown"], { label: sp_core_library_["Text"].format(Strings_resx["a" /* default */].DynamicDataPropertiesDropdownLabel, this.props.selectedSource.metadata.title), onChanged: function (option) {
                _this.setState({
                    selectedPropertyId: option.key
                });
            }, options: this._getPropertyDropdownOptions(), selectedKey: selectedPropertyId }));
    };
    DynamicDataWidgetProperty.prototype._renderWidgetEntries = function () {
        var _this = this;
        var widgetEntries = [];
        this.props.entries.forEach(function (entry) {
            var _a = entry.properties, propertyValueDepth = _a.propertyValueDepth, label = _a.label;
            var currentKey = _this.props.parentKey + '-dynamicDataWidgetEntry' + widgetEntries.length;
            widgetEntries.push(external__react_["createElement"]("div", { key: currentKey },
                _this.state.selectedPropertyId &&
                    _this.props.entries.length > 1 &&
                    (propertyValueDepth !== 0) &&
                    external__react_["createElement"](office_ui_fabric_react_bundle_["Label"], { className: DynamicDataWidget_module_scss.entryLabel }, label),
                external__react_["createElement"](dynamicDataWidgetEntry_DynamicDataWidgetEntry, tslib_es6["a" /* __assign */]({}, entry, { parentKey: currentKey, selectedSource: _this.props.selectedSource, selectedPropertyText: _this._selectedPropertyText, selectedPropertyId: _this.state.selectedPropertyId, dynamicDataProvider: _this.props.dynamicDataProvider, onChange: _this.props.onChange, propertyValueDepth: propertyValueDepth }))));
        });
        return widgetEntries;
    };
    DynamicDataWidgetProperty.prototype._getPropertyIdFilter = function (selectedSource) {
        var _this = this;
        var propertyIdFilter;
        if (this.props.type === IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField) {
            var filters = this.props.fieldProperties.filters;
            propertyIdFilter = filters && filters.propertyId;
        }
        else {
            var sharedConfiguration = this.props.fieldProperties.sharedConfiguration;
            propertyIdFilter = sharedConfiguration &&
                sharedConfiguration.property &&
                sharedConfiguration.property.filters &&
                sharedConfiguration.property.filters.propertyId;
        }
        if (propertyIdFilter) {
            selectedSource = selectedSource || this.props.selectedSource;
            var result_1 = '';
            var propertyDefs = selectedSource.getPropertyDefinitions();
            propertyDefs.forEach(function (propertyDef) {
                if (propertyDef.id === propertyIdFilter) {
                    result_1 = propertyIdFilter;
                    _this._selectedPropertyText = propertyDef.title;
                }
            });
            propertyIdFilter = result_1;
        }
        return propertyIdFilter;
    };
    DynamicDataWidgetProperty.prototype._getPropertyDropdownOptions = function () {
        var selectedPropertyId = this.state.selectedPropertyId;
        var propertyDefinitions = this.props.selectedSource.getPropertyDefinitions();
        var options = [];
        for (var _i = 0, propertyDefinitions_1 = propertyDefinitions; _i < propertyDefinitions_1.length; _i++) {
            var propertyDef = propertyDefinitions_1[_i];
            options.push({ key: propertyDef.id, text: propertyDef.title });
            if (propertyDef.id === selectedPropertyId) {
                this._selectedPropertyText = propertyDef.title;
            }
        }
        return options;
    };
    DynamicDataWidgetProperty.prototype._getSelectedPropertyId = function () {
        var _this = this;
        var selectedSourceId = this.props.selectedSource.id;
        var source = this.props.dynamicDataProvider.tryGetSource(selectedSourceId);
        var selectedPropertyId = this._getPropertyIdFilter();
        if (!selectedPropertyId) {
            if (this.props.type === IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField) {
                selectedPropertyId = this.props.entries[0].value._getProperty();
            }
            else { 
                var entries = this.props.entries;
                for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                    var entry = entries_1[_i];
                    if (entries[0].value._getProperty() !== entry.value._getProperty()) {
                        selectedPropertyId = '';
                        break;
                    }
                    else {
                        selectedPropertyId = entries[0].value._getProperty();
                    }
                }
            }
        }
        selectedPropertyId = selectedPropertyId && selectedPropertyId.split(/\[|\]/)[0];
        var result = '';
        var propertyDefs = source.getPropertyDefinitions();
        propertyDefs.forEach(function (propertyDef) {
            if (propertyDef.id === selectedPropertyId) {
                result = selectedPropertyId;
                _this._selectedPropertyText = propertyDef.title;
            }
        });
        return result;
    };
    return DynamicDataWidgetProperty;
}(external__react_["Component"]));
/* harmony default export */ var dynamicDataWidgetProperty_DynamicDataWidgetProperty = (DynamicDataWidgetProperty_DynamicDataWidgetProperty);

// CONCATENATED MODULE: ./lib/propertyPaneDynamicData/dynamicDataWidgetSource/DynamicDataWidgetSource.js








var DynamicDataWidgetSource_DynamicDataWidgetSource =  (function (_super) {
    tslib_es6["c" /* __extends */](DynamicDataWidgetSource, _super);
    function DynamicDataWidgetSource(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            selectedSourceId: _this._getSelectedSourceId()
        };
        return _this;
    }
    DynamicDataWidgetSource.prototype.render = function () {
        this._selectedSource = this.props.dynamicDataProvider.tryGetSource(this._getSelectedSourceId());
        return (external__react_["createElement"]("div", null,
            this._renderSourceDropdown(),
            this._selectedSource && this._renderWidgetProperties()));
    };
    DynamicDataWidgetSource.prototype._getSelectedSourceId = function () {
        var selectedSourceId = this._getSourceIdFilter();
        var entries = this.props.entries;
        if (!selectedSourceId) {
            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                var entry = entries_1[_i];
                if (entry.value._getSourceId()) {
                    selectedSourceId = entry.value._getSourceId();
                    break;
                }
                else {
                    selectedSourceId = '';
                }
            }
        }
        return selectedSourceId;
    };
    DynamicDataWidgetSource.prototype._renderSourceDropdown = function () {
        var _this = this;
        var selectedSourceId = this.state.selectedSourceId;
        var sourceIdFilter = this._getSourceIdFilter();
        if (sourceIdFilter) {
            selectedSourceId = sourceIdFilter;
        }
        var sourceLabel = '';
        if (this.props.type === IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField) {
            sourceLabel = this.props.fieldProperties.sourcesLabel ||
                Strings_resx["a" /* default */].DynamicDataSourcesDropdownLabel;
        }
        else {
            var sharedConfiguration = this.props.fieldProperties.sharedConfiguration;
            sourceLabel = (sharedConfiguration &&
                sharedConfiguration.source &&
                sharedConfiguration.source.sourcesLabel) || Strings_resx["a" /* default */].DynamicDataSourcesDropdownLabel;
        }
        return (external__react_["createElement"]("div", null, !sourceIdFilter &&
            external__react_["createElement"]("div", null,
                external__react_["createElement"](Dropdown["Dropdown"], { label: sourceLabel, onChanged: function (option) {
                        _this.setState({
                            selectedSourceId: option.key
                        });
                    }, options: this._getDataSourcesDropdownOptions(selectedSourceId), selectedKey: selectedSourceId }))));
    };
    DynamicDataWidgetSource.prototype._getSourceIdFilter = function () {
        var _a = this.props, type = _a.type, entries = _a.entries;
        var sourceIdFilter;
        if (type === IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField) {
            var entry = entries[0];
            var filters = entry.properties.filters;
            sourceIdFilter = filters && filters.sourceId;
        }
        else { 
            var sharedConfiguration = this.props.fieldProperties.sharedConfiguration;
            sourceIdFilter = sharedConfiguration &&
                sharedConfiguration.source &&
                sharedConfiguration.source.filters &&
                sharedConfiguration.source.filters.sourceId;
        }
        if (sourceIdFilter) {
            var dynamicDataProvider = this.props.dynamicDataProvider;
            var sources = dynamicDataProvider.getAvailableSources();
            var filteredSources = sources.filter(function (source) { return source.id === sourceIdFilter; });
            if (filteredSources) {
                this._selectedSource = filteredSources[0];
                return sourceIdFilter;
            }
        }
        return '';
    };
    DynamicDataWidgetSource.prototype._getDataSourcesDropdownOptions = function (selectedSourceId) {
        var _this = this;
        var options = [];
        var sources = this._getAvailableSources();
        this._selectedSource = undefined;
        sources.forEach(function (source) {
            options.push({ key: source.id, text: source.metadata.title });
            if (source.id === selectedSourceId) {
                _this._selectedSource = source;
            }
        });
        return options;
    };
    DynamicDataWidgetSource.prototype._getAvailableSources = function () {
        var sources = [];
        if (this.props.type === IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField) {
            var filters = this.props.entries[0].properties.filters;
            if (filters && filters.componentId) {
                sources = this.props.dynamicDataProvider.getAvailableSourcesByComponentId(filters.componentId);
            }
        }
        else { 
            var sharedConfiguration = this.props.fieldProperties.sharedConfiguration;
            var dynamicDataProvider = this.props.dynamicDataProvider;
            if (sharedConfiguration &&
                sharedConfiguration.source &&
                sharedConfiguration.source.filters &&
                sharedConfiguration.source.filters.componentId) {
                sources = dynamicDataProvider.getAvailableSourcesByComponentId(sharedConfiguration.source.filters.componentId);
            }
        }
        return sources.length > 0 ? sources : this.props.dynamicDataProvider.getAvailableSources();
    };
    DynamicDataWidgetSource.prototype._renderWidgetProperties = function () {
        var _this = this;
        var widgetProperties = [];
        if (this._isPropertyShared()) {
            widgetProperties.push(this._renderWidgetProperty(widgetProperties.length, this.props.entries));
        }
        else {
            this.props.entries.forEach(function (entry) {
                widgetProperties.push(_this._renderWidgetProperty(widgetProperties.length, [entry]));
            });
        }
        return (external__react_["createElement"]("div", null, widgetProperties));
    };
    DynamicDataWidgetSource.prototype._isPropertyShared = function () {
        if (this.props.entries.length === 1) {
            return true;
        }
        else {
            var sharedConfiguration = this.props.fieldProperties.sharedConfiguration;
            return !!(sharedConfiguration && sharedConfiguration.depth === 2 );
        }
    };
    DynamicDataWidgetSource.prototype._renderWidgetProperty = function (counter, entries) {
        var currentKey = this.props.parentKey + '-dynamicDataWidgetProperty' + counter;
        return (external__react_["createElement"]("div", { key: currentKey },
            (this.props.entries.length > 1 && !this._isPropertyShared()) &&
                external__react_["createElement"](office_ui_fabric_react_bundle_["Label"], { className: DynamicDataWidget_module_scss.entryLabel }, entries[0].properties.label),
            external__react_["createElement"](dynamicDataWidgetProperty_DynamicDataWidgetProperty, tslib_es6["a" /* __assign */]({}, this.props, { parentKey: currentKey, selectedSource: this._selectedSource, entries: entries }))));
    };
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], DynamicDataWidgetSource.prototype, "_getSelectedSourceId", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], DynamicDataWidgetSource.prototype, "_getSourceIdFilter", null);
    return DynamicDataWidgetSource;
}(external__react_["Component"]));
/* harmony default export */ var dynamicDataWidgetSource_DynamicDataWidgetSource = (DynamicDataWidgetSource_DynamicDataWidgetSource);

// CONCATENATED MODULE: ./lib/propertyPaneDynamicData/dynamicDataWidget/DynamicDataWidget.js





var DynamicDataWidget_DynamicDataWidget =  (function (_super) {
    tslib_es6["c" /* __extends */](DynamicDataWidget, _super);
    function DynamicDataWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DynamicDataWidget.prototype.render = function () {
        var _this = this;
        this._widgetSources = [];
        if (this._isSourceShared()) {
            this._widgetSources.push(this._renderWidgetSource(this.props.entries));
        }
        else {
            this.props.entries.forEach(function (entry) {
                _this._widgetSources.push(_this._renderWidgetSource([entry]));
            });
        }
        return (external__react_["createElement"]("div", null, this._widgetSources));
    };
    DynamicDataWidget.prototype._isSourceShared = function () {
        if (this.props.entries.length === 1) {
            return true;
        }
        else {
            var sharedConfiguration = this.props.fieldProperties.sharedConfiguration;
            return !!(sharedConfiguration && sharedConfiguration.depth !== 0 );
        }
    };
    DynamicDataWidget.prototype._renderWidgetSource = function (entries) {
        var currentKey = this.props.parentKey + '-dynamicDataWidgetSource' + this._widgetSources.length;
        return (external__react_["createElement"]("div", { key: currentKey, className: DynamicDataWidget_module_scss.dynamicDataWidget },
            (entries.length === 1) &&
                external__react_["createElement"](office_ui_fabric_react_bundle_["Label"], { className: DynamicDataWidget_module_scss.entryLabel }, entries[0].properties.label),
            external__react_["createElement"](dynamicDataWidgetSource_DynamicDataWidgetSource, tslib_es6["a" /* __assign */]({}, this.props, { parentKey: currentKey, entries: entries }))));
    };
    return DynamicDataWidget;
}(external__react_["Component"]));
/* harmony default export */ var dynamicDataWidget_DynamicDataWidget = (DynamicDataWidget_DynamicDataWidget);

// CONCATENATED MODULE: ./lib/propertyPaneGroup/PropertyPaneGroup.js
























var propertyPaneGroupInstance = 0;
var PropertyPaneGroup_PropertyPaneGroup =  (function (_super) {
    tslib_es6["c" /* __extends */](PropertyPaneGroup, _super);
    function PropertyPaneGroup(props) {
        var _this = _super.call(this, props) || this;
        _this._initialValue = '';
        _this.state = {
            isDetailsShown: true,
            id: "PropertyPaneGroup-" + propertyPaneGroupInstance++
        };
        _this._onHeaderClicked = _this._onHeaderClicked.bind(_this);
        return _this;
    }
    PropertyPaneGroup_1 = PropertyPaneGroup;
    PropertyPaneGroup._getCheckedStatus = function (propValue, groupField) {
        return (propValue !== undefined && propValue !== null) ? propValue : groupField.properties.checked;
    };
    PropertyPaneGroup.prototype.componentWillMount = function () {
        this.setState({
            isDetailsShown: this._isDetailsShown(this.props)
        });
    };
    PropertyPaneGroup.prototype.componentWillReceiveProps = function (props) {
        if (props.groupFields && 
            props.groupFields.some(function (groupField) { return groupField.shouldFocus || false; })) {
            this.setState({
                isDetailsShown: true
            });
        }
        else {
            this.setState({
                isDetailsShown: this._isDetailsShown(props)
            });
        }
    };
    PropertyPaneGroup.prototype.componentDidMount = function () {
        this._setFocus();
    };
    PropertyPaneGroup.prototype.componentDidUpdate = function () {
        this._setFocus();
    };
    PropertyPaneGroup.prototype.render = function () {
        this._keys = {}; 
        this._elementRefs = {}; 
        return (external__react_["createElement"]("div", null,
            this._renderGroupName(),
            this._renderGroupContent()));
    };
    PropertyPaneGroup.prototype._isDetailsShown = function (props) {
        var isDetailsShown = undefined;
        if (props.propertyPanePagesStateMap[props.pageNumber] &&
            props.groupName) {
            isDetailsShown = props.propertyPanePagesStateMap[props.pageNumber][props.groupName];
        }
        return (isDetailsShown !== undefined) ? isDetailsShown : !props.isCollapsed;
    };
    PropertyPaneGroup.prototype._setFocus = function () {
        var _this = this;
        setTimeout(function () {
            if (_this._focusElementKey) {
                var nextFocusedElement = _this._elementRefs[_this._focusElementKey];
                if (nextFocusedElement && nextFocusedElement.focus) {
                    nextFocusedElement.focus();
                    _this._focusElementKey = undefined;
                }
            }
        }, 0);
    };
    PropertyPaneGroup.prototype._renderGroupName = function () {
        var groupNameElem;
        var rtl = document.dir === 'rtl';
        if (!this.props.isGroupNameHidden) {
            if (!this.props.displayGroupsAsAccordion) {
                if (this.props.groupName) {
                    groupNameElem = (external__react_["createElement"]("div", { className: PropertyPaneGroup_module_scss.propertyPaneGroupHeaderNoAccordion }, this.props.groupName));
                }
            }
            else {
                var chevronIcon = this.state.isDetailsShown ? 'ChevronDown' : rtl ?
                    'ChevronLeft' : 'ChevronRight';
                groupNameElem = (external__react_["createElement"]("div", { className: PropertyPaneGroup_module_scss.propertyPaneGroupHeaderWithAccordion },
                    external__react_["createElement"]("button", { className: PropertyPaneGroup_module_scss.propertyPaneGroupHeader, "aria-expanded": this.state.isDetailsShown, onClick: this._onHeaderClicked },
                        external__react_["createElement"](office_ui_fabric_react_bundle_["Icon"], { className: this.state.isDetailsShown ?
                                PropertyPaneGroup_module_scss.propertyPaneGroupHeaderIcon :
                                PropertyPaneGroup_module_scss.propertyPaneGroupHeaderIcon, "data-automation-state": this.state.isDetailsShown ? 'expanded' : 'collapsed', iconName: chevronIcon }),
                        external__react_["createElement"]("div", { className: PropertyPaneGroup_module_scss.propertyPaneGroupHeaderText }, this.props.groupName))));
            }
        }
        return groupNameElem;
    };
    PropertyPaneGroup.prototype._renderGroupContent = function () {
        var _this = this;
        if (this.state.isDetailsShown) {
            return (external__react_["createElement"]("div", { className: PropertyPaneGroup_module_scss.propertyPaneGroupContent }, this.props.groupFields.map(function (groupField) { return _this._renderGroupField(groupField); })));
        }
        return undefined; 
    };
    PropertyPaneGroup.prototype._renderGroupField = function (groupField) {
        var _this = this;
        var _a;
        var key = generateGroupFieldKey(this._keys, groupField);
        var propValue = getFixedUpPropValue(groupField, this.props.properties, this.props.dynamicConfiguration);
        if (groupField.shouldFocus) {
            this._focusElementKey = key;
        }
        var setRef = function (instance) {
            _this._elementRefs[key] = instance; 
            if (typeof groupField.properties.ref === 'function') {
                groupField.properties.ref(instance);
            }
        };
        var groupFieldElement;
        switch (groupField.type) {
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].Custom:
                groupFieldElement = external__react_["createElement"](propertyPaneCustomField_PropertyPaneCustomFieldHost, tslib_es6["a" /* __assign */]({}, groupField.properties, { onChanged: function (targetProperty, value) {
                        if (_this.props.setEntryState) {
                            _this.props.setEntryState(targetProperty, true);
                        }
                        if (_this.props.onChange) {
                            _this.props.onChange(targetProperty, value, IPropertyPaneField["a" /* PropertyPaneFieldType */].Custom);
                        }
                    } }));
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].Toggle:
                groupFieldElement =
                    external__react_["createElement"](Toggle["Toggle"], tslib_es6["a" /* __assign */]({}, groupField.properties, { componentRef: setRef, checked: PropertyPaneGroup_1._getCheckedStatus(propValue, groupField), onText: groupField.properties.onText || Strings_resx["a" /* default */].ToggleOnText, offText: groupField.properties.offText || Strings_resx["a" /* default */].ToggleOffText, onChanged: function (value) {
                            _this._onChange(groupField, value);
                        } }));
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].TextField:
                var textFieldValue = propValue || groupField.properties.value || '';
                groupFieldElement = external__react_["createElement"](office_ui_fabric_react_bundle_["TextField"], tslib_es6["a" /* __assign */]({}, groupField.properties, { componentRef: setRef, value: textFieldValue, onChanged: function (value) {
                        if (!groupField.properties.onGetErrorMessage) {
                            _this._onChange(groupField, value);
                        }
                    }, onNotifyValidationResult: function (errorMessage, value) {
                        return _this._onNotifyValidationResult(errorMessage, value, groupField, _this.props.setEntryState);
                    }, onFocus: function (ev) { return _this._onFocusTextFieldPropertyPane(ev, groupField.properties); }, onBlur: function (ev) { return _this._onBlurTextFieldPropertyPane(ev, groupField.properties); } }));
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].Dropdown:
                var dropdownOptions = groupField.properties.options
                    ? groupField.properties.options.map(function (option) { return ({
                        key: option.key,
                        index: option.index,
                        text: option.text,
                        itemType: option.type || Dropdown_types["DropdownMenuItemType"].Normal
                    }); })
                    : [];
                groupFieldElement = external__react_["createElement"](Dropdown["Dropdown"], tslib_es6["a" /* __assign */]({}, groupField.properties, { componentRef: setRef, selectedKey: propValue || groupField.properties.selectedKey, disabled: groupField.properties.isDisabled || groupField.properties.disabled, ariaLabel: groupField.properties.ariaLabel, "aria-posinset": groupField.properties.ariaPositionInSet, "aria-setsize": groupField.properties.ariaSetSize, label: groupField.properties.label, options: dropdownOptions, calloutProps: groupField.properties.calloutProps, onChanged: function (option, index) {
                        _this._onDropDownChange(groupField, option, index);
                    } }));
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].CheckBox:
                groupFieldElement = external__react_["createElement"](Checkbox["Checkbox"], tslib_es6["a" /* __assign */]({}, groupField.properties, { componentRef: setRef, label: groupField.properties.text, checked: PropertyPaneGroup_1._getCheckedStatus(propValue, groupField), disabled: this._isDisabled(groupField), onChange: function (ev, isChecked) {
                        _this._onChange(groupField, isChecked);
                    } }));
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].Label:
                groupFieldElement = external__react_["createElement"](office_ui_fabric_react_bundle_["Label"], tslib_es6["a" /* __assign */]({}, groupField.properties), groupField.properties.text);
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].Slider:
                groupFieldElement =
                    external__react_["createElement"](Slider["Slider"], tslib_es6["a" /* __assign */]({}, groupField.properties, { componentRef: setRef, value: propValue || groupField.properties.value, onChange: function (value) {
                            _this._onChange(groupField, value);
                        } }));
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].ChoiceGroup:
                groupField.properties.options.forEach(function (option) {
                    if (propValue !== undefined && propValue !== '' && propValue !== null) {
                        option.checked = option.key === propValue;
                    }
                    if (option.hasOwnProperty('disabled') && option.disabled !== undefined) {
                        option.disabled = option.disabled;
                    }
                    if (!option.onRenderLabel && (option.imageSrc || option.iconProps)) {
                        option.onRenderLabel = function (choice) {
                            return (external__react_["createElement"](TooltipHost["TooltipHost"], { overflowMode: TooltipHost_types["TooltipOverflowMode"].Parent, calloutProps: { gapSpace: 65 }, content: choice.text },
                                external__react_["createElement"]("span", { id: choice.labelId, className: 'ms-label' }, choice.text)));
                        };
                    }
                });
                var options = groupField.properties.options.map(function (option) {
                    var propertyPaneChoiceGroupOptionIconProps = option.iconProps, otherOptions = tslib_es6["d" /* __rest */](option, ["iconProps"]);
                    var iconOption = propertyPaneChoiceGroupOptionIconProps
                        ? {
                            iconProps: {
                                iconName: propertyPaneChoiceGroupOptionIconProps.officeFabricIconFontName
                            }
                        }
                        : undefined;
                    var themableSvg = option.themableSvg;
                    var renderOption = themableSvg ?
                        {
                            onRenderField: _this._renderChoiceGroupWithSvg
                        }
                        : undefined;
                    var dataAutomationIdOption = {
                        'data-automation-id': "PropertyPaneChoiceGroup-" + option.key
                    };
                    return sp_lodash_subset_["merge"]({}, otherOptions, iconOption, renderOption, dataAutomationIdOption);
                });
                var choiceGroupClassName = Object(office_ui_fabric_react_bundle_["css"])(PropertyPaneGroup_module_scss.propertyPaneChoiceGroup, (_a = {},
                    _a[PropertyPaneGroup_module_scss.choiceGroupContainsIconOrImage] = options.some(function (option) { return Boolean(option.iconProps || option.imageSrc); }),
                    _a));
                groupFieldElement =
                    external__react_["createElement"](ChoiceGroup["ChoiceGroup"], tslib_es6["a" /* __assign */]({}, groupField.properties, { componentRef: setRef, options: options, className: choiceGroupClassName, onChanged: function (checkedOption) {
                            _this._onChoiceGroupChange(groupField, checkedOption);
                        } }));
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].Button:
                var handleClick = function () {
                    var newValue = groupField.properties.onClick(propValue); 
                    _this._onChange(groupField, newValue, IPropertyPaneField["a" /* PropertyPaneFieldType */].Button);
                };
                var iconProps = groupField.properties.icon
                    ? { iconName: groupField.properties.icon }
                    : undefined;
                var buttonType = groupField.properties.buttonType;
                var buttonProps = tslib_es6["a" /* __assign */]({}, groupField.properties, { ariaLabel: groupField.properties.ariaLabel || groupField.properties.text, componentRef: setRef, iconProps: iconProps, onClick: handleClick, text: groupField.properties.text });
                if (buttonType) {
                    delete buttonProps.buttonType; 
                }
                switch (buttonType) {
                    case IPropertyPaneButton["a" /* PropertyPaneButtonType */].Primary:
                        groupFieldElement = external__react_["createElement"](office_ui_fabric_react_bundle_["PrimaryButton"], tslib_es6["a" /* __assign */]({}, buttonProps));
                        break;
                    case IPropertyPaneButton["a" /* PropertyPaneButtonType */].Compound:
                        groupFieldElement = external__react_["createElement"](office_ui_fabric_react_bundle_["CompoundButton"], tslib_es6["a" /* __assign */]({}, buttonProps));
                        break;
                    case IPropertyPaneButton["a" /* PropertyPaneButtonType */].Command:
                        groupFieldElement = external__react_["createElement"](office_ui_fabric_react_bundle_["ActionButton"], tslib_es6["a" /* __assign */]({}, buttonProps));
                        break;
                    case IPropertyPaneButton["a" /* PropertyPaneButtonType */].Icon:
                        groupFieldElement = external__react_["createElement"](office_ui_fabric_react_bundle_["IconButton"], tslib_es6["a" /* __assign */]({}, buttonProps));
                        break;
                    default:
                        groupFieldElement = external__react_["createElement"](office_ui_fabric_react_bundle_["Button"], tslib_es6["a" /* __assign */]({}, buttonProps));
                        break;
                }
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].HorizontalRule:
                groupFieldElement =
                    external__react_["createElement"]("hr", tslib_es6["a" /* __assign */]({}, groupField.properties));
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].Link:
                groupFieldElement = external__react_["createElement"](office_ui_fabric_react_bundle_["Link"], tslib_es6["a" /* __assign */]({ componentRef: setRef }, groupField.properties), groupField.properties.text);
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField:
                groupFieldElement = external__react_["createElement"](dynamicDataWidget_DynamicDataWidget, { parentKey: key, type: IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField, fieldProperties: groupField.properties, entries: [propValue], dynamicDataProvider: this.props.dynamicConfiguration.dynamicDataProvider, onChange: this._onDynamicDataChanged.bind(this, groupField) });
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicFieldSet:
                groupFieldElement = external__react_["createElement"](dynamicDataWidget_DynamicDataWidget, { parentKey: key, type: IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicFieldSet, fieldProperties: groupField.properties, entries: propValue, dynamicDataProvider: this.props.dynamicConfiguration.dynamicDataProvider, onChange: this._onDynamicDataChanged.bind(this, groupField) });
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicTextField:
                groupFieldElement = this._getDynamicTextField(groupField, propValue, setRef);
                break;
            case IPropertyPaneField["a" /* PropertyPaneFieldType */].SpinButton:
                groupFieldElement = (external__react_["createElement"](SpinButton["SpinButton"], tslib_es6["a" /* __assign */]({}, groupField.properties, { componentRef: setRef, value: propValue || groupField.properties.defaultValue, onIncrement: function (value) { return _this._onChange(groupField, Number(value) + 1); }, onDecrement: function (value) { return _this._onChange(groupField, Number(value) - 1); } })));
                break;
            default:
                groupFieldElement = null; 
        }
        return (external__react_["createElement"]("div", { key: key, className: PropertyPaneGroup_module_scss.propertyPaneGroupField }, groupFieldElement));
    };
    PropertyPaneGroup.prototype._getDynamicTextField = function (groupField, dataPath, setRef 
    ) {
        var _this = this;
        var textFieldValue = dataPath.reference ?
            '[' + dataPath.reference + ']' :
            (dataPath.value || groupField.properties.value || '');
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["TextField"], tslib_es6["a" /* __assign */]({}, groupField.properties, { componentRef: setRef, value: textFieldValue, onGetErrorMessage: this._validateDynamicDataPath.bind(this, groupField), onNotifyValidationResult: function (errorMessage, value) {
                return _this._onNotifyValidationResult(errorMessage, _this._getDynamicProperty(value, groupField), groupField, _this.props.setEntryState);
            } })));
    };
    PropertyPaneGroup.prototype._renderChoiceGroupWithSvg = function (props) {
        var _a, _b, _c;
        var themableSvg = props.themableSvg;
        return (external__react_["createElement"]("label", { htmlFor: props.id, className: Object(office_ui_fabric_react_bundle_["css"])('ms-ChoiceField-field', PropertyPaneChoiceGroup_module_scss.field, (_a = {},
                _a['ms-ChoiceField-field--image ' + PropertyPaneChoiceGroup_module_scss.fieldIsImage] = !!props.imageSrc,
                _a['ms-ChoiceField--icon ' + PropertyPaneChoiceGroup_module_scss.fieldIsIcon] = !!props.iconProps,
                _a['is-checked ' + PropertyPaneChoiceGroup_module_scss.fieldIsChecked] = props.checked,
                _a['is-disabled ' + PropertyPaneChoiceGroup_module_scss.fieldIsDisabled] = props.disabled,
                _a)) },
            props.imageSrc && (external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('ms-ChoiceField-innerField', PropertyPaneChoiceGroup_module_scss.innerField) },
                external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('ms-ChoiceField-imageWrapper', PropertyPaneChoiceGroup_module_scss.imageWrapper, (_b = {},
                        _b['is-hidden ' + PropertyPaneChoiceGroup_module_scss.imageWrapperIsHidden] = props.checked,
                        _b)) },
                    external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('ms-Image', PropertyPaneChoiceGroup_module_scss.imageRoot), style: {
                            width: props.imageSize ? props.imageSize.width : undefined,
                            height: props.imageSize ? props.imageSize.height : undefined
                        } }, themableSvg)),
                external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('ms-ChoiceField-imageWrapper', PropertyPaneChoiceGroup_module_scss.imageWrapper, (_c = {},
                        _c['is-hidden ' + PropertyPaneChoiceGroup_module_scss.imageWrapperIsHidden] = !props.checked,
                        _c)) },
                    external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('ms-Image', PropertyPaneChoiceGroup_module_scss.imageRoot), style: {
                            width: props.imageSize ? props.imageSize.width : undefined,
                            height: props.imageSize ? props.imageSize.height : undefined
                        } }, themableSvg)))),
            props.iconProps &&
                external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('ms-ChoiceField-innerField', PropertyPaneChoiceGroup_module_scss.innerField) },
                    external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('ms-ChoiceField-iconWrapper', PropertyPaneChoiceGroup_module_scss.iconWrapper) },
                        external__react_["createElement"](office_ui_fabric_react_bundle_["Icon"], tslib_es6["a" /* __assign */]({}, props.iconProps)))),
            props.imageSrc || props.iconProps
                ? (external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])('ms-ChoiceField-labelWrapper', PropertyPaneChoiceGroup_module_scss.labelWrapper) },
                    external__react_["createElement"]("span", { id: props.labelId, className: 'ms-Label' }, props.text))) : external__react_["createElement"]("span", { id: props.labelId, className: 'ms-Label' }, props.text)));
    };
    PropertyPaneGroup.prototype._onNotifyValidationResult = function (errorMessage, value, groupField,  setEntryState) {
        if (setEntryState) {
            setEntryState(groupField.targetProperty, !errorMessage);
        }
        this._onChange(groupField, value);
    };
    PropertyPaneGroup.prototype._validateDynamicDataPath = function (groupField, value) {
        var errorMessage = '';
        if (groupField.properties.onGetErrorMessage) {
            errorMessage = groupField.properties.onGetErrorMessage(value);
        }
        if (!errorMessage) {
            if (!!value.match(PropertyPaneGroup_1.DYNAMICPROPERTY_DEFAULT_REGEX) ||
                !!value.match(PropertyPaneGroup_1.DYNAMICPROPERTY_COMPONENT_REGEX)) {
                var dynamicProperty = this._getDynamicProperty(value, groupField);
                if (!dynamicProperty.tryGetValue()) {
                    errorMessage = Strings_resx["a" /* default */].NoDynamicDataReturnedErrorText;
                }
            }
        }
        return errorMessage;
    };
    PropertyPaneGroup.prototype._getDynamicProperty = function (value, groupField) {
        var dynamicProperty = new sp_component_base_["DynamicProperty"](groupField.properties.dynamicDataProvider, groupField.properties.changeCallback);
        var matches = PropertyPaneGroup_1.DYNAMICPROPERTY_DEFAULT_REGEX.exec(value) ||
            PropertyPaneGroup_1.DYNAMICPROPERTY_COMPONENT_REGEX.exec(value);
        if (matches) {
            dynamicProperty.setReference(matches[1]); 
        }
        else {
            dynamicProperty.setValue(value);
        }
        return dynamicProperty;
    };
    PropertyPaneGroup.prototype._onFocusTextFieldPropertyPane = function (ev, props) {
        if (props.logName) {
            this._initialValue = ev.target.value;
        }
    };
    PropertyPaneGroup.prototype._onBlurTextFieldPropertyPane = function (ev, props) {
        if (props.logName) {
            var action = void 0;
            var currentText = ev.target.value;
            var defaultValue = props.value || '';
            if (this._initialValue !== currentText) {
                if (currentText === defaultValue || currentText === '') {
                    action = 'Clear';
                }
                else if (this._initialValue === defaultValue) {
                    action = 'Add';
                }
                else {
                    action = 'Edit';
                }
                sp_diagnostics_["_EngagementLogger"].logEventWithLogEntry(new sp_diagnostics_["_LogEntry"](props.logName.moduleName, props.logName.controlName, sp_diagnostics_["_LogType"].Event, {
                    'action': action,
                    'length': currentText.length.toString()
                }));
            }
        }
    };
    PropertyPaneGroup.prototype._onChoiceGroupChange = function (groupField, checkedOption) {
        groupField.properties.options.forEach(function (option) {
            return option.checked = option.key === checkedOption.key;
        });
        this._onChange(groupField, checkedOption.key);
    };
    PropertyPaneGroup.prototype._onDropDownChange = function (groupField, selectedItem, selectedIndex) {
        if (this.props.onChange) {
            this.props.onChange(groupField.targetProperty, selectedItem.key);
        }
    };
    PropertyPaneGroup.prototype._onChange = function (groupField,  value,  fieldType) {
        if (this.props.onChange) {
            this.props.onChange(groupField.targetProperty, value, fieldType);
        }
        if (!groupField.properties.onGetErrorMessage && this.props.setEntryState) {
            this.props.setEntryState(groupField.targetProperty, true);
        }
    };
    PropertyPaneGroup.prototype._onHeaderClicked = function () {
        if (this.props.groupName && this.props.groupName.length > 0) {
            this.props.propertyPaneGroupStateChanged(this.props.pageNumber, this.props.groupName, !this.state.isDetailsShown);
        }
        this.setState({
            isDetailsShown: !this.state.isDetailsShown
        });
    };
    PropertyPaneGroup.prototype._isDisabled = function (groupField) {
        var disabled = groupField.properties.disabled;
        if (disabled === undefined) {
            if (groupField.properties.hasOwnProperty('isDisabled') && groupField.properties.isDisabled !== undefined) {
                disabled = groupField.properties.isDisabled;
            }
            else if (groupField.properties.hasOwnProperty('enabled') && groupField.properties.enabled !== undefined) {
                disabled = !groupField.properties.enabled;
            }
            else if (groupField.properties.hasOwnProperty('isEnabled') && groupField.properties.isEnabled !== undefined) {
                disabled = !groupField.properties.isEnabled;
            }
        }
        return disabled;
    };
    PropertyPaneGroup.prototype._onDynamicDataChanged = function (groupField, targetProperty, newPropValue 
    ) {
        groupField.targetProperty = targetProperty;
        this._onChange(groupField, newPropValue);
    };
    var PropertyPaneGroup_1;
    PropertyPaneGroup.DYNAMICPROPERTY_DEFAULT_REGEX = /^\[(\w+:\w+(?::\w+)?)\]$/;
    PropertyPaneGroup.DYNAMICPROPERTY_COMPONENT_REGEX = /^\[([a-zA-Z]+\.([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})\.([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12}):\w+(?::\w+)?)\]$/;
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PropertyPaneGroup.prototype, "_renderGroupField", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PropertyPaneGroup.prototype, "_renderChoiceGroupWithSvg", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PropertyPaneGroup.prototype, "_onDynamicDataChanged", null);
    PropertyPaneGroup = PropertyPaneGroup_1 = tslib_es6["b" /* __decorate */]([
        decorators_["sealed"]
    ], PropertyPaneGroup);
    return PropertyPaneGroup;
}(external__react_["Component"]));
/* harmony default export */ var propertyPaneGroup_PropertyPaneGroup = (PropertyPaneGroup_PropertyPaneGroup);

// CONCATENATED MODULE: ./lib/propertyPanePage/PropertyPanePage.module.scss.js
__webpack_require__(135);
var PropertyPanePage_module_scss_styles = {
    propertyPaneTitleBarBox: 'propertyPaneTitleBarBox_5f259751',
    propertyPaneTitleBar: 'propertyPaneTitleBar_5f259751',
    propertyPanePageTitle: 'propertyPanePageTitle_5f259751',
    propertyPaneClose: 'propertyPaneClose_5f259751',
    propertyPanePageContent: 'propertyPanePageContent_5f259751',
    propertyPanePageDescription: 'propertyPanePageDescription_5f259751',
};
/* harmony default export */ var PropertyPanePage_module_scss = (PropertyPanePage_module_scss_styles);

// CONCATENATED MODULE: ./lib/propertyPaneConditionalGroup/PropertyPaneConditionalGroup.module.scss.js
__webpack_require__(137);
var PropertyPaneConditionalGroup_module_scss_styles = {
    alternateFieldsConnector: 'alternateFieldsConnector_c69eeebc',
    callout: 'callout_c69eeebc',
    removeConnectionButton: 'removeConnectionButton_c69eeebc',
    clear: 'clear_c69eeebc',
};
/* harmony default export */ var PropertyPaneConditionalGroup_module_scss = (PropertyPaneConditionalGroup_module_scss_styles);

// CONCATENATED MODULE: ./lib/propertyPaneConditionalGroup/secondaryGroupConnector/SecondaryGroupConnector.js





var SecondaryGroupConnector_SecondaryGroupConnector =  (function (_super) {
    tslib_es6["c" /* __extends */](SecondaryGroupConnector, _super);
    function SecondaryGroupConnector(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isCalloutVisible: false
        };
        return _this;
    }
    SecondaryGroupConnector.prototype.render = function () {
        var isCalloutVisible = this.state.isCalloutVisible;
        return (external__react_["createElement"]("div", { className: PropertyPaneConditionalGroup_module_scss.alternateFieldsConnector, role: 'button', onClick: this._handleConnectorClick },
            external__react_["createElement"]("div", { ref: this._resolveRef('_ellipsisElement'), title: this.props.tooltip },
                external__react_["createElement"]("span", null, Strings_resx["a" /* default */].DynamicDataSecondaryGroupButtonLabel)),
            isCalloutVisible &&
                external__react_["createElement"]("div", { className: PropertyPaneConditionalGroup_module_scss.callout },
                    external__react_["createElement"](office_ui_fabric_react_bundle_["Callout"], { role: 'alertdialog', isBeakVisible: false, setInitialFocus: true, directionalHint: office_ui_fabric_react_bundle_["DirectionalHint"].bottomCenter, onDismiss: this._handleCalloutDismiss, target: this._ellipsisElement },
                        external__react_["createElement"](office_ui_fabric_react_bundle_["DefaultButton"], { "data-automation-id": 'connectToSource', onClick: this._onConnectToSourceClick, iconProps: { iconName: 'Plug' }, ariaDescription: Strings_resx["a" /* default */].ConnectToDynamicDataSourceDescription, text: Strings_resx["a" /* default */].ConnectToDynamicDataSource })))));
    };
    SecondaryGroupConnector.prototype._handleConnectorClick = function () {
        this.setState({
            isCalloutVisible: !this.state.isCalloutVisible
        });
    };
    SecondaryGroupConnector.prototype._handleCalloutDismiss = function () {
        this.setState({
            isCalloutVisible: false
        });
    };
    SecondaryGroupConnector.prototype._onConnectToSourceClick = function () {
        this.props.onConnectToSourceClick();
    };
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SecondaryGroupConnector.prototype, "_handleConnectorClick", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SecondaryGroupConnector.prototype, "_handleCalloutDismiss", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], SecondaryGroupConnector.prototype, "_onConnectToSourceClick", null);
    return SecondaryGroupConnector;
}(office_ui_fabric_react_bundle_["BaseComponent"]));
/* harmony default export */ var secondaryGroupConnector_SecondaryGroupConnector = (SecondaryGroupConnector_SecondaryGroupConnector);

// CONCATENATED MODULE: ./lib/propertyPaneConditionalGroup/PropertyPaneConditionalGroup.js







var PropertyPaneConditionalGroup_PropertyPaneConditionalGroup =  (function (_super) {
    tslib_es6["c" /* __extends */](PropertyPaneConditionalGroup, _super);
    function PropertyPaneConditionalGroup(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            showSecondaryGroup: _this.props.showSecondaryGroup
        };
        return _this;
    }
    PropertyPaneConditionalGroup.prototype.render = function () {
        var _this = this;
        var showSecondaryGroup = this.state.showSecondaryGroup;
        return (external__react_["createElement"]("div", null,
            !showSecondaryGroup &&
                external__react_["createElement"](secondaryGroupConnector_SecondaryGroupConnector, { onConnectToSourceClick: function () { return _this._onShowSecondaryClick(); } }),
            external__react_["createElement"]("div", { className: PropertyPaneConditionalGroup_module_scss.clear }),
            this._renderGroup(),
            showSecondaryGroup &&
                external__react_["createElement"]("div", { className: PropertyPaneConditionalGroup_module_scss.removeConnectionButton },
                    external__react_["createElement"](office_ui_fabric_react_bundle_["Link"], { onClick: this._onShowPrimaryClick }, Strings_resx["a" /* default */].DynamicDataRemoveConnectionText))));
    };
    PropertyPaneConditionalGroup.prototype._renderGroup = function () {
        var showSecondaryGroup = this.state.showSecondaryGroup;
        var group = showSecondaryGroup ? this.props.secondaryGroup : this.props.primaryGroup;
        return (external__react_["createElement"](propertyPaneGroup_PropertyPaneGroup, tslib_es6["a" /* __assign */]({}, this.props, { key: group.groupName || this.props.index, pageNumber: this.props.pageNumber, groupName: group.groupName, groupFields: group.groupFields, onChange: this.props.onChange, properties: this.props.properties, setEntryState: this.props.setEntryState, isCollapsed: group.isCollapsed, displayGroupsAsAccordion: this.props.displayGroupsAsAccordion, propertyPaneGroupStateChanged: this.props.propertyPaneGroupStateChanged, propertyPanePagesStateMap: this.props.propertyPanePagesStateMap, dynamicConfiguration: this.props.dynamicConfiguration })));
    };
    PropertyPaneConditionalGroup.prototype._onShowSecondaryClick = function () {
        if (this.props.onShowSecondaryGroup) {
            this.props.onShowSecondaryGroup();
        }
        this.setState({
            showSecondaryGroup: true
        });
    };
    PropertyPaneConditionalGroup.prototype._onShowPrimaryClick = function () {
        if (this.props.onShowPrimaryGroup) {
            this.props.onShowPrimaryGroup();
        }
        this.setState({
            showSecondaryGroup: false
        });
    };
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PropertyPaneConditionalGroup.prototype, "_onShowSecondaryClick", null);
    tslib_es6["b" /* __decorate */]([
        office_ui_fabric_react_bundle_["autobind"]
    ], PropertyPaneConditionalGroup.prototype, "_onShowPrimaryClick", null);
    return PropertyPaneConditionalGroup;
}(external__react_["Component"]));
/* harmony default export */ var propertyPaneConditionalGroup_PropertyPaneConditionalGroup = (PropertyPaneConditionalGroup_PropertyPaneConditionalGroup);

// CONCATENATED MODULE: ./lib/propertyPanePage/PropertyPanePage.js






var PropertyPanePage_PropertyPanePage =  (function (_super) {
    tslib_es6["c" /* __extends */](PropertyPanePage, _super);
    function PropertyPanePage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PropertyPanePage.prototype.componentDidMount = function () {
        this.props.setContainerDiv(this._propertyPanePage);
    };
    PropertyPanePage.prototype.render = function () {
        var _this = this;
        var index = 0;
        var propertyGroups = this.props.propertyGroups.map(function (group) {
            if (_this._isConditionalGroup(group)) {
                group = group;
                return (external__react_["createElement"]("div", { key: 'PropertyPaneConditionalGroup' + index },
                    external__react_["createElement"](propertyPaneConditionalGroup_PropertyPaneConditionalGroup, tslib_es6["a" /* __assign */]({}, group, _this.props, { index: index++ }))));
            }
            else {
                group = group;
                var groupKey = group.groupName || index.toString();
                return (external__react_["createElement"]("div", { key: 'PropertyPaneGroup' + index++ },
                    external__react_["createElement"](propertyPaneGroup_PropertyPaneGroup, tslib_es6["a" /* __assign */]({}, _this.props, { key: groupKey, pageNumber: _this.props.pageNumber, isGroupNameHidden: group.isGroupNameHidden, groupName: group.groupName, groupFields: group.groupFields, onChange: _this.props.onChange, properties: _this.props.properties, setEntryState: _this.props.setEntryState, isCollapsed: group.isCollapsed, displayGroupsAsAccordion: _this.props.displayGroupsAsAccordion, propertyPaneGroupStateChanged: _this.props.propertyPaneGroupStateChanged, propertyPanePagesStateMap: _this.props.propertyPanePagesStateMap, dynamicConfiguration: _this.props.dynamicConfiguration }))));
            }
        });
        return (external__react_["createElement"]("div", { ref: function (c) { return _this._propertyPanePage = c; } },
            this.props.pageDescription
                ? external__react_["createElement"]("div", { className: PropertyPanePage_module_scss.propertyPanePageDescription, id: 'propertyPaneDescriptionId' }, this.props.pageDescription)
                : null
        ,
            propertyGroups));
    };
    PropertyPanePage.prototype._isConditionalGroup = function (group) {
        return 'primaryGroup' in group;
    };
    PropertyPanePage = tslib_es6["b" /* __decorate */]([
        decorators_["sealed"]
    ], PropertyPanePage);
    return PropertyPanePage;
}(external__react_["Component"]));
/* harmony default export */ var propertyPanePage_PropertyPanePage = (PropertyPanePage_PropertyPanePage);

// CONCATENATED MODULE: ./lib/propertyPaneTitleBar/PropertyPaneTitleBar.module.scss.js
__webpack_require__(139);
var PropertyPaneTitleBar_module_scss_styles = {
    propertyPaneTitleBarBox: 'propertyPaneTitleBarBox_59cbcccc',
    propertyPaneTitleBar: 'propertyPaneTitleBar_59cbcccc',
    propertyPanePageTitle: 'propertyPanePageTitle_59cbcccc',
    propertyPaneClose: 'propertyPaneClose_59cbcccc',
};
/* harmony default export */ var PropertyPaneTitleBar_module_scss = (PropertyPaneTitleBar_module_scss_styles);

// CONCATENATED MODULE: ./lib/propertyPaneTitleBar/PropertyPaneTitleBar.js






var PropertyPaneTitleBar_PropertyPaneTitleBar =  (function (_super) {
    tslib_es6["c" /* __extends */](PropertyPaneTitleBar, _super);
    function PropertyPaneTitleBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PropertyPaneTitleBar.prototype.render = function () {
        return (external__react_["createElement"]("div", { className: PropertyPaneTitleBar_module_scss.propertyPaneTitleBarBox },
            external__react_["createElement"]("div", { className: PropertyPaneTitleBar_module_scss.propertyPaneTitleBar },
                external__react_["createElement"]("div", { className: PropertyPaneTitleBar_module_scss.propertyPanePageTitle, "aria-hidden": true }, this.props.title),
                external__react_["createElement"]("button", { tabIndex: this.props.title ? 0 : -1, className: PropertyPaneTitleBar_module_scss.propertyPaneClose, onClick: this.props.onClose, "aria-label": Strings_resx["a" /* default */].Close },
                    external__react_["createElement"](office_ui_fabric_react_bundle_["Icon"], { iconName: 'Cancel' })))));
    };
    PropertyPaneTitleBar = tslib_es6["b" /* __decorate */]([
        decorators_["sealed"]
    ], PropertyPaneTitleBar);
    return PropertyPaneTitleBar;
}(external__react_["Component"]));
/* harmony default export */ var propertyPaneTitleBar_PropertyPaneTitleBar = (PropertyPaneTitleBar_PropertyPaneTitleBar);

// CONCATENATED MODULE: ./lib/propertyPaneFooter/PropertyPaneFooter.module.scss.js
__webpack_require__(141);
var PropertyPaneFooter_module_scss_styles = {
    propertyPaneFooter: 'propertyPaneFooter_de0728db',
    propertyPaneCommandButtonsBox: 'propertyPaneCommandButtonsBox_de0728db',
    propertyPanePageNav: 'propertyPanePageNav_de0728db',
    propertyPaneBackNavLink: 'propertyPaneBackNavLink_de0728db',
    propertyPaneNextNavLink: 'propertyPaneNextNavLink_de0728db',
    propertyPaneBackArrow: 'propertyPaneBackArrow_de0728db',
    propertyPaneNextArrow: 'propertyPaneNextArrow_de0728db',
    propertyPanePageOfPages: 'propertyPanePageOfPages_de0728db',
};
/* harmony default export */ var PropertyPaneFooter_module_scss = (PropertyPaneFooter_module_scss_styles);

// CONCATENATED MODULE: ./lib/propertyPaneFooter/PropertyPaneFooter.js








var PropertyPaneFooter_PropertyPaneFooter =  (function (_super) {
    tslib_es6["c" /* __extends */](PropertyPaneFooter, _super);
    function PropertyPaneFooter(props) {
        var _this = _super.call(this, props) || this;
        _this._renderCommandButtons = _this._renderCommandButtons.bind(_this);
        _this._pageNavigationButtons = _this._pageNavigationButtons.bind(_this);
        return _this;
    }
    PropertyPaneFooter.prototype.render = function () {
        return ((!this.props.isReactive || this.props.numberOfPages > 1) && (external__react_["createElement"]("div", { className: PropertyPaneFooter_module_scss.propertyPaneFooter },
            this._renderCommandButtons(),
            this._pageNavigationButtons()))); 
    };
    PropertyPaneFooter.prototype._renderCommandButtons = function () {
        return ((this.props.isReactive === false) && (external__react_["createElement"]("div", { className: this.props.numberOfPages > 1 ? PropertyPaneFooter_module_scss.propertyPaneCommandButtonsBox : undefined },
            external__react_["createElement"](office_ui_fabric_react_bundle_["PrimaryButton"], { "data-automation-id": 'propertyPaneApplyButton', disabled: !this.props.isSaveButtonEnabled, onClick: this.props.onSaveClick, ariaDescription: Strings_resx["a" /* default */].ApplyButtonAriaDescription }, Strings_resx["a" /* default */].Save)))); 
    };
    PropertyPaneFooter.prototype._pageNavigationButtons = function () {
        var _this = this;
        return (this.props.numberOfPages > 1 && (external__react_["createElement"]("div", { className: PropertyPaneFooter_module_scss.propertyPanePageNav },
            external__react_["createElement"]("button", { className: PropertyPaneFooter_module_scss.propertyPaneBackNavLink, disabled: this.props.currentPage === 1, onClick: function () { _this.props.onFlipPage(PageDirection.back); } },
                external__react_["createElement"]("i", { className: Object(office_ui_fabric_react_bundle_["css"])(this._arrowKeyIcon(PageDirection.back), PropertyPaneFooter_module_scss.propertyPaneBackArrow) }),
                Strings_resx["a" /* default */].PropertyPaneBackPage),
            external__react_["createElement"]("span", { role: 'status', className: Object(office_ui_fabric_react_bundle_["css"])(PropertyPaneFooter_module_scss.propertyPanePageOfPages) }, sp_core_library_["Text"].format(Strings_resx["a" /* default */].PropertyPanePageOfPages, this.props.currentPage, this.props.numberOfPages)),
            external__react_["createElement"]("button", { className: PropertyPaneFooter_module_scss.propertyPaneNextNavLink, disabled: this.props.currentPage === this.props.numberOfPages, onClick: function () { _this.props.onFlipPage(PageDirection.next); } },
                Strings_resx["a" /* default */].PropertyPaneNextPage,
                external__react_["createElement"]("i", { className: Object(office_ui_fabric_react_bundle_["css"])(this._arrowKeyIcon(PageDirection.next), PropertyPaneFooter_module_scss.propertyPaneNextArrow) }))))); 
    };
    PropertyPaneFooter.prototype._arrowKeyIcon = function (dir) {
        var rtl = document.dir === 'rtl';
        var chevronRightIcon = Object(office_ui_fabric_react_bundle_["getIconClassName"])('ChevronRight');
        var chevronLeftIcon = Object(office_ui_fabric_react_bundle_["getIconClassName"])('ChevronLeft');
        if (dir === PageDirection.back) {
            return rtl ? chevronRightIcon : chevronLeftIcon;
        }
        else {
            return rtl ? chevronLeftIcon : chevronRightIcon;
        }
    };
    PropertyPaneFooter = tslib_es6["b" /* __decorate */]([
        decorators_["sealed"]
    ], PropertyPaneFooter);
    return PropertyPaneFooter;
}(external__react_["Component"]));
/* harmony default export */ var propertyPaneFooter_PropertyPaneFooter = (PropertyPaneFooter_PropertyPaneFooter);

// CONCATENATED MODULE: ./lib/propertyPane/PropertyPane.module.scss.js
__webpack_require__(143);
var PropertyPane_module_scss_styles = {
    propertyPane: 'propertyPane_74d58281',
    propertyPaneDescription: 'propertyPaneDescription_74d58281',
    propertyPaneScreenReaderOnly: 'propertyPaneScreenReaderOnly_74d58281',
    twoRowFooter: 'twoRowFooter_74d58281',
    oneRowFooter: 'oneRowFooter_74d58281',
    overlay: 'overlay_74d58281',
    spinner: 'spinner_74d58281',
};
/* harmony default export */ var PropertyPane_module_scss = (PropertyPane_module_scss_styles);

// CONCATENATED MODULE: ./lib/utils/CanvasA11y.js
function isEscape(e) {
    return isKey(27 , e);
}
function isEnter(e) {
    return isKey(13 , e);
}
function isShiftTab(e) {
    return isKey(9 , e, false, false, true);
}
function isTab(e) {
    return isKey(9 , e);
}
function isKey(
keyCode, e, allowAlt, allowCtrl, allowShift) {
    if (allowAlt === void 0) { allowAlt = false; }
    if (allowCtrl === void 0) { allowCtrl = false; }
    if (allowShift === void 0) { allowShift = false; }
    return e.keyCode === keyCode &&
        ((allowAlt && e.altKey) || (!allowAlt && !e.altKey)) &&
        ((allowCtrl && e.ctrlKey) || (!allowCtrl && !e.ctrlKey)) &&
        ((allowShift && e.shiftKey) || (!allowShift && !e.shiftKey));
}
function getFocusableChildren(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var children = [];
    for (var _i = 0, _a = getFocusableDescendants(elem, ignoreTabIndex); _i < _a.length; _i++) {
        var descendant = _a[_i];
        if (isElementFocusableChildOf(descendant, elem)) {
            children.push(descendant);
        }
    }
    return children;
}
function isElementFocusable(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var tagName = elem.tagName.toLowerCase();
    if (elem && !elem.hidden && elem.offsetParent && window.getComputedStyle(elem).display !== 'none') {
        var hasTabIndex = elem.hasAttribute('tabindex');
        var tabindex = hasTabIndex ? parseInt(elem.getAttribute('tabindex'), 10) : NaN;
        if (!ignoreTabIndex && hasTabIndex && tabindex < 0) {
            return false;
        }
        if (tagName === 'a' && !!elem.href ||
            elem.isContentEditable) {
            return true;
        }
        if ((tagName === 'button' ||
            tagName === 'input' ||
            tagName === 'select' ||
            tagName === 'textarea') && !elem.disabled) {
            return true;
        }
        if (ignoreTabIndex && elem.getAttribute('data-is-focusable') === 'true') {
            return true;
        }
        if (!ignoreTabIndex && hasTabIndex && tabindex > -1) {
            return true;
        }
    }
    return false;
}
function getFocusableParent(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var parent = elem;
    do {
        parent = parent.parentElement;
    } while (parent &&
        !isElementFocusable(parent) &&
        !parent.isEqualNode(topElement) &&
        !parent.isEqualNode(document.body));
    return parent;
}
function queryFocusableSelector(elem) {
    var selector = 'button,input,textarea,select,a[href]:not([href=\'\']),\
      [tabindex],[contenteditable=\'true\'], [data-is-focusable=\'true\']';
    var nodes = elem.querySelectorAll(selector);
    return Array.prototype.slice.call(nodes);
}
function getFirstFocusableChild(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var elements = queryFocusableSelector(elem);
    var focusableElements = elements.filter(function (element) { return isElementFocusable(element, ignoreTabIndex); });
    var firstFocusableElement = focusableElements[0];
    if (firstFocusableElement instanceof HTMLInputElement && firstFocusableElement.type === 'radio') {
        var results = focusableElements.filter(function (element) {
            return element instanceof HTMLInputElement &&
                element.name === firstFocusableElement.name &&
                element.checked;
        });
        return results[0] || firstFocusableElement;
    }
    return firstFocusableElement;
}
function getFocusableDescendants(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var descendants = [];
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            descendants.push(node);
        }
    }
    return descendants;
}
function getFocusableSiblings(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var children = getFocusableChildren(getFocusableParent(elem, topElement));
    var siblings = [];
    var insertPointer = 0;
    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
        var child = children_1[_i];
        if (!child.isEqualNode(elem)) {
            siblings.splice(insertPointer++, 0, child);
        }
        else {
            insertPointer = 0;
        }
    }
    return siblings;
}
function getNextFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[0];
}
function getPrevFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[siblings.length - 1];
}
function isElementFocusableChildOf(elem, ancestor) {
    var parent = elem.parentElement;
    while (parent && parent.tagName !== 'BODY') {
        if (parent.isEqualNode(ancestor)) {
            return true;
        }
        if (isElementFocusable(parent)) {
            break;
        }
        parent = parent.parentElement;
    }
    return false;
}
function navigateInside(elem) {
    var children = getFocusableChildren(elem);
    if (children.length) {
        children[0].focus();
        return true;
    }
    else {
        return false;
    }
}
function navigateTo(elem) {
    if (elem && isElementFocusable(elem)) {
        elem.focus();
        return true;
    }
    else {
        return navigateInside(elem);
    }
}
function navigateOutOf(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    topElement = topElement || document.body;
    getFocusableParent(elem, topElement).focus();
}
var CanvasA11yManager =  (function () {
    function CanvasA11yManager(canvasElement, shouldHandleKeyDown) {
        if (shouldHandleKeyDown === void 0) { shouldHandleKeyDown = true; }
        this._canvasElement = canvasElement;
        this._handleKeyDown = this._handleKeyDown.bind(this);
        this._randId = Math.floor(Math.random() * 1000000);
        if (shouldHandleKeyDown) {
            this._canvasElement.addEventListener('keydown', this._handleKeyDown);
        }
    }
    CanvasA11yManager.prototype.ariaAlert = function (message) {
        var divId = 'aria_alert_' + this._randId;
        var oldAlert = document.querySelector('#' + divId);
        if (oldAlert) {
            document.body.removeChild(oldAlert);
        }
        var alertNode = document.createElement('p');
        alertNode.classList.add('Canvas-screenReaderOnly');
        alertNode.setAttribute('role', 'alert');
        alertNode.setAttribute('id', divId);
        var alertText = document.createTextNode(message);
        alertNode.appendChild(alertText);
        document.body.appendChild(alertNode);
    };
    CanvasA11yManager.prototype.navigateInside = function (elem) {
        return navigateInside(elem);
    };
    CanvasA11yManager.prototype.navigateTo = function (elem) {
        return navigateTo(elem);
    };
    CanvasA11yManager.prototype.navigateOutOf = function (elem) {
        navigateOutOf(elem);
    };
    CanvasA11yManager.prototype.clearState = function () {
        this._savedFocusedElement = undefined;
    };
    CanvasA11yManager.prototype.restoreState = function () {
        return this._savedFocusedElement ? this.navigateTo(this._savedFocusedElement) : false;
    };
    CanvasA11yManager.prototype.saveState = function (elem) {
        elem = elem || document.activeElement;
        this._savedFocusedElement = elem;
    };
    CanvasA11yManager.prototype.skipEvent = function (e) {
        e[CanvasA11yManager._SKIP_FLAG] = true;
    };
    CanvasA11yManager.prototype._shouldSkipEvent = function (e) {
        return e[CanvasA11yManager._SKIP_FLAG];
    };
    CanvasA11yManager.prototype._handleKeyDown = function (e) {
        if (this._shouldSkipEvent(e)) {
            return;
        }
        var currentElement = isElementFocusable(e.target) ?
            e.target : getFocusableParent(e.target, this._canvasElement);
        var elementToGo;
        if (currentElement) {
            if (isTab(e)) {
                var children = getFocusableChildren(this._canvasElement);
                if (children.length && !currentElement.isEqualNode(children[children.length - 1])) {
                    elementToGo = getNextFocusableElement(currentElement, this._canvasElement);
                }
            }
            else if (isShiftTab(e)) {
                var children = getFocusableChildren(this._canvasElement);
                if (children.length && !currentElement.isEqualNode(children[0])) {
                    elementToGo = getPrevFocusableElement(currentElement, this._canvasElement);
                }
            }
            else if (isEnter(e)) {
                var children = getFocusableChildren(currentElement);
                elementToGo = children.length ? children[0] : undefined;
            }
            else if (isEscape(e)) {
                elementToGo = getFocusableParent(currentElement, this._canvasElement);
            }
        }
        if (elementToGo) {
            elementToGo.focus();
            e.preventDefault();
            e.stopPropagation();
        }
    };
    CanvasA11yManager._SKIP_FLAG = 'a11y-skip';
    return CanvasA11yManager;
}());


// CONCATENATED MODULE: ./lib/propertyPane/PropertyPane.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageDirection", function() { return PageDirection; });














var PageDirection;
(function (PageDirection) {
    PageDirection[PageDirection["back"] = -1] = "back";
    PageDirection[PageDirection["next"] = 1] = "next";
})(PageDirection || (PageDirection = {}));
var CLEAR_DELAY = 100;
var NO_WEBPART_ID = 'No_Web_Part_ID';
var PropertyPane_PropertyPane =  (function (_super) {
    tslib_es6["c" /* __extends */](PropertyPane, _super);
    function PropertyPane(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isSaveButtonEnabled: false,
            saveConfirmationMessage: '',
            currentPage: 1
        };
        _this._currentlyConfiguredWebPartId = props.data.webPartId;
        _this._onChange = _this._onChange.bind(_this);
        _this._onPropertyPaneKeyDown = _this._onPropertyPaneKeyDown.bind(_this);
        _this._flipPage = _this._flipPage.bind(_this);
        _this._handleSaveClick = _this._handleSaveClick.bind(_this);
        _this._handleCloseClick = _this._handleCloseClick.bind(_this);
        _this._propertyPaneShouldLooseFocus = _this._propertyPaneShouldLooseFocus.bind(_this);
        _this._setContainerDiv = _this._setContainerDiv.bind(_this);
        _this._propertyPaneGroupStateChanged = _this._propertyPaneGroupStateChanged.bind(_this);
        _this._invalidEntries = {};
        _this._propertyPanePagesStateMap = {};
        return _this;
    }
    PropertyPane.prototype.componentWillReceiveProps = function (props) {
        if (props.data.shouldResetState) {
            this._propertyPanePagesStateMap = {};
        }
        if (this._currentlyConfiguredWebPartId !== props.data.webPartId || props.data.shouldResetState) {
            var webPartId = props.data.webPartId ? props.data.webPartId : NO_WEBPART_ID;
            this._resetState(webPartId);
        }
        else {
            this.setState({
                saveConfirmationMessage: ''
            });
        }
    };
    PropertyPane.prototype.componentDidMount = function () {
        var domNode = external__react_dom_["findDOMNode"](this);
        domNode.style.zIndex = '999';
        if (this.props.data.onRendered) {
            this.props.data.onRendered();
        }
        this._setTimeOutForFocus();
    };
    PropertyPane.prototype.componentDidUpdate = function (props) {
        if (this._isPropertyPaneReplaced) {
            this._updateTabIndexes(0, true);
            this._isPropertyPaneReplaced = false;
        }
        if (this.props.data.onRendered) {
            this.props.data.onRendered();
        }
    };
    PropertyPane.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        return !utils_Compare.shallowCompare(this.props, nextProps) ||
            !utils_Compare.shallowCompare(this.state, nextState) ||
            !!(nextProps.data.configuration && nextProps.data.configuration.showLoadingIndicator);
    };
    PropertyPane.prototype.render = function () {
        var _this = this;
        this._properties = this.props.data.properties;
        var showOverlaySpinner = this.props.data.configuration && this.props.data.configuration.showLoadingIndicator;
        return (external__react_["createElement"](office_ui_fabric_react_bundle_["Fabric"], { "data-sp-feature-tag": 'Property Pane', "data-sp-feature-instance-id": '_Property Pane' },
            external__react_["createElement"]("div", { role: 'alert', "aria-live": 'polite', className: PropertyPane_module_scss.propertyPaneScreenReaderOnly },
                external__react_["createElement"]("span", null, this.state.saveConfirmationMessage)),
            external__react_["createElement"](office_ui_fabric_react_bundle_["FocusTrapZone"], { isClickableOutsideFocusTrap: true, firstFocusableSelector: this._cssClassForActionableElement, forceFocusInsideTrap: false },
                external__react_["createElement"]("div", { className: PropertyPane_module_scss.propertyPane, role: 'dialog', "aria-label": sp_core_library_["Text"].format(Strings_resx["a" /* default */].PropertyPaneTitle, this.props.data.title), "aria-describedby": this._descriptionId, ref: function (c) { return _this._propertyPane = c; }, onKeyDown: this._onPropertyPaneKeyDown, key: this.props.data.webPartId },
                    showOverlaySpinner && (external__react_["createElement"](office_ui_fabric_react_bundle_["Overlay"], { className: PropertyPane_module_scss.overlay },
                        external__react_["createElement"](office_ui_fabric_react_bundle_["Spinner"], { className: PropertyPane_module_scss.spinner, type: office_ui_fabric_react_bundle_["SpinnerType"].large, label: Strings_resx["a" /* default */].PropertyPaneFetchingSettingsDataLabel }))),
                    external__react_["createElement"](propertyPaneTitleBar_PropertyPaneTitleBar, { title: this.props.data.title, onClose: this._handleCloseClick }),
                    external__react_["createElement"]("div", null, this._shouldRenderEmptyPage ? this._renderNoConfigurationState() : this._renderPage())))));
    };
    PropertyPane.prototype._renderNoConfigurationState = function () {
        return (external__react_["createElement"]("div", { role: 'alert', "aria-live": 'polite', className: PropertyPane_module_scss.propertyPaneDescription, "data-automation-id": 'noConfigurationPropertyPane' }, Strings_resx["a" /* default */].PropertyPaneEmptyStateDescription));
    };
    Object.defineProperty(PropertyPane.prototype, "_descriptionId", {
        get: function () {
            var page = undefined;
            if (this.props.data.configuration && this.props.data.configuration.pages) {
                var pages = this.props.data.configuration.pages;
                page = pages[this.state.currentPage - 1];
            }
            return (page && page.header && page.header.description) ? 'propertyPaneDescriptionId' : undefined;
        },
        enumerable: true,
        configurable: true
    });
    PropertyPane.prototype._renderPage = function () {
        var _this = this;
        var pages = this.props.data.configuration.pages;
        var page = pages[this.state.currentPage - 1];
        var classForPropertyPanePageContentBottom = this._getCssBottomValueForPageContentElement();
        return (external__react_["createElement"]("div", null,
            external__react_["createElement"]("div", { className: Object(office_ui_fabric_react_bundle_["css"])(classForPropertyPanePageContentBottom, PropertyPanePage_module_scss.propertyPanePageContent) },
                external__react_["createElement"](propertyPanePage_PropertyPanePage, tslib_es6["a" /* __assign */]({}, this.props.data, { pageNumber: this.state.currentPage, pageDescription: page.header ? page.header.description : '', displayGroupsAsAccordion: page.displayGroupsAsAccordion || false, onChange: this._onChange.bind(this), propertyGroups: page.groups, properties: this._properties, setEntryState: function (targetProperty, isValidEntry) {
                        _this._setEntryState(targetProperty, isValidEntry);
                    }, setContainerDiv: this._setContainerDiv, propertyPaneGroupStateChanged: this._propertyPaneGroupStateChanged, propertyPanePagesStateMap: this._propertyPanePagesStateMap, dynamicConfiguration: this.props.data.dynamicConfiguration }))),
            external__react_["createElement"](propertyPaneFooter_PropertyPaneFooter, { isReactive: this.props.data.isReactive || false, isSaveButtonEnabled: this.state.isSaveButtonEnabled, numberOfPages: (this.props.data.configuration &&
                    this.props.data.configuration.pages &&
                    this.props.data.configuration.pages.length) ? this.props.data.configuration.pages.length : 0, currentPage: this.state.currentPage, onSaveClick: this._handleSaveClick, onFlipPage: this._flipPage })));
    };
    PropertyPane.prototype._setContainerDiv = function (containerDiv) {
        this._propertyPaneContent = containerDiv;
    };
    PropertyPane.prototype._propertyPaneGroupStateChanged = function (pageNumber, groupName, isCollapsed) {
        if (!this._propertyPanePagesStateMap[pageNumber]) {
            this._propertyPanePagesStateMap[pageNumber] = {};
        }
        this._propertyPanePagesStateMap[pageNumber][groupName] = isCollapsed;
    };
    Object.defineProperty(PropertyPane.prototype, "_shouldRenderEmptyPage", {
        get: function () {
            return (!this.props.data.configuration ||
                !this.props.data.configuration.pages ||
                this.props.data.configuration.pages.length === 0 ||
                !this.props.data.configuration.pages[this.state.currentPage - 1].groups ||
                this.props.data.configuration.pages[this.state.currentPage - 1].groups.length === 0);
        },
        enumerable: true,
        configurable: true
    });
    PropertyPane.prototype._flipPage = function (direction) {
        var page = this.state.currentPage + direction;
        this.setState({
            currentPage: page
        });
        if (this.props.data.render) {
            this.props.data.render();
        }
        this._setTimeOutForFocus();
    };
    PropertyPane.prototype._setEntryState = function (targetProperty, isValidEntry) {
        if (isValidEntry) {
            if (this._invalidEntries.hasOwnProperty(targetProperty)) {
                delete this._invalidEntries[targetProperty];
            }
        }
        else {
            this._invalidEntries[targetProperty] = !isValidEntry;
        }
    };
    PropertyPane.prototype._enableSaveButton = function (enabled) {
        this.setState({
            isSaveButtonEnabled: enabled
        });
    };
    PropertyPane.prototype._onChange = function (targetProperty, value, fieldType) {
        this._properties[targetProperty] = value;
        if (!this.props.data.isReactive) {
            this._enableSaveButton(Object.keys(this._invalidEntries).length === 0);
        }
        if (!this._invalidEntries.hasOwnProperty(targetProperty)) {
            this._raiseEvent(targetProperty, value, fieldType);
        }
    };
    PropertyPane.prototype._handleSaveClick = function () {
        var _this = this;
        this.setState({
            saveConfirmationMessage: Strings_resx["a" /* default */].SaveConfirmation
        });
        this._enableSaveButton(false);
        setTimeout(function () {
            _this.setState({
                saveConfirmationMessage: ''
            });
        }, CLEAR_DELAY);
        this.props.data.onConfigurationEvent(5 );
    };
    PropertyPane.prototype._handleCloseClick = function () {
        this._resetState(NO_WEBPART_ID);
        this._updateTabIndexes(-1, false);
        this.props.data.onConfigurationEvent(4 );
    };
    PropertyPane.prototype._raiseEvent = function (targetProperty, value, fieldType) {
        this.props.data.onPropertyPaneFieldChanged(targetProperty, value, fieldType);
    };
    PropertyPane.prototype._onPropertyPaneKeyDown = function (ev) {
        if (isKey(office_ui_fabric_react_bundle_["KeyCodes"].escape, ev)) {
            ev.preventDefault();
            this._handleCloseClick();
        }
        else if (isKey(80 , ev, true)) {
            ev.preventDefault();
            this._propertyPaneShouldLooseFocus();
        }
    };
    PropertyPane.prototype._propertyPaneShouldLooseFocus = function () {
        this._resetState(NO_WEBPART_ID);
        this._updateTabIndexes(-1, false);
        this.props.data.onConfigurationEvent(6 );
    };
    PropertyPane.prototype._setTimeOutForFocus = function () {
        var _this = this;
        if (!this._isManagingFocusBySettings) {
            setTimeout(function () {
                var propertyPane = _this._shouldRenderEmptyPage ?
                    _this._propertyPane : _this._propertyPaneContent;
                _this._focusOnFirstActionableElement(propertyPane);
            }, 0);
        }
    };
    Object.defineProperty(PropertyPane.prototype, "_isManagingFocusBySettings", {
        get: function () {
            return this.props.data.configuration &&
                this.props.data.configuration.pages &&
                this.props.data.configuration.pages
                    .some(function (page) { return page.groups
                    .some(function (group) {
                    if ('primaryGroup' in group) {
                        var _a = group, primaryGroup = _a.primaryGroup, secondaryGroup = _a.secondaryGroup, showSecondaryGroup = _a.showSecondaryGroup;
                        group = showSecondaryGroup ? secondaryGroup : primaryGroup;
                    }
                    group = group;
                    return group.groupFields
                        .some(function (groupField) { return groupField.shouldFocus || false; });
                }); });
        },
        enumerable: true,
        configurable: true
    });
    PropertyPane.prototype._focusOnFirstActionableElement = function (propertyPane) {
        if (propertyPane) {
            var firstElement = getFirstFocusableChild(propertyPane);
            if (firstElement) {
                firstElement.focus();
            }
        }
    };
    PropertyPane.prototype._updateTabIndexes = function (tabIndex, ignoreTabIndexes) {
        var rootElement = this._propertyPane;
        var elements = getFocusableChildren(rootElement, ignoreTabIndexes);
        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
            var el = elements_1[_i];
            el.tabIndex = tabIndex;
        }
    };
    PropertyPane.prototype._resetState = function (webPartId) {
        this._isPropertyPaneReplaced = true;
        this._currentlyConfiguredWebPartId = webPartId;
        this.setState({
            isSaveButtonEnabled: false,
            saveConfirmationMessage: '',
            currentPage: 1
        });
    };
    PropertyPane.prototype._getCssBottomValueForPageContentElement = function () {
        var pageContentBottom = undefined;
        if (!this.props.data.isReactive) {
            pageContentBottom = PropertyPane_module_scss.oneRowFooter;
        }
        if (this.props.data.configuration &&
            this.props.data.configuration.pages &&
            this.props.data.configuration.pages.length &&
            this.props.data.configuration.pages.length > 1) {
            if (!pageContentBottom) {
                pageContentBottom = PropertyPane_module_scss.oneRowFooter;
            }
            else {
                pageContentBottom = PropertyPane_module_scss.twoRowFooter;
            }
        }
        return pageContentBottom;
    };
    PropertyPane = tslib_es6["b" /* __decorate */]([
        decorators_["sealed"]
    ], PropertyPane);
    return PropertyPane;
}(external__react_["Component"]));
/* harmony default export */ var propertyPane_PropertyPane = __webpack_exports__["default"] = (PropertyPane_PropertyPane);


/***/ })
]);
//# sourceMappingURL=0.0_d5e0c86dabb0290db44d.js.map
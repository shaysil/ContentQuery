define("f9e737b7-f0df-4597-ba8c-3060f82380db_1.8.0", ["react","@microsoft/load-themed-styles","@microsoft/sp-core-library","@microsoft/sp-diagnostics","react-dom","resx-strings","@microsoft/office-ui-fabric-react-bundle","@microsoft/decorators","@microsoft/sp-component-base","@microsoft/sp-lodash-subset"], function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_16__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonpf9e737b7_f0df_4597_ba8c_3060f82380db_1_8_0"];
/******/ 	window["webpackJsonpf9e737b7_f0df_4597_ba8c_3060f82380db_1_8_0"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		1: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData === 0) {
/******/ 			return new Promise(function(resolve) { resolve(); });
/******/ 		}
/******/
/******/ 		// a Promise means "currently loading".
/******/ 		if(installedChunkData) {
/******/ 			return installedChunkData[2];
/******/ 		}
/******/
/******/ 		// setup Promise in chunk cache
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunkData[2] = promise;
/******/
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + ({}[chunkId]||chunkId) + "_" + {"0":"d5e0c86dabb0290db44d"}[chunkId] + ".js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) {
/******/ 					chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				}
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		head.appendChild(script);
/******/
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	// Set the webpack public path
/******/ 	(function () {
/******/ 	  var scripts = document.getElementsByTagName('script');
/******/ 	  var regex = (typeof spScriptNamePattern !== 'undefined') ? spScriptNamePattern : new RegExp('\\/sp-property-pane(_[a-z0-9-]+)*\\.js', 'i');
/******/ 	  var publicPath;
/******/ 	
/******/ 	  if (scripts && scripts.length) {
/******/ 	    for (var i = 0; i < scripts.length; i++) {
/******/ 	      if (!scripts[i]) continue;
/******/ 	      var path = scripts[i].getAttribute('src');
/******/ 	      if (path && path.match(regex)) {
/******/ 	        publicPath = path.substring(0, path.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	
/******/ 	  if (!publicPath) {
/******/ 	    for (var global in window.__setWebpackPublicPathLoaderSrcRegistry__) {
/******/ 	      if (global && global.match(regex)) {
/******/ 	        publicPath = global.substring(0, global.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	  __webpack_require__.p = publicPath;
/******/ 	})();
/******/ 	
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PropertyPaneFieldType; });
var PropertyPaneFieldType;
(function (PropertyPaneFieldType) {
    PropertyPaneFieldType[PropertyPaneFieldType["Custom"] = 1] = "Custom";
    PropertyPaneFieldType[PropertyPaneFieldType["CheckBox"] = 2] = "CheckBox";
    PropertyPaneFieldType[PropertyPaneFieldType["TextField"] = 3] = "TextField";
    PropertyPaneFieldType[PropertyPaneFieldType["Toggle"] = 5] = "Toggle";
    PropertyPaneFieldType[PropertyPaneFieldType["Dropdown"] = 6] = "Dropdown";
    PropertyPaneFieldType[PropertyPaneFieldType["Label"] = 7] = "Label";
    PropertyPaneFieldType[PropertyPaneFieldType["Slider"] = 8] = "Slider";
    PropertyPaneFieldType[PropertyPaneFieldType["Heading"] = 9] = "Heading";
    PropertyPaneFieldType[PropertyPaneFieldType["ChoiceGroup"] = 10] = "ChoiceGroup";
    PropertyPaneFieldType[PropertyPaneFieldType["Button"] = 11] = "Button";
    PropertyPaneFieldType[PropertyPaneFieldType["HorizontalRule"] = 12] = "HorizontalRule";
    PropertyPaneFieldType[PropertyPaneFieldType["Link"] = 13] = "Link";
    PropertyPaneFieldType[PropertyPaneFieldType["DynamicField"] = 14] = "DynamicField";
    PropertyPaneFieldType[PropertyPaneFieldType["DynamicTextField"] = 15] = "DynamicTextField";
    PropertyPaneFieldType[PropertyPaneFieldType["DynamicFieldSet"] = 16] = "DynamicFieldSet";
    PropertyPaneFieldType[PropertyPaneFieldType["SpinButton"] = 17] = "SpinButton";
})(PropertyPaneFieldType || (PropertyPaneFieldType = {}));


/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var key = '_/GZrHjuQO4erDQbBRI2XSA';
var allStrings = ( false) ?
    require("../resx-strings/en-us.json") :
    __webpack_require__(10);
var strings = allStrings[key];
/* harmony default export */ __webpack_exports__["a"] = (strings);


/***/ }),
/* 3 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PropertyPaneButtonType; });
var PropertyPaneButtonType;
(function (PropertyPaneButtonType) {
    PropertyPaneButtonType[PropertyPaneButtonType["Normal"] = 0] = "Normal";
    PropertyPaneButtonType[PropertyPaneButtonType["Primary"] = 1] = "Primary";
    PropertyPaneButtonType[PropertyPaneButtonType["Hero"] = 2] = "Hero";
    PropertyPaneButtonType[PropertyPaneButtonType["Compound"] = 3] = "Compound";
    PropertyPaneButtonType[PropertyPaneButtonType["Command"] = 4] = "Command";
    PropertyPaneButtonType[PropertyPaneButtonType["Icon"] = 5] = "Icon";
})(PropertyPaneButtonType || (PropertyPaneButtonType = {}));


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(5);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@microsoft/sp-diagnostics"
var sp_diagnostics_ = __webpack_require__(6);
var sp_diagnostics__default = /*#__PURE__*/__webpack_require__.n(sp_diagnostics_);

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(1);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: external "react-dom"
var external__react_dom_ = __webpack_require__(7);
var external__react_dom__default = /*#__PURE__*/__webpack_require__.n(external__react_dom_);

// EXTERNAL MODULE: ./lib/loc/Strings.resx.js
var Strings_resx = __webpack_require__(2);

// CONCATENATED MODULE: ./lib/propertyPaneController/PropertyPaneController.module.scss.js
__webpack_require__(11);
var styles = {
    showPane: 'showPane_40f0b7cc',
    spPropertyPaneContainer: 'spPropertyPaneContainer_40f0b7cc',
    shrinkContent: 'shrinkContent_40f0b7cc',
};
/* harmony default export */ var PropertyPaneController_module_scss = (styles);

// CONCATENATED MODULE: ./lib/propertyPaneController/PropertyPaneController.js







var PropertyPaneController_PropertyPaneController =  (function () {
    function PropertyPaneController(callback) {
        this._logSource = sp_diagnostics_["_LogSource"].create('PropertyPaneController');
        this._consumers = new Map();
        this._lifeCycleEventCallback = callback;
        this._constructor();
    }
    PropertyPaneController.prototype.registerConsumer = function (instanceId, consumer) {
        sp_core_library_["Validate"].isNonemptyString(instanceId, 'instanceId');
        sp_core_library_["Validate"].isNotNullOrUndefined(consumer, 'consumer');
        this._consumers.set(instanceId, consumer);
    };
    PropertyPaneController.prototype.isConsumerRegistered = function (instanceId) {
        return this._consumers.has(instanceId);
    };
    Object.defineProperty(PropertyPaneController.prototype, "currentlyConfiguredConsumerId", {
        get: function () { return this._currentlyConfiguredConsumerId; },
        enumerable: true,
        configurable: true
    });
    PropertyPaneController.prototype.requestAction = function (toBeConfiguredConsumerId, propertyPaneAction, renderedByWebPart) {
        if (propertyPaneAction === void 0) { propertyPaneAction = 4 ; }
        var noOp = renderedByWebPart &&
            propertyPaneAction === 5  &&
            toBeConfiguredConsumerId !== this._currentlyConfiguredConsumerId;
        if (!noOp) {
            var toBeConfiguredConsumer = this._tryGetConsumer(toBeConfiguredConsumerId);
            this._setPropertyPaneDOMElements();
            var paneWillOpen = !this._isOpen &&
                (propertyPaneAction === 1  || propertyPaneAction === 3 );
            var activeComponentChanged = false;
            if (toBeConfiguredConsumerId &&
                this._currentlyConfiguredConsumerId &&
                (toBeConfiguredConsumerId !== this._currentlyConfiguredConsumerId || paneWillOpen)) {
                activeComponentChanged = true;
                if (toBeConfiguredConsumer && (this._isOpen || paneWillOpen)) {
                    toBeConfiguredConsumer._loadPropertyPaneResources();
                }
                this._fireConfigurationEvent(toBeConfiguredConsumerId, 7 );
            }
            if (propertyPaneAction !== 5 ) {
                if (propertyPaneAction === 3 ) {
                    var internalToOverallComponentEdit = !!this._isPaneRenderedByWebPart !== !!renderedByWebPart;
                    if (!activeComponentChanged && internalToOverallComponentEdit) {
                        propertyPaneAction = 5 ;
                    }
                }
                this._isPaneRenderedByWebPart = !!renderedByWebPart;
            }
            this._executeAction(toBeConfiguredConsumer, toBeConfiguredConsumerId, propertyPaneAction);
            this._currentlyConfiguredConsumerId = toBeConfiguredConsumerId;
        }
        else {
            sp_diagnostics_["_TraceLogger"].logVerbose(this._logSource, sp_core_library_["Text"].format(Strings_resx["a" /* default */].NoOpOnRefreshPropertyPaneText, toBeConfiguredConsumerId));
        }
    };
    PropertyPaneController.prototype.isRenderedByConsumer = function () {
        return this._isPaneRenderedByWebPart;
    };
    PropertyPaneController.prototype.isOpen = function () {
        return this._isOpen;
    };
    PropertyPaneController.prototype.onConsumerDelete = function (id) {
        sp_core_library_["Validate"].isNonemptyString(id, 'id');
        if (id === this._currentlyConfiguredConsumerId) {
            if (this._isOpen) {
                this._renderPropertyPane(undefined, true);
            }
            this._currentlyConfiguredConsumerId = undefined;
        }
    };
    PropertyPaneController.prototype._constructor = function () {
        this._propertyPaneContainerId = sp_core_library_["Environment"].type !== sp_core_library_["EnvironmentType"].ClassicSharePoint ?
            PropertyPaneController.PROPERTY_PANE_CONTAINER_ID :
            PropertyPaneController.PROPERTY_PANE_CONTAINER_NOFLEXBOX_ID;
        this._onPropertyPaneFieldChanged = this._onPropertyPaneFieldChanged.bind(this);
        this._onConfigurationEvent = this._onConfigurationEvent.bind(this);
        this._fireConfigurationEvent = this._fireConfigurationEvent.bind(this);
    };
    PropertyPaneController.prototype._executeAction = function (toBeConfiguredConsumer, toBeConfiguredConsumerInstanceId, propertyPaneAction) {
        switch (propertyPaneAction) {
            case 1 :
                var paneOpenBeforeRender = this._isOpen;
                this._renderPropertyPane(toBeConfiguredConsumer, true, true);
                this._showPropertyPane();
                if (paneOpenBeforeRender) {
                    this._fireNoToggleConfigurationEvents(toBeConfiguredConsumerInstanceId);
                }
                else {
                    this._firePostToggleConfigurationEvents();
                }
                break;
            case 2 :
                if (this._isOpen) {
                    this._hidePropertyPane();
                    this._firePostToggleConfigurationEvents();
                }
                break;
            case 3 :
                if (this._isOpen) {
                    this._hidePropertyPane();
                }
                else {
                    this._renderPropertyPane(toBeConfiguredConsumer, true, true);
                    this._showPropertyPane();
                }
                this._firePostToggleConfigurationEvents();
                break;
            case 4 :
                if (this._isOpen) {
                    this._fireNoToggleConfigurationEvents(toBeConfiguredConsumerInstanceId);
                    if (this._isCurrentlyConfiguredPropertyPaneReactive) {
                        this._renderPropertyPane(toBeConfiguredConsumer, true, false);
                    }
                    else {
                        this._renderPropertyPane(toBeConfiguredConsumer, true, false);
                    }
                }
                break;
            case 5 :
                if (this._isOpen) {
                    this._renderPropertyPane(toBeConfiguredConsumer, true, false);
                }
                break;
        }
        if (this._isOpen !== false && toBeConfiguredConsumer) {
            var wpContext = toBeConfiguredConsumer.context; 
            var wpAlias = wpContext && wpContext._manifest && wpContext._manifest.alias;
            var isInternal = wpContext && wpContext._manifest && wpContext._manifest.isInternal || false;
            var logEntry = new sp_diagnostics_["_LogEntry"](this._logSource.id, 'PropertyPaneOpened', sp_diagnostics_["_LogType"].Event, {
                'alias': wpAlias,
                'isInternal': isInternal.toString()
            });
            sp_diagnostics_["_EngagementLogger"].logEventWithLogEntry(logEntry);
        }
    };
    PropertyPaneController.prototype._showPropertyPane = function () {
        if (this._pageContentElement) {
            this._pageContentElement.classList.add(PropertyPaneController_module_scss.shrinkContent);
        }
        else {
            this._propertyPaneContainer.style.top = '50px';
            this._propertyPaneContainer.style.zIndex = '999';
        }
        if (this._workbenchCommandBarElement) {
            this._workbenchCommandBarElement.classList.add(PropertyPaneController_module_scss.shrinkContent);
        }
        this._propertyPaneContainer.classList.add(PropertyPaneController_module_scss.showPane);
        this._isOpen = true;
    };
    PropertyPaneController.prototype._hidePropertyPane = function () {
        var clearPropertyPaneReference = false;
        if (this._pageContentElement) {
            this._pageContentElement.classList.remove(PropertyPaneController_module_scss.shrinkContent);
            if (this._propertyPaneElement) {
                external__react_dom_["unmountComponentAtNode"](this._propertyPaneElement);
                clearPropertyPaneReference = true;
            }
        }
        else if (this._propertyPaneElement) {
            external__react_dom_["unmountComponentAtNode"](this._propertyPaneElement);
            clearPropertyPaneReference = true;
        }
        if (clearPropertyPaneReference) {
            this._propertyPaneElement = undefined;
        }
        if (this._workbenchCommandBarElement) {
            this._workbenchCommandBarElement.classList.remove(PropertyPaneController_module_scss.shrinkContent);
        }
        this._propertyPaneContainer.classList.remove(PropertyPaneController_module_scss.showPane);
        this._isOpen = false;
    };
    PropertyPaneController.prototype._renderPropertyPane = function (currentConsumer, recreatePropertyPane, reset) {
        var _this = this;
        var qosMonitor = new sp_diagnostics_["_QosMonitor"]('PropertyPaneController.renderPropertyPane');
        if (currentConsumer) {
            currentConsumer._getPropertyPaneData().then(function (data) {
                if (_this._currentlyConfiguredConsumerId === data.webPartId) {
                    window.postMessage('Property pane will open', window.location.origin);
                    _this._buildAndLoadPropertyPane(data, reset);
                }
            }).catch(function (error) {
                sp_diagnostics_["_TraceLogger"].logErrorData({
                    source: _this._logSource,
                    error: error
                });
                qosMonitor.writeUnexpectedFailure('UnhandledError', error);
                throw error;
            });
        }
        else {
            this._currentPropertyPaneData = this._getEmptyPropertyPaneData();
            this._loadPropertyPaneComponent(recreatePropertyPane);
        }
    };
    PropertyPaneController.prototype._buildAndLoadPropertyPane = function (propertyPaneData, reset) {
        var _this = this;
        this._currentPropertyPaneData = propertyPaneData;
        propertyPaneData.onPropertyPaneFieldChanged = this._onPropertyPaneFieldChanged;
        propertyPaneData.onConfigurationEvent = this._onConfigurationEvent;
        propertyPaneData.render = function () { _this._reRender(); };
        propertyPaneData.shouldResetState = reset;
        if (propertyPaneData.configuration &&
            propertyPaneData.configuration.showLoadingIndicator) {
            var delay = propertyPaneData.configuration.loadingIndicatorDelayTime === undefined ?
                500 : propertyPaneData.configuration.loadingIndicatorDelayTime;
            setTimeout(function () {
                if (propertyPaneData.configuration.showLoadingIndicator) {
                    _this._loadPropertyPaneComponent(true);
                }
            }, delay);
        }
        else {
            this._loadPropertyPaneComponent(true);
        }
    };
    PropertyPaneController.prototype._loadPropertyPaneComponent = function (recreatePropertyPane) {
        var _this = this;
        var qosMonitor = new sp_diagnostics_["_QosMonitor"]('PropertyPaneController.loadPropertyPaneComponent');
        __webpack_require__.e/* import() */(0).then(__webpack_require__.bind(null, 145))
            .then(function (propertyPane) {
            var insertIntoDom = false;
            if (recreatePropertyPane) {
                if (!_this._propertyPaneElement) {
                    _this._propertyPaneElement = document.createElement('div');
                    insertIntoDom = true;
                }
            }
            if (_this._propertyPaneElement) {
                _this._propertyPaneElement.className = _this._currentPropertyPaneData.webPartId;
                var el = external__react_["createElement"](propertyPane.default, { data: _this._currentPropertyPaneData });
                external__react_dom_["render"](el, _this._propertyPaneElement);
            }
            if (_this._propertyPaneContainer) {
                if (insertIntoDom) {
                    _this._clearPropertyPaneContainer();
                    if (_this._propertyPaneElement) {
                        _this._propertyPaneContainer.appendChild(_this._propertyPaneElement);
                    }
                }
            }
            else {
                if (insertIntoDom && document.body.lastChild && _this._propertyPaneElement) {
                    document.body.insertBefore(_this._propertyPaneElement, document.body.lastChild.nextSibling);
                }
            }
        })
            .catch(function (error) {
            sp_diagnostics_["_TraceLogger"].logErrorData({
                source: _this._logSource,
                error: error
            });
            qosMonitor.writeUnexpectedFailure('UnhandledError', error);
        });
    };
    PropertyPaneController.prototype._reRender = function () {
        var consumer = this._tryGetConsumer(this._currentPropertyPaneData.webPartId);
        if (consumer) {
            this._renderPropertyPane(consumer);
        }
    };
    PropertyPaneController.prototype._onPropertyPaneFieldChanged = function (propertyName, newValue, fieldType) {
        sp_core_library_["Validate"].isNonemptyString(propertyName, 'propertyName');
        if (!this._currentPropertyPaneData.webPartId) {
            throw new Error('onPropertyPaneFieldChanged event is not expected when no consumer is being configured');
        }
        var consumer = this._tryGetConsumer(this._currentPropertyPaneData.webPartId);
        if (consumer) {
            consumer._onPropertyPaneFieldChanged(propertyName, newValue, fieldType);
            this._renderPropertyPane(consumer);
        }
        if (this._isCurrentlyConfiguredPropertyPaneReactive()) {
            this._resetConfigurationCompleteTimeout();
        }
    };
    PropertyPaneController.prototype._onConfigurationEvent = function (configurationEvent) {
        switch (configurationEvent) {
            case 4 :
                this._hidePropertyPane();
                this._firePostToggleConfigurationEvents();
                break;
            case 5 :
            case 6 :
                this._fireConfigurationEvent(this._currentlyConfiguredConsumerId, configurationEvent);
                this._fireConfigurationEvent(this._currentlyConfiguredConsumerId, 2 );
                break;
        }
    };
    PropertyPaneController.prototype._firePostToggleConfigurationEvents = function () {
        var _this = this;
        if (this._isOpen) {
            window.setTimeout(function () {
                _this._fireConfigurationEvent(_this._currentlyConfiguredConsumerId, 3 );
                _this._fireConfigurationEvent(_this._currentlyConfiguredConsumerId, 1 );
                window.postMessage('Property pane toggled', window.location.origin);
            }, PropertyPaneController.ANIMATION_TIMEOUT);
        }
        else {
            this._fireConfigurationEvent(this._currentlyConfiguredConsumerId, 2 );
            window.setTimeout(function () {
                _this._fireConfigurationEvent(_this._currentlyConfiguredConsumerId, 4 );
                window.postMessage('Property pane toggled', window.location.origin);
            }, PropertyPaneController.ANIMATION_TIMEOUT);
        }
    };
    PropertyPaneController.prototype._fireNoToggleConfigurationEvents = function (id) {
        this._fireConfigurationEvent(this._currentlyConfiguredConsumerId, 2 );
        this._fireConfigurationEvent(id, 1 );
    };
    PropertyPaneController.prototype._fireConfigurationEvent = function (componentId, configurationEvent) {
        this._clearConfigurationCompleteTimeout();
        var consumer = this._tryGetConsumer(componentId);
        if (consumer) {
            if (this._lifeCycleEventCallback) {
                this._lifeCycleEventCallback(configurationEvent, componentId);
            }
            consumer._onPropertyPaneLifeCycleEvent(configurationEvent);
        }
    };
    PropertyPaneController.prototype._setPropertyPaneDOMElements = function () {
        var workbenchElement = document.getElementById('workbenchPageContent');
        if (workbenchElement) {
            this._pageContentElement = workbenchElement;
            this._workbenchCommandBarElement = document.getElementById('workbenchCommandBar');
        }
        else {
            this._pageContentElement = document.getElementById('spPageChromeAppDiv');
        }
        if (!this._pageContentElement) {
            if (!this._propertyPaneContainer) {
                this._propertyPaneContainer = document.createElement('div');
                this._propertyPaneContainer.id = this._propertyPaneContainerId;
                this._propertyPaneContainer.className = this._propertyPaneContainerId;
                document.body.appendChild(this._propertyPaneContainer);
            }
        }
        else {
            this._propertyPaneContainer = document.getElementById(this._propertyPaneContainerId) ||
                document.getElementById(PropertyPaneController.PROPERTY_PANE_CONTAINER_NOFLEXBOX_ID);
        }
    };
    PropertyPaneController.prototype._clearPropertyPaneContainer = function () {
        while (this._propertyPaneContainer && this._propertyPaneContainer.firstChild) {
            this._propertyPaneContainer.removeChild(this._propertyPaneContainer.firstChild);
        }
    };
    PropertyPaneController.prototype._resetConfigurationCompleteTimeout = function () {
        this._clearConfigurationCompleteTimeout();
        this._configurationCompletionTimeout = window.setTimeout(this._fireConfigurationEvent, PropertyPaneController.CONFIGURATION_COMPLETE_TIMEOUT, this._currentlyConfiguredConsumerId, 2 );
    };
    PropertyPaneController.prototype._clearConfigurationCompleteTimeout = function () {
        if (this._configurationCompletionTimeout) {
            window.clearTimeout(this._configurationCompletionTimeout);
            this._configurationCompletionTimeout = undefined;
        }
    };
    PropertyPaneController.prototype._isCurrentlyConfiguredPropertyPaneReactive = function () {
        if (this._currentlyConfiguredConsumerId) {
            var consumer = this._tryGetConsumer(this._currentlyConfiguredConsumerId);
            var isReactive = this._currentPropertyPaneData ?
                this._currentPropertyPaneData.isReactive :
                consumer && !consumer._isPropertyPaneReactive();
            return !!isReactive;
        }
        return false;
    };
    PropertyPaneController.prototype._tryGetConsumer = function (id) {
        return this._consumers.get(id);
    };
    PropertyPaneController.prototype._getEmptyPropertyPaneData = function () {
        return {
            webPartId: undefined,
            title: undefined,
            shouldResetState: true,
            onPropertyPaneFieldChanged: undefined,
            onConfigurationEvent: this._onConfigurationEvent,
            onRendered: undefined,
            properties: undefined,
            configuration: undefined,
            dynamicConfiguration: undefined
        };
    };
    PropertyPaneController.ANIMATION_TIMEOUT = 400;
    PropertyPaneController.CONFIGURATION_COMPLETE_TIMEOUT = 5000;
    PropertyPaneController.PROPERTY_PANE_CONTAINER_ID = 'spPropertyPaneContainer';
    PropertyPaneController.PROPERTY_PANE_CONTAINER_NOFLEXBOX_ID = 'spPropertyPaneContainerNoFlexbox';
    return PropertyPaneController;
}());
/* harmony default export */ var propertyPaneController_PropertyPaneController = (PropertyPaneController_PropertyPaneController);

// EXTERNAL MODULE: ./lib/propertyPaneFields/propertyPaneField/IPropertyPaneField.js
var IPropertyPaneField = __webpack_require__(0);

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneCustomField/PropertyPaneCustomField.js

function PropertyPaneCustomField(properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].Custom,
        targetProperty: undefined,
        properties: properties
    };
}

// EXTERNAL MODULE: ./lib/propertyPaneFields/propertyPaneButton/IPropertyPaneButton.js
var IPropertyPaneButton = __webpack_require__(8);

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneButton/PropertyPaneButton.js

function PropertyPaneButton(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].Button,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneCheckBox/PropertyPaneCheckbox.js

function PropertyPaneCheckbox(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].CheckBox,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneChoiceGroup/PropertyPaneChoiceGroup.js

function PropertyPaneChoiceGroup(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].ChoiceGroup,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneDropdown/IPropertyPaneDropdown.js
var PropertyPaneDropdownOptionType;
(function (PropertyPaneDropdownOptionType) {
    PropertyPaneDropdownOptionType[PropertyPaneDropdownOptionType["Normal"] = 0] = "Normal";
    PropertyPaneDropdownOptionType[PropertyPaneDropdownOptionType["Divider"] = 1] = "Divider";
    PropertyPaneDropdownOptionType[PropertyPaneDropdownOptionType["Header"] = 2] = "Header";
})(PropertyPaneDropdownOptionType || (PropertyPaneDropdownOptionType = {}));

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneDropdown/PropertyPaneDropdown.js

function PropertyPaneDropdown(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].Dropdown,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneDynamicField/PropertyPaneDynamicField.js

function PropertyPaneDynamicField(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicField,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneDynamicFieldSet/PropertyPaneDynamicFieldSet.js

function PropertyPaneDynamicFieldSet(properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicFieldSet,
        targetProperty: '',
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneHorizontalRule/PropertyPaneHorizontalRule.js

function PropertyPaneHorizontalRule() {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].HorizontalRule,
        targetProperty: undefined,
        properties: undefined
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneLabel/PropertyPaneLabel.js

function PropertyPaneLabel(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].Label,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneLink/PropertyPaneLink.js

function PropertyPaneLink(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].Link,
        targetProperty: undefined,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneSlider/PropertyPaneSlider.js

function PropertyPaneSlider(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].Slider,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneTextField/PropertyPaneTextField.js

function PropertyPaneTextField(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].TextField,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneDynamicTextField/PropertyPaneDynamicTextField.js

function PropertyPaneDynamicTextField(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].DynamicTextField,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneToggle/PropertyPaneToggle.js

function PropertyPaneToggle(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].Toggle,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/propertyPaneFields/propertyPaneSpinButton/PropertyPaneSpinButton.js

function PropertyPaneSpinButton(targetProperty, properties) {
    return {
        type: IPropertyPaneField["a" /* PropertyPaneFieldType */].SpinButton,
        targetProperty: targetProperty,
        properties: properties
    };
}

// CONCATENATED MODULE: ./lib/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "_PropertyPaneController", function() { return propertyPaneController_PropertyPaneController; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneFieldType", function() { return IPropertyPaneField["a" /* PropertyPaneFieldType */]; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneCustomField", function() { return PropertyPaneCustomField; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneButtonType", function() { return IPropertyPaneButton["a" /* PropertyPaneButtonType */]; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneButton", function() { return PropertyPaneButton; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneCheckbox", function() { return PropertyPaneCheckbox; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneChoiceGroup", function() { return PropertyPaneChoiceGroup; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneDropdownOptionType", function() { return PropertyPaneDropdownOptionType; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneDropdown", function() { return PropertyPaneDropdown; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneDynamicField", function() { return PropertyPaneDynamicField; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneDynamicFieldSet", function() { return PropertyPaneDynamicFieldSet; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneHorizontalRule", function() { return PropertyPaneHorizontalRule; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneLabel", function() { return PropertyPaneLabel; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneLink", function() { return PropertyPaneLink; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneSlider", function() { return PropertyPaneSlider; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneTextField", function() { return PropertyPaneTextField; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneDynamicTextField", function() { return PropertyPaneDynamicTextField; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneToggle", function() { return PropertyPaneToggle; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "PropertyPaneSpinButton", function() { return PropertyPaneSpinButton; });





















/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(12);
var loader = __webpack_require__(4);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "[id^=spPropertyPaneContainer].showPane_40f0b7cc{width:340px}[id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_40f0b7cc{position:absolute;top:50px;bottom:0;z-index:999}[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_40f0b7cc{right:-340px}[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_40f0b7cc{left:-340px}[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].showPane_40f0b7cc{right:0}[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].showPane_40f0b7cc{left:0}[dir=ltr] [id^=spPageChromeAppDiv].shrinkContent_40f0b7cc{right:340px}[dir=rtl] [id^=spPageChromeAppDiv].shrinkContent_40f0b7cc{left:340px}[dir=ltr] [id^=workbenchPageContent].shrinkContent_40f0b7cc{right:340px}[dir=rtl] [id^=workbenchPageContent].shrinkContent_40f0b7cc{left:340px}[dir=ltr] [id^=workbenchCommandBar].shrinkContent_40f0b7cc{padding-right:340px}[dir=rtl] [id^=workbenchCommandBar].shrinkContent_40f0b7cc{padding-left:340px}", ""]);

// exports


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_14__;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_15__;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_16__;

/***/ })
/******/ ])});;
//# sourceMappingURL=sp-property-pane.js.map
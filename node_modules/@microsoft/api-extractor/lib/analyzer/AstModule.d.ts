import * as ts from 'typescript';
import { AstSymbol } from './AstSymbol';
export declare class AstModuleExportInfo {
    readonly exportedLocalSymbols: Map<string, AstSymbol>;
    readonly starExportedExternalModules: Set<AstModule>;
}
/**
 * An internal data structure that represents a source file that is analyzed by AstSymbolTable.
 */
export declare class AstModule {
    readonly sourceFile: ts.SourceFile;
    readonly moduleSymbol: ts.Symbol;
    /**
     * Example:  "@microsoft/node-core-library/lib/FileSystem"
     * but never: "./FileSystem"
     */
    readonly externalModulePath: string | undefined;
    readonly starExportedModules: Set<AstModule>;
    readonly cachedExportedSymbols: Map<string, AstSymbol>;
    astModuleExportInfo: AstModuleExportInfo | undefined;
    constructor(sourceFile: ts.SourceFile, moduleSymbol: ts.Symbol, externalModulePath: string | undefined);
    readonly isExternal: boolean;
}

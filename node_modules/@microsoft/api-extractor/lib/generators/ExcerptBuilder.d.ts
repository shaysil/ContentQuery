import * as ts from 'typescript';
import { IExcerptToken, IExcerptTokenRange } from '../api/mixins/Excerpt';
/**
 * Used to provide ExcerptBuilder with a list of nodes whose token range we want to capture.
 */
export interface IExcerptBuilderNodeToCapture {
    /**
     * The node to capture
     */
    node: ts.Node | undefined;
    /**
     * The token range whose startIndex/endIndex will be overwritten with the indexes for the
     * tokens corresponding to IExcerptBuilderNodeToCapture.node
     */
    tokenRange: IExcerptTokenRange;
}
/**
 * Options for ExcerptBuilder
 */
export interface ISignatureBuilderOptions {
    /**
     * The AST node that we will traverse to extract tokens
     */
    startingNode: ts.Node;
    /**
     * An AST node to stop at (e.g. the "{" after a class declaration).
     * If omitted, then all child nodes for `startingNode` will be processed
     */
    nodeToStopAt?: ts.SyntaxKind;
    /**
     * A list of child nodes whose token ranges we want to capture
     */
    nodesToCapture?: IExcerptBuilderNodeToCapture[];
}
export declare class ExcerptBuilder {
    static build(options: ISignatureBuilderOptions): IExcerptToken[];
    static createEmptyTokenRange(): IExcerptTokenRange;
    private static _buildSpan;
    private static _appendToken;
}

{"version":3,"file":"UnlinkManager.js","sourceRoot":"","sources":["../../src/logic/UnlinkManager.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,6BAA6B;AAG7B,sDAAmD;AACnD,oEAA0D;AAE1D;;GAEG;AACH,MAAa,aAAa;IAGxB,YAAmB,iBAAoC;QACrD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAC9C,CAAC;IAED;;;OAGG;IACI,MAAM;QACX,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;IAChC,CAAC;IAED;;;SAGK;IACG,eAAe;QACrB,IAAI,iBAAiB,GAAY,KAAK,CAAC;QAEvC,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YAC1D,MAAM,iBAAiB,GAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;YACvF,IAAI,8BAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,iBAAiB,CAAC,CAAC;gBAC5C,qBAAS,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;gBACnD,iBAAiB,GAAG,IAAI,CAAC;aAC1B;SACF;QAED,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACK,eAAe;QACrB,qBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;IACrE,CAAC;CACF;AA1CD,sCA0CC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\n\r\nimport { RushConfiguration } from '../api/RushConfiguration';\r\nimport { Utilities } from '../utilities/Utilities';\r\nimport { FileSystem } from '@microsoft/node-core-library';\r\n\r\n/**\r\n * This class implements the logic for \"rush unlink\"\r\n */\r\nexport class UnlinkManager {\r\n  private _rushConfiguration: RushConfiguration;\r\n\r\n  public constructor(rushConfiguration: RushConfiguration) {\r\n    this._rushConfiguration = rushConfiguration;\r\n  }\r\n\r\n  /**\r\n   * Delete flag file and all the existing node_modules\r\n   * symlinks\r\n   */\r\n  public unlink(): boolean {\r\n    this._deleteFlagFile();\r\n    return this._deleteSymlinks();\r\n  }\r\n\r\n  /**\r\n   * Delete all the node_modules symlinks of configured Rush\r\n   * projects\r\n   * */\r\n  private _deleteSymlinks(): boolean {\r\n    let didDeleteSymlinks: boolean = false;\r\n\r\n    for (const rushProject of this._rushConfiguration.projects) {\r\n      const localModuleFolder: string = path.join(rushProject.projectFolder, 'node_modules');\r\n      if (FileSystem.exists(localModuleFolder)) {\r\n        console.log('Purging ' + localModuleFolder);\r\n        Utilities.dangerouslyDeletePath(localModuleFolder);\r\n        didDeleteSymlinks = true;\r\n      }\r\n    }\r\n\r\n    return didDeleteSymlinks;\r\n  }\r\n\r\n  /**\r\n   * Delete the flag file if it exists; this will ensure that\r\n   * a full \"rush link\" is required next time\r\n   */\r\n  private _deleteFlagFile(): void {\r\n    Utilities.deleteFile(this._rushConfiguration.rushLinkJsonFilename);\r\n  }\r\n}"]}
"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const Utilities_1 = require("../utilities/Utilities");
const node_core_library_1 = require("@microsoft/node-core-library");
/**
 * This class implements the logic for "rush unlink"
 */
class UnlinkManager {
    constructor(rushConfiguration) {
        this._rushConfiguration = rushConfiguration;
    }
    /**
     * Delete flag file and all the existing node_modules
     * symlinks
     */
    unlink() {
        this._deleteFlagFile();
        return this._deleteSymlinks();
    }
    /**
     * Delete all the node_modules symlinks of configured Rush
     * projects
     * */
    _deleteSymlinks() {
        let didDeleteSymlinks = false;
        for (const rushProject of this._rushConfiguration.projects) {
            const localModuleFolder = path.join(rushProject.projectFolder, 'node_modules');
            if (node_core_library_1.FileSystem.exists(localModuleFolder)) {
                console.log('Purging ' + localModuleFolder);
                Utilities_1.Utilities.dangerouslyDeletePath(localModuleFolder);
                didDeleteSymlinks = true;
            }
        }
        return didDeleteSymlinks;
    }
    /**
     * Delete the flag file if it exists; this will ensure that
     * a full "rush link" is required next time
     */
    _deleteFlagFile() {
        Utilities_1.Utilities.deleteFile(this._rushConfiguration.rushLinkJsonFilename);
    }
}
exports.UnlinkManager = UnlinkManager;
//# sourceMappingURL=UnlinkManager.js.map
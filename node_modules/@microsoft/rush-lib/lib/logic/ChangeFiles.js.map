{"version":3,"file":"ChangeFiles.js","sourceRoot":"","sources":["../../src/logic/ChangeFiles.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { EOL } from 'os';\r\nimport * as glob from 'glob';\r\n\r\nimport { Utilities } from '../utilities/Utilities';\r\nimport { IChangeInfo } from '../api/ChangeManagement';\r\nimport { IChangelog } from '../api/Changelog';\r\nimport { JsonFile } from '@microsoft/node-core-library';\r\n\r\n/**\r\n * This class represents the collection of change files existing in the repo and provides operations\r\n * for those change files.\r\n */\r\nexport class ChangeFiles {\r\n\r\n  /**\r\n   * Change file path relative to changes folder.\r\n   */\r\n  private _files: string[];\r\n  private _changesPath: string;\r\n\r\n  /**\r\n   * Validate if the newly added change files match the changed packages.\r\n   */\r\n  public static validate(\r\n    newChangeFilePaths: string[],\r\n    changedPackages: string[]\r\n  ): void {\r\n    const changedSet: Set<string> = new Set<string>();\r\n    newChangeFilePaths.forEach((filePath) => {\r\n      console.log(`Found change file: ${filePath}`);\r\n\r\n      const changeRequest: IChangeInfo = JsonFile.load(filePath);\r\n      if (changeRequest && changeRequest.changes) {\r\n        changeRequest.changes!.forEach(change => {\r\n          changedSet.add(change.packageName);\r\n        });\r\n      } else {\r\n        throw new Error(`Invalid change file: ${filePath}`);\r\n      }\r\n    });\r\n\r\n    const requiredSet: Set<string> = new Set(changedPackages);\r\n    changedSet.forEach((name) => {\r\n      requiredSet.delete(name);\r\n    });\r\n    if (requiredSet.size > 0) {\r\n      const missingProjects: string[] = [];\r\n      requiredSet.forEach(name => {\r\n        missingProjects.push(name);\r\n      });\r\n      throw new Error(`Change file does not contain ${missingProjects.join(',')}.`);\r\n    }\r\n  }\r\n\r\n  public static getChangeComments(\r\n    newChangeFilePaths: string[]\r\n  ): Map<string, string[]> {\r\n    const changes: Map<string, string[]> = new Map<string, string[]>();\r\n\r\n    newChangeFilePaths.forEach((filePath) => {\r\n      console.log(`Found change file: ${filePath}`);\r\n      const changeRequest: IChangeInfo = JsonFile.load(filePath);\r\n      if (changeRequest && changeRequest.changes) {\r\n        changeRequest.changes!.forEach(change => {\r\n          if (!changes.get(change.packageName)) {\r\n            changes.set(change.packageName, []);\r\n          }\r\n          if (change.comment && change.comment.length) {\r\n            changes.get(change.packageName)!.push(change.comment);\r\n          }\r\n        });\r\n      } else {\r\n        throw new Error(`Invalid change file: ${filePath}`);\r\n      }\r\n    });\r\n    return changes;\r\n  }\r\n\r\n  constructor(changesPath: string) {\r\n    this._changesPath = changesPath;\r\n  }\r\n\r\n  /**\r\n   * Get the array of absolute paths of change files.\r\n   */\r\n  public getFiles(): string[] {\r\n    if (this._files) {\r\n      return this._files;\r\n    }\r\n    this._files = glob.sync(`${this._changesPath}/**/*.json`);\r\n    return this._files || [];\r\n  }\r\n\r\n  /**\r\n   * Get the path of changes folder.\r\n   */\r\n  public getChangesPath(): string {\r\n    return this._changesPath;\r\n  }\r\n\r\n  /**\r\n   * Delete all change files\r\n   */\r\n  public deleteAll(shouldDelete: boolean, updatedChangelogs?: IChangelog[]): number {\r\n    if (updatedChangelogs) {\r\n      // Skip changes files if the package's change log is not updated.\r\n      const packagesToInclude: Set<string> = new Set<string>();\r\n      updatedChangelogs.forEach((changelog) => {\r\n        packagesToInclude.add(changelog.name);\r\n      });\r\n\r\n      const filesToDelete: string[] = this.getFiles().filter((filePath) => {\r\n        const changeRequest: IChangeInfo = JsonFile.load(filePath);\r\n        for (const changeInfo of changeRequest.changes!) {\r\n          if (!packagesToInclude.has(changeInfo.packageName)) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n\r\n      return this._deleteFiles(filesToDelete, shouldDelete);\r\n    } else {\r\n      // Delete all change files.\r\n      return this._deleteFiles(this.getFiles(), shouldDelete);\r\n    }\r\n  }\r\n\r\n  private _deleteFiles(files: string[], shouldDelete: boolean): number {\r\n    if (files.length) {\r\n      console.log(\r\n        `${EOL}* ` +\r\n        `${shouldDelete ? 'DELETING:' : 'DRYRUN: Deleting'} ` +\r\n        `${files.length} change file(s).`\r\n      );\r\n\r\n      for (const filePath of files) {\r\n        console.log(` - ${filePath}`);\r\n\r\n        if (shouldDelete) {\r\n          Utilities.deleteFile(filePath);\r\n        }\r\n      }\r\n    }\r\n    return files.length;\r\n  }\r\n}"]}
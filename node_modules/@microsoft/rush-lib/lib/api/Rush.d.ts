/**
 * General operations for the Rush engine.
 *
 * @public
 */
export declare class Rush {
    private static _version;
    /**
     * This API is used by the `@microsoft/rush` front end to launch the "rush" command-line.
     * Third-party tools should not use this API.  Instead, they should execute the "rush" binary
     * and start a new NodeJS process.
     *
     * @param launcherVersion - The version of the `@microsoft/rush` wrapper used to call invoke the CLI.
     * @param isManaged - True if the tool was invoked from within a project with a rush.json file, otherwise false. We
     *  consider a project without a rush.json to be "unmanaged" and we'll print that to the command line when
     *  the tool is executed. This is mainly used for debugging purposes.
     */
    static launch(launcherVersion: string, isManaged: boolean): void;
    /**
     * This API is used by the `@microsoft/rush` front end to launch the "rushx" command-line.
     * Third-party tools should not use this API.  Instead, they should execute the "rushx" binary
     * and start a new NodeJS process.
     *
     * @param launcherVersion - The version of the `@microsoft/rush` wrapper used to call invoke the CLI.
     * @param isManaged - True if the tool was invoked from within a project with a rush.json file, otherwise false. We
     *  consider a project without a rush.json to be "unmanaged" and we'll print that to the command line when
     *  the tool is executed. This is mainly used for debugging purposes.
     */
    static launchRushX(launcherVersion: string, isManaged: boolean): void;
    /**
     * The currently executing version of the "rush-lib" library.
     * This is the same as the Rush tool version for that release.
     */
    static readonly version: string;
    private static _printStartupBanner;
}

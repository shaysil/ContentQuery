import { ITerminalProvider, TerminalProviderSeverity } from './ITerminalProvider';
/**
 * Terminal provider that stores written data in buffers separated by severity.
 * This terminal provider is designed to be used when code that prints to a terminal
 * is being unit tested.
 *
 * @beta
 */
export declare class StringBufferTerminalProvider implements ITerminalProvider {
    private _standardBuffer;
    private _verboseBuffer;
    private _warningBuffer;
    private _errorBuffer;
    private _supportsColor;
    constructor(supportsColor?: boolean);
    /**
     * {@inheritdoc ITerminalProvider.write}
     */
    write(data: string, severity: TerminalProviderSeverity): void;
    /**
     * {@inheritdoc ITerminalProvider.eolCharacter}
     */
    readonly eolCharacter: string;
    /**
     * {@inheritdoc ITerminalProvider.supportsColor}
     */
    readonly supportsColor: boolean;
    /**
     * Get everything that has been written at log-level severity.
     */
    getOutput(): string;
    /**
     * Get everything that has been written at verbose-level severity.
     */
    getVerbose(): string;
    /**
     * Get everything that has been written at error-level severity.
     */
    getErrorOutput(): string;
    /**
     * Get everything that has been written at warning-level severity.
     */
    getWarningOutput(): string;
    private _normalizeOutput;
}

"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * For a symbol that was imported from an external package, this tracks the import
 * statement that was used to reach it.
 */
class AstImport {
    constructor(options) {
        this.modulePath = options.modulePath;
        this.exportName = options.exportName;
        this.starImport = options.starImport || false;
        this.key = AstImport.getKey(options);
    }
    /**
     * Allows `AstEntity.localName` to be used as a convenient generalization of `AstSymbol.localName` and
     * `AstImport.exportName`.
     */
    get localName() {
        return this.exportName;
    }
    /**
     * Calculates the lookup key used with `AstImport.key`
     */
    static getKey(options) {
        if (options.starImport) {
            return `${options.modulePath}:*`;
        }
        else {
            return `${options.modulePath}:${options.exportName}`;
        }
    }
}
exports.AstImport = AstImport;
//# sourceMappingURL=AstImport.js.map